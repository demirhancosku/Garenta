/*
 
 Auto-Generated by SAP NetWeaver Gateway Productivity Accelerator, Version 1.1.1
  
 File: ZGARENTA_OFIS_SRVServiceV0.h
 Abstract: The generated proxy classes for the ZGARENTA_OFIS_SRV Service.  
*/

#import "ZGARENTA_OFIS_SRVServiceV0.h"
#import "BaseODataObject.h"
#import "Logger.h"
#import "ODataEntitySchema.h"
#import "ODataCollection.h"
#import "ODataFunctionImport.h"
#import "TypeConverter.h"

#define ZGARENTA_OFIS_SRV_SERVICE_DOCUMENTV0 @"ZGARENTA_OFIS_SRVServiceDocumentV0"
#define ZGARENTA_OFIS_SRV_SERVICE_METADATAV0 @"ZGARENTA_OFIS_SRVServiceMetadataV0"

#pragma mark - Complex Types



#pragma mark - Entity Types


#pragma mark - EXPT_CALISMA_ZAMANIV0
@implementation EXPT_CALISMA_ZAMANIV0

static NSMutableDictionary *eXPT_CALISMA_ZAMANILabels = nil;
static ODataEntitySchema *eXPT_CALISMA_ZAMANIEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:eXPT_CALISMA_ZAMANIEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}



- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setTimeValueForSDMEntry:m_SDMEntry withValue:self.Endti forSDMPropertyWithName:@"Endti" error:&innerError];
    	[BaseODataObject setTimeValueForSDMEntry:m_SDMEntry withValue:self.Begti forSDMPropertyWithName:@"Begti" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Cadaytx forSDMPropertyWithName:@"Cadaytx" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Caday forSDMPropertyWithName:@"Caday" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.AltSube forSDMPropertyWithName:@"AltSube" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MerkezSube forSDMPropertyWithName:@"MerkezSube" error:&innerError];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"EXPT_CALISMA_ZAMANISet" workspaceOfCollection:nil];
    eXPT_CALISMA_ZAMANIEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"EXPT_CALISMA_ZAMANISet" andService:aService];
    	if (properties) {    
	    	eXPT_CALISMA_ZAMANILabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
	        	eXPT_CALISMA_ZAMANILabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:eXPT_CALISMA_ZAMANILabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.Endti = [self getTimeValueForSDMPropertyWithName:@"Endti"];
	self.Begti = [self getTimeValueForSDMPropertyWithName:@"Begti"];
	self.Cadaytx = [self getStringValueForSDMPropertyWithName:@"Cadaytx"];
	self.Caday = [self getStringValueForSDMPropertyWithName:@"Caday"];
	self.AltSube = [self getStringValueForSDMPropertyWithName:@"AltSube"];
	self.MerkezSube = [self getStringValueForSDMPropertyWithName:@"MerkezSube"];
}

+ (NSMutableArray *)createEXPT_CALISMA_ZAMANIEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        EXPT_CALISMA_ZAMANIV0 *eXPT_CALISMA_ZAMANIObject = [[EXPT_CALISMA_ZAMANIV0 alloc] initWithSDMEntry:entry];
        [entries addObject:eXPT_CALISMA_ZAMANIObject];
    }
    return entries;
}


+ (NSMutableArray *)parseEXPT_CALISMA_ZAMANIEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:eXPT_CALISMA_ZAMANIEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [EXPT_CALISMA_ZAMANIV0 createEXPT_CALISMA_ZAMANIEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedEXPT_CALISMA_ZAMANIEntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eXPT_CALISMA_ZAMANIEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [EXPT_CALISMA_ZAMANIV0 createEXPT_CALISMA_ZAMANIEntriesForSDMEntries:sdmEntries];
}

+ (EXPT_CALISMA_ZAMANIV0 *)parseEXPT_CALISMA_ZAMANIEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *eXPT_CALISMA_ZAMANIEntries = [EXPT_CALISMA_ZAMANIV0 parseEXPT_CALISMA_ZAMANIEntriesWithData:aData error:error];
    if (!eXPT_CALISMA_ZAMANIEntries) {
    	return nil;
    }
    return (EXPT_CALISMA_ZAMANIV0 *)[EXPT_CALISMA_ZAMANIV0 getFirstObjectFromArray:eXPT_CALISMA_ZAMANIEntries];
}

+ (EXPT_CALISMA_ZAMANIV0 *)parseExpandedEXPT_CALISMA_ZAMANIEntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eXPT_CALISMA_ZAMANIEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *eXPT_CALISMA_ZAMANIEntries = [EXPT_CALISMA_ZAMANIV0 createEXPT_CALISMA_ZAMANIEntriesForSDMEntries:sdmEntries];
	return (EXPT_CALISMA_ZAMANIV0 *)[EXPT_CALISMA_ZAMANIV0 getFirstObjectFromArray:eXPT_CALISMA_ZAMANIEntries];
}



@end

#pragma mark - EXPT_SUBE_BILGILERIV0
@implementation EXPT_SUBE_BILGILERIV0

static NSMutableDictionary *eXPT_SUBE_BILGILERILabels = nil;
static ODataEntitySchema *eXPT_SUBE_BILGILERIEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:eXPT_SUBE_BILGILERIEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}



- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Aktifsube forSDMPropertyWithName:@"Aktifsube" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Ceptel forSDMPropertyWithName:@"Ceptel" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Email forSDMPropertyWithName:@"Email" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Fax forSDMPropertyWithName:@"Fax" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Tel forSDMPropertyWithName:@"Tel" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Adres forSDMPropertyWithName:@"Adres" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Ykord forSDMPropertyWithName:@"Ykord" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Xkord forSDMPropertyWithName:@"Xkord" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Kostltx forSDMPropertyWithName:@"Kostltx" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Kostl forSDMPropertyWithName:@"Kostl" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Gsbertx forSDMPropertyWithName:@"Gsbertx" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Gsber forSDMPropertyWithName:@"Gsber" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Sehirtx forSDMPropertyWithName:@"Sehirtx" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Sehir forSDMPropertyWithName:@"Sehir" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Bolgetx forSDMPropertyWithName:@"Bolgetx" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Bolge forSDMPropertyWithName:@"Bolge" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.AltSubetiptx forSDMPropertyWithName:@"AltSubetiptx" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.AltSubetip forSDMPropertyWithName:@"AltSubetip" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.AltSubetx forSDMPropertyWithName:@"AltSubetx" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.AltSube forSDMPropertyWithName:@"AltSube" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MerkezSubetx forSDMPropertyWithName:@"MerkezSubetx" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MerkezSube forSDMPropertyWithName:@"MerkezSube" error:&innerError];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"EXPT_SUBE_BILGILERISet" workspaceOfCollection:nil];
    eXPT_SUBE_BILGILERIEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"EXPT_SUBE_BILGILERISet" andService:aService];
    	if (properties) {    
	    	eXPT_SUBE_BILGILERILabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
	        	eXPT_SUBE_BILGILERILabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:eXPT_SUBE_BILGILERILabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.Aktifsube = [self getStringValueForSDMPropertyWithName:@"Aktifsube"];
	self.Ceptel = [self getStringValueForSDMPropertyWithName:@"Ceptel"];
	self.Email = [self getStringValueForSDMPropertyWithName:@"Email"];
	self.Fax = [self getStringValueForSDMPropertyWithName:@"Fax"];
	self.Tel = [self getStringValueForSDMPropertyWithName:@"Tel"];
	self.Adres = [self getStringValueForSDMPropertyWithName:@"Adres"];
	self.Ykord = [self getStringValueForSDMPropertyWithName:@"Ykord"];
	self.Xkord = [self getStringValueForSDMPropertyWithName:@"Xkord"];
	self.Kostltx = [self getStringValueForSDMPropertyWithName:@"Kostltx"];
	self.Kostl = [self getStringValueForSDMPropertyWithName:@"Kostl"];
	self.Gsbertx = [self getStringValueForSDMPropertyWithName:@"Gsbertx"];
	self.Gsber = [self getStringValueForSDMPropertyWithName:@"Gsber"];
	self.Sehirtx = [self getStringValueForSDMPropertyWithName:@"Sehirtx"];
	self.Sehir = [self getStringValueForSDMPropertyWithName:@"Sehir"];
	self.Bolgetx = [self getStringValueForSDMPropertyWithName:@"Bolgetx"];
	self.Bolge = [self getStringValueForSDMPropertyWithName:@"Bolge"];
	self.AltSubetiptx = [self getStringValueForSDMPropertyWithName:@"AltSubetiptx"];
	self.AltSubetip = [self getStringValueForSDMPropertyWithName:@"AltSubetip"];
	self.AltSubetx = [self getStringValueForSDMPropertyWithName:@"AltSubetx"];
	self.AltSube = [self getStringValueForSDMPropertyWithName:@"AltSube"];
	self.MerkezSubetx = [self getStringValueForSDMPropertyWithName:@"MerkezSubetx"];
	self.MerkezSube = [self getStringValueForSDMPropertyWithName:@"MerkezSube"];
}

+ (NSMutableArray *)createEXPT_SUBE_BILGILERIEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        EXPT_SUBE_BILGILERIV0 *eXPT_SUBE_BILGILERIObject = [[EXPT_SUBE_BILGILERIV0 alloc] initWithSDMEntry:entry];
        [entries addObject:eXPT_SUBE_BILGILERIObject];
    }
    return entries;
}


+ (NSMutableArray *)parseEXPT_SUBE_BILGILERIEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:eXPT_SUBE_BILGILERIEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [EXPT_SUBE_BILGILERIV0 createEXPT_SUBE_BILGILERIEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedEXPT_SUBE_BILGILERIEntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eXPT_SUBE_BILGILERIEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [EXPT_SUBE_BILGILERIV0 createEXPT_SUBE_BILGILERIEntriesForSDMEntries:sdmEntries];
}

+ (EXPT_SUBE_BILGILERIV0 *)parseEXPT_SUBE_BILGILERIEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *eXPT_SUBE_BILGILERIEntries = [EXPT_SUBE_BILGILERIV0 parseEXPT_SUBE_BILGILERIEntriesWithData:aData error:error];
    if (!eXPT_SUBE_BILGILERIEntries) {
    	return nil;
    }
    return (EXPT_SUBE_BILGILERIV0 *)[EXPT_SUBE_BILGILERIV0 getFirstObjectFromArray:eXPT_SUBE_BILGILERIEntries];
}

+ (EXPT_SUBE_BILGILERIV0 *)parseExpandedEXPT_SUBE_BILGILERIEntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eXPT_SUBE_BILGILERIEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *eXPT_SUBE_BILGILERIEntries = [EXPT_SUBE_BILGILERIV0 createEXPT_SUBE_BILGILERIEntriesForSDMEntries:sdmEntries];
	return (EXPT_SUBE_BILGILERIV0 *)[EXPT_SUBE_BILGILERIV0 getFirstObjectFromArray:eXPT_SUBE_BILGILERIEntries];
}



@end

#pragma mark - EXPT_TATIL_ZAMANIV0
@implementation EXPT_TATIL_ZAMANIV0

static NSMutableDictionary *eXPT_TATIL_ZAMANILabels = nil;
static ODataEntitySchema *eXPT_TATIL_ZAMANIEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:eXPT_TATIL_ZAMANIEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}



- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setTimeValueForSDMEntry:m_SDMEntry withValue:self.Endti forSDMPropertyWithName:@"Endti" error:&innerError];
    	[BaseODataObject setTimeValueForSDMEntry:m_SDMEntry withValue:self.Begti forSDMPropertyWithName:@"Begti" error:&innerError];
    	[BaseODataObject setDateTimeValueForSDMEntry:m_SDMEntry withValue:self.Begda forSDMPropertyWithName:@"Begda" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.AltSube forSDMPropertyWithName:@"AltSube" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MerkezSube forSDMPropertyWithName:@"MerkezSube" error:&innerError];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"EXPT_TATIL_ZAMANISet" workspaceOfCollection:nil];
    eXPT_TATIL_ZAMANIEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"EXPT_TATIL_ZAMANISet" andService:aService];
    	if (properties) {    
	    	eXPT_TATIL_ZAMANILabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
	        	eXPT_TATIL_ZAMANILabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:eXPT_TATIL_ZAMANILabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.Endti = [self getTimeValueForSDMPropertyWithName:@"Endti"];
	self.Begti = [self getTimeValueForSDMPropertyWithName:@"Begti"];
	self.Begda = [self getDateTimeValueForSDMPropertyWithName:@"Begda"];
	self.AltSube = [self getStringValueForSDMPropertyWithName:@"AltSube"];
	self.MerkezSube = [self getStringValueForSDMPropertyWithName:@"MerkezSube"];
}

+ (NSMutableArray *)createEXPT_TATIL_ZAMANIEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        EXPT_TATIL_ZAMANIV0 *eXPT_TATIL_ZAMANIObject = [[EXPT_TATIL_ZAMANIV0 alloc] initWithSDMEntry:entry];
        [entries addObject:eXPT_TATIL_ZAMANIObject];
    }
    return entries;
}


+ (NSMutableArray *)parseEXPT_TATIL_ZAMANIEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:eXPT_TATIL_ZAMANIEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [EXPT_TATIL_ZAMANIV0 createEXPT_TATIL_ZAMANIEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedEXPT_TATIL_ZAMANIEntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eXPT_TATIL_ZAMANIEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [EXPT_TATIL_ZAMANIV0 createEXPT_TATIL_ZAMANIEntriesForSDMEntries:sdmEntries];
}

+ (EXPT_TATIL_ZAMANIV0 *)parseEXPT_TATIL_ZAMANIEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *eXPT_TATIL_ZAMANIEntries = [EXPT_TATIL_ZAMANIV0 parseEXPT_TATIL_ZAMANIEntriesWithData:aData error:error];
    if (!eXPT_TATIL_ZAMANIEntries) {
    	return nil;
    }
    return (EXPT_TATIL_ZAMANIV0 *)[EXPT_TATIL_ZAMANIV0 getFirstObjectFromArray:eXPT_TATIL_ZAMANIEntries];
}

+ (EXPT_TATIL_ZAMANIV0 *)parseExpandedEXPT_TATIL_ZAMANIEntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eXPT_TATIL_ZAMANIEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *eXPT_TATIL_ZAMANIEntries = [EXPT_TATIL_ZAMANIV0 createEXPT_TATIL_ZAMANIEntriesForSDMEntries:sdmEntries];
	return (EXPT_TATIL_ZAMANIV0 *)[EXPT_TATIL_ZAMANIV0 getFirstObjectFromArray:eXPT_TATIL_ZAMANIEntries];
}



@end

#pragma mark - OfficeServiceV0
@implementation OfficeServiceV0

static NSMutableDictionary *officeServiceLabels = nil;
static ODataEntitySchema *officeServiceEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:officeServiceEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}

- (NSMutableDictionary *)getSDMEntriesForNavigationProperties
{
    NSMutableDictionary *dictionary = [@{} mutableCopy];
    if ([self.EXPT_TATIL_ZAMANISet count] > 0) {
    	dictionary[@"EXPT_TATIL_ZAMANISet"] = [self createSDMEntriesForNavigationPropertyEntries:self.EXPT_TATIL_ZAMANISet];
    }
    if ([self.EXPT_SUBE_BILGILERISet count] > 0) {
    	dictionary[@"EXPT_SUBE_BILGILERISet"] = [self createSDMEntriesForNavigationPropertyEntries:self.EXPT_SUBE_BILGILERISet];
    }
    if ([self.EXPT_CALISMA_ZAMANISet count] > 0) {
    	dictionary[@"EXPT_CALISMA_ZAMANISet"] = [self createSDMEntriesForNavigationPropertyEntries:self.EXPT_CALISMA_ZAMANISet];
    }
    return dictionary;
}


- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Message forSDMPropertyWithName:@"Message" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Type forSDMPropertyWithName:@"Type" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ImppMerkezSube forSDMPropertyWithName:@"ImppMerkezSube" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ImppBolge forSDMPropertyWithName:@"ImppBolge" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ImppAltSube forSDMPropertyWithName:@"ImppAltSube" error:&innerError];
        [self addRelativeLinksToSDMEntryFromDictionary:[self getSDMEntriesForNavigationProperties]];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"OfficeServiceSet" workspaceOfCollection:nil];
    officeServiceEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"OfficeServiceSet" andService:aService];
    	if (properties) {    
	    	officeServiceLabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
	        	officeServiceLabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:officeServiceLabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.Message = [self getStringValueForSDMPropertyWithName:@"Message"];
	self.Type = [self getStringValueForSDMPropertyWithName:@"Type"];
	self.ImppMerkezSube = [self getStringValueForSDMPropertyWithName:@"ImppMerkezSube"];
	self.ImppBolge = [self getStringValueForSDMPropertyWithName:@"ImppBolge"];
	self.ImppAltSube = [self getStringValueForSDMPropertyWithName:@"ImppAltSube"];
}

- (void)loadNavigationPropertyQueries
{
    [super loadNavigationPropertyQueries];
    self.EXPT_TATIL_ZAMANISetQuery = [self getRelatedLinkForNavigationName:@"EXPT_TATIL_ZAMANISet"];
    self.EXPT_SUBE_BILGILERISetQuery = [self getRelatedLinkForNavigationName:@"EXPT_SUBE_BILGILERISet"];
    self.EXPT_CALISMA_ZAMANISetQuery = [self getRelatedLinkForNavigationName:@"EXPT_CALISMA_ZAMANISet"];
}

- (void)loadNavigationPropertyData
{
    [super loadNavigationPropertyData];
    
    NSMutableArray *entries = nil;

    entries = [self getInlinedRelatedEntriesForNavigationName:@"EXPT_TATIL_ZAMANISet"];
    self.EXPT_TATIL_ZAMANISet = [EXPT_TATIL_ZAMANIV0 createEXPT_TATIL_ZAMANIEntriesForSDMEntries:entries];

    entries = [self getInlinedRelatedEntriesForNavigationName:@"EXPT_SUBE_BILGILERISet"];
    self.EXPT_SUBE_BILGILERISet = [EXPT_SUBE_BILGILERIV0 createEXPT_SUBE_BILGILERIEntriesForSDMEntries:entries];

    entries = [self getInlinedRelatedEntriesForNavigationName:@"EXPT_CALISMA_ZAMANISet"];
    self.EXPT_CALISMA_ZAMANISet = [EXPT_CALISMA_ZAMANIV0 createEXPT_CALISMA_ZAMANIEntriesForSDMEntries:entries];

}

+ (NSMutableArray *)createOfficeServiceEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        OfficeServiceV0 *officeServiceObject = [[OfficeServiceV0 alloc] initWithSDMEntry:entry];
        [entries addObject:officeServiceObject];
    }
    return entries;
}


+ (NSMutableArray *)parseOfficeServiceEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:officeServiceEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [OfficeServiceV0 createOfficeServiceEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedOfficeServiceEntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:officeServiceEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [OfficeServiceV0 createOfficeServiceEntriesForSDMEntries:sdmEntries];
}

+ (OfficeServiceV0 *)parseOfficeServiceEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *officeServiceEntries = [OfficeServiceV0 parseOfficeServiceEntriesWithData:aData error:error];
    if (!officeServiceEntries) {
    	return nil;
    }
    return (OfficeServiceV0 *)[OfficeServiceV0 getFirstObjectFromArray:officeServiceEntries];
}

+ (OfficeServiceV0 *)parseExpandedOfficeServiceEntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:officeServiceEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *officeServiceEntries = [OfficeServiceV0 createOfficeServiceEntriesForSDMEntries:sdmEntries];
	return (OfficeServiceV0 *)[OfficeServiceV0 getFirstObjectFromArray:officeServiceEntries];
}


#pragma mark Entity Navigation Property loading methods
- (BOOL)loadEXPT_TATIL_ZAMANISetWithData:(NSData *)aData error:(NSError **)error
{
    self.EXPT_TATIL_ZAMANISet = [EXPT_TATIL_ZAMANIV0 parseEXPT_TATIL_ZAMANIEntriesWithData:aData error:error];
    if (!self.EXPT_TATIL_ZAMANISet) {
    	return NO;
    }
    return YES;
}

- (BOOL)loadEXPT_SUBE_BILGILERISetWithData:(NSData *)aData error:(NSError **)error
{
    self.EXPT_SUBE_BILGILERISet = [EXPT_SUBE_BILGILERIV0 parseEXPT_SUBE_BILGILERIEntriesWithData:aData error:error];
    if (!self.EXPT_SUBE_BILGILERISet) {
    	return NO;
    }
    return YES;
}

- (BOOL)loadEXPT_CALISMA_ZAMANISetWithData:(NSData *)aData error:(NSError **)error
{
    self.EXPT_CALISMA_ZAMANISet = [EXPT_CALISMA_ZAMANIV0 parseEXPT_CALISMA_ZAMANIEntriesWithData:aData error:error];
    if (!self.EXPT_CALISMA_ZAMANISet) {
    	return NO;
    }
    return YES;
}


@end


#pragma mark - ZGARENTA_OFIS_SRVV0 Service Proxy


@implementation ZGARENTA_OFIS_SRVServiceV0

- (NSString *)getServiceDocumentFilename
{
	return ZGARENTA_OFIS_SRV_SERVICE_DOCUMENTV0;
}

- (NSString *)getServiceMetadataFilename
{
	return ZGARENTA_OFIS_SRV_SERVICE_METADATAV0;
}

- (void)loadEntitySetQueries
{
	[super loadEntitySetQueries];
    self.EXPT_CALISMA_ZAMANISetQuery = [self getQueryForRelativePath:@"EXPT_CALISMA_ZAMANISet"];
    self.EXPT_SUBE_BILGILERISetQuery = [self getQueryForRelativePath:@"EXPT_SUBE_BILGILERISet"];
    self.EXPT_TATIL_ZAMANISetQuery = [self getQueryForRelativePath:@"EXPT_TATIL_ZAMANISet"];
    self.OfficeServiceSetQuery = [self getQueryForRelativePath:@"OfficeServiceSet"];
}

- (void)loadEntitySchemaForAllEntityTypes
{
    [super loadEntitySchemaForAllEntityTypes];
    [EXPT_CALISMA_ZAMANIV0 loadEntitySchema:self.sdmServiceDocument];
    [EXPT_SUBE_BILGILERIV0 loadEntitySchema:self.sdmServiceDocument];
    [EXPT_TATIL_ZAMANIV0 loadEntitySchema:self.sdmServiceDocument];
    [OfficeServiceV0 loadEntitySchema:self.sdmServiceDocument];
}

- (void)loadLabels
{
    [super loadLabels];
    [EXPT_CALISMA_ZAMANIV0 loadLabels:self.sdmServiceDocument];
    [EXPT_SUBE_BILGILERIV0 loadLabels:self.sdmServiceDocument];
    [EXPT_TATIL_ZAMANIV0 loadLabels:self.sdmServiceDocument];
    [OfficeServiceV0 loadLabels:self.sdmServiceDocument];
}

 
#pragma mark Service Entity Set methods
- (NSMutableArray *)getEXPT_CALISMA_ZAMANISetWithData:(NSData *)aData error:(NSError **)error
{
	return [EXPT_CALISMA_ZAMANIV0 parseExpandedEXPT_CALISMA_ZAMANIEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getEXPT_CALISMA_ZAMANISetEntryQueryWithEndti:(NSString *)Endti andBegti:(NSString *)Begti andCadaytx:(NSString *)Cadaytx andCaday:(NSString *)Caday andAltSube:(NSString *)AltSube andMerkezSube:(NSString *)MerkezSube
{
	Endti = [ODataQuery encodeURLParameter:Endti];
	Begti = [ODataQuery encodeURLParameter:Begti];
	Cadaytx = [ODataQuery encodeURLParameter:Cadaytx];
	Caday = [ODataQuery encodeURLParameter:Caday];
	AltSube = [ODataQuery encodeURLParameter:AltSube];
	MerkezSube = [ODataQuery encodeURLParameter:MerkezSube];
	NSString *relativePath = [NSString stringWithFormat:@"EXPT_CALISMA_ZAMANISet(Endti=%@,Begti=%@,Cadaytx=%@,Caday=%@,AltSube=%@,MerkezSube=%@)", Endti, Begti, Cadaytx, Caday, AltSube, MerkezSube];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getEXPT_CALISMA_ZAMANISetEntryQueryTypedWithEndti:(ODataDuration *)Endti andBegti:(ODataDuration *)Begti andCadaytx:(NSString *)Cadaytx andCaday:(NSString *)Caday andAltSube:(NSString *)AltSube andMerkezSube:(NSString *)MerkezSube
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *EndtiUri = [ODataQuery encodeURLParameter:[converter convertToEdmTimeURI:Endti]];
	NSString *BegtiUri = [ODataQuery encodeURLParameter:[converter convertToEdmTimeURI:Begti]];
	NSString *CadaytxUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Cadaytx]];
	NSString *CadayUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Caday]];
	NSString *AltSubeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:AltSube]];
	NSString *MerkezSubeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:MerkezSube]];
	NSString *relativePath = [NSString stringWithFormat:@"EXPT_CALISMA_ZAMANISet(Endti=%@,Begti=%@,Cadaytx=%@,Caday=%@,AltSube=%@,MerkezSube=%@)", EndtiUri, BegtiUri, CadaytxUri, CadayUri, AltSubeUri, MerkezSubeUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (EXPT_CALISMA_ZAMANIV0 *)getEXPT_CALISMA_ZAMANISetEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [EXPT_CALISMA_ZAMANIV0 parseExpandedEXPT_CALISMA_ZAMANIEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (NSMutableArray *)getEXPT_SUBE_BILGILERISetWithData:(NSData *)aData error:(NSError **)error
{
	return [EXPT_SUBE_BILGILERIV0 parseExpandedEXPT_SUBE_BILGILERIEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getEXPT_SUBE_BILGILERISetEntryQueryWithCeptel:(NSString *)Ceptel andEmail:(NSString *)Email andFax:(NSString *)Fax andTel:(NSString *)Tel andAdres:(NSString *)Adres andYkord:(NSString *)Ykord andXkord:(NSString *)Xkord andKostltx:(NSString *)Kostltx andKostl:(NSString *)Kostl andGsbertx:(NSString *)Gsbertx andGsber:(NSString *)Gsber andSehirtx:(NSString *)Sehirtx andSehir:(NSString *)Sehir andBolgetx:(NSString *)Bolgetx andBolge:(NSString *)Bolge andAltSubetiptx:(NSString *)AltSubetiptx andAltSubetip:(NSString *)AltSubetip andAltSubetx:(NSString *)AltSubetx andAltSube:(NSString *)AltSube andMerkezSubetx:(NSString *)MerkezSubetx andMerkezSube:(NSString *)MerkezSube
{
	Ceptel = [ODataQuery encodeURLParameter:Ceptel];
	Email = [ODataQuery encodeURLParameter:Email];
	Fax = [ODataQuery encodeURLParameter:Fax];
	Tel = [ODataQuery encodeURLParameter:Tel];
	Adres = [ODataQuery encodeURLParameter:Adres];
	Ykord = [ODataQuery encodeURLParameter:Ykord];
	Xkord = [ODataQuery encodeURLParameter:Xkord];
	Kostltx = [ODataQuery encodeURLParameter:Kostltx];
	Kostl = [ODataQuery encodeURLParameter:Kostl];
	Gsbertx = [ODataQuery encodeURLParameter:Gsbertx];
	Gsber = [ODataQuery encodeURLParameter:Gsber];
	Sehirtx = [ODataQuery encodeURLParameter:Sehirtx];
	Sehir = [ODataQuery encodeURLParameter:Sehir];
	Bolgetx = [ODataQuery encodeURLParameter:Bolgetx];
	Bolge = [ODataQuery encodeURLParameter:Bolge];
	AltSubetiptx = [ODataQuery encodeURLParameter:AltSubetiptx];
	AltSubetip = [ODataQuery encodeURLParameter:AltSubetip];
	AltSubetx = [ODataQuery encodeURLParameter:AltSubetx];
	AltSube = [ODataQuery encodeURLParameter:AltSube];
	MerkezSubetx = [ODataQuery encodeURLParameter:MerkezSubetx];
	MerkezSube = [ODataQuery encodeURLParameter:MerkezSube];
	NSString *relativePath = [NSString stringWithFormat:@"EXPT_SUBE_BILGILERISet(Ceptel=%@,Email=%@,Fax=%@,Tel=%@,Adres=%@,Ykord=%@,Xkord=%@,Kostltx=%@,Kostl=%@,Gsbertx=%@,Gsber=%@,Sehirtx=%@,Sehir=%@,Bolgetx=%@,Bolge=%@,AltSubetiptx=%@,AltSubetip=%@,AltSubetx=%@,AltSube=%@,MerkezSubetx=%@,MerkezSube=%@)", Ceptel, Email, Fax, Tel, Adres, Ykord, Xkord, Kostltx, Kostl, Gsbertx, Gsber, Sehirtx, Sehir, Bolgetx, Bolge, AltSubetiptx, AltSubetip, AltSubetx, AltSube, MerkezSubetx, MerkezSube];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getEXPT_SUBE_BILGILERISetEntryQueryTypedWithCeptel:(NSString *)Ceptel andEmail:(NSString *)Email andFax:(NSString *)Fax andTel:(NSString *)Tel andAdres:(NSString *)Adres andYkord:(NSString *)Ykord andXkord:(NSString *)Xkord andKostltx:(NSString *)Kostltx andKostl:(NSString *)Kostl andGsbertx:(NSString *)Gsbertx andGsber:(NSString *)Gsber andSehirtx:(NSString *)Sehirtx andSehir:(NSString *)Sehir andBolgetx:(NSString *)Bolgetx andBolge:(NSString *)Bolge andAltSubetiptx:(NSString *)AltSubetiptx andAltSubetip:(NSString *)AltSubetip andAltSubetx:(NSString *)AltSubetx andAltSube:(NSString *)AltSube andMerkezSubetx:(NSString *)MerkezSubetx andMerkezSube:(NSString *)MerkezSube
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *CeptelUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Ceptel]];
	NSString *EmailUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Email]];
	NSString *FaxUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Fax]];
	NSString *TelUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Tel]];
	NSString *AdresUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Adres]];
	NSString *YkordUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Ykord]];
	NSString *XkordUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Xkord]];
	NSString *KostltxUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Kostltx]];
	NSString *KostlUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Kostl]];
	NSString *GsbertxUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Gsbertx]];
	NSString *GsberUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Gsber]];
	NSString *SehirtxUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Sehirtx]];
	NSString *SehirUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Sehir]];
	NSString *BolgetxUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Bolgetx]];
	NSString *BolgeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Bolge]];
	NSString *AltSubetiptxUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:AltSubetiptx]];
	NSString *AltSubetipUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:AltSubetip]];
	NSString *AltSubetxUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:AltSubetx]];
	NSString *AltSubeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:AltSube]];
	NSString *MerkezSubetxUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:MerkezSubetx]];
	NSString *MerkezSubeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:MerkezSube]];
	NSString *relativePath = [NSString stringWithFormat:@"EXPT_SUBE_BILGILERISet(Ceptel=%@,Email=%@,Fax=%@,Tel=%@,Adres=%@,Ykord=%@,Xkord=%@,Kostltx=%@,Kostl=%@,Gsbertx=%@,Gsber=%@,Sehirtx=%@,Sehir=%@,Bolgetx=%@,Bolge=%@,AltSubetiptx=%@,AltSubetip=%@,AltSubetx=%@,AltSube=%@,MerkezSubetx=%@,MerkezSube=%@)", CeptelUri, EmailUri, FaxUri, TelUri, AdresUri, YkordUri, XkordUri, KostltxUri, KostlUri, GsbertxUri, GsberUri, SehirtxUri, SehirUri, BolgetxUri, BolgeUri, AltSubetiptxUri, AltSubetipUri, AltSubetxUri, AltSubeUri, MerkezSubetxUri, MerkezSubeUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (EXPT_SUBE_BILGILERIV0 *)getEXPT_SUBE_BILGILERISetEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [EXPT_SUBE_BILGILERIV0 parseExpandedEXPT_SUBE_BILGILERIEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (NSMutableArray *)getEXPT_TATIL_ZAMANISetWithData:(NSData *)aData error:(NSError **)error
{
	return [EXPT_TATIL_ZAMANIV0 parseExpandedEXPT_TATIL_ZAMANIEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getEXPT_TATIL_ZAMANISetEntryQueryWithEndti:(NSString *)Endti andBegti:(NSString *)Begti andBegda:(NSString *)Begda andAltSube:(NSString *)AltSube andMerkezSube:(NSString *)MerkezSube
{
	Endti = [ODataQuery encodeURLParameter:Endti];
	Begti = [ODataQuery encodeURLParameter:Begti];
	Begda = [ODataQuery encodeURLParameter:Begda];
	AltSube = [ODataQuery encodeURLParameter:AltSube];
	MerkezSube = [ODataQuery encodeURLParameter:MerkezSube];
	NSString *relativePath = [NSString stringWithFormat:@"EXPT_TATIL_ZAMANISet(Endti=%@,Begti=%@,Begda=%@,AltSube=%@,MerkezSube=%@)", Endti, Begti, Begda, AltSube, MerkezSube];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getEXPT_TATIL_ZAMANISetEntryQueryTypedWithEndti:(ODataDuration *)Endti andBegti:(ODataDuration *)Begti andBegda:(NSDate *)Begda andAltSube:(NSString *)AltSube andMerkezSube:(NSString *)MerkezSube
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *EndtiUri = [ODataQuery encodeURLParameter:[converter convertToEdmTimeURI:Endti]];
	NSString *BegtiUri = [ODataQuery encodeURLParameter:[converter convertToEdmTimeURI:Begti]];
	NSString *BegdaUri = [ODataQuery encodeURLParameter:[converter convertToEdmDateTimeURI:Begda]];
	NSString *AltSubeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:AltSube]];
	NSString *MerkezSubeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:MerkezSube]];
	NSString *relativePath = [NSString stringWithFormat:@"EXPT_TATIL_ZAMANISet(Endti=%@,Begti=%@,Begda=%@,AltSube=%@,MerkezSube=%@)", EndtiUri, BegtiUri, BegdaUri, AltSubeUri, MerkezSubeUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (EXPT_TATIL_ZAMANIV0 *)getEXPT_TATIL_ZAMANISetEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [EXPT_TATIL_ZAMANIV0 parseExpandedEXPT_TATIL_ZAMANIEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (NSMutableArray *)getOfficeServiceSetWithData:(NSData *)aData error:(NSError **)error
{
	return [OfficeServiceV0 parseExpandedOfficeServiceEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getOfficeServiceSetEntryQueryWithImppMerkezSube:(NSString *)ImppMerkezSube andImppBolge:(NSString *)ImppBolge andImppAltSube:(NSString *)ImppAltSube
{
	ImppMerkezSube = [ODataQuery encodeURLParameter:ImppMerkezSube];
	ImppBolge = [ODataQuery encodeURLParameter:ImppBolge];
	ImppAltSube = [ODataQuery encodeURLParameter:ImppAltSube];
	NSString *relativePath = [NSString stringWithFormat:@"OfficeServiceSet(ImppMerkezSube=%@,ImppBolge=%@,ImppAltSube=%@)", ImppMerkezSube, ImppBolge, ImppAltSube];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getOfficeServiceSetEntryQueryTypedWithImppMerkezSube:(NSString *)ImppMerkezSube andImppBolge:(NSString *)ImppBolge andImppAltSube:(NSString *)ImppAltSube
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *ImppMerkezSubeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:ImppMerkezSube]];
	NSString *ImppBolgeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:ImppBolge]];
	NSString *ImppAltSubeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:ImppAltSube]];
	NSString *relativePath = [NSString stringWithFormat:@"OfficeServiceSet(ImppMerkezSube=%@,ImppBolge=%@,ImppAltSube=%@)", ImppMerkezSubeUri, ImppBolgeUri, ImppAltSubeUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (OfficeServiceV0 *)getOfficeServiceSetEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [OfficeServiceV0 parseExpandedOfficeServiceEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}



#pragma mark Service Function Import methods 

@end
