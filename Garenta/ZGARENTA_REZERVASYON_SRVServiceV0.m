/*
 
 Auto-Generated by SAP NetWeaver Gateway Productivity Accelerator, Version 1.1.1
  
 File: ZGARENTA_REZERVASYON_SRVServiceV0.h
 Abstract: The generated proxy classes for the ZGARENTA_REZERVASYON_SRV Service.  
*/

#import "ZGARENTA_REZERVASYON_SRVServiceV0.h"
#import "BaseODataObject.h"
#import "Logger.h"
#import "ODataEntitySchema.h"
#import "ODataCollection.h"
#import "ODataFunctionImport.h"
#import "TypeConverter.h"

#define ZGARENTA_REZERVASYON_SRV_SERVICE_DOCUMENTV0 @"ZGARENTA_REZERVASYON_SRVServiceDocumentV0"
#define ZGARENTA_REZERVASYON_SRV_SERVICE_METADATAV0 @"ZGARENTA_REZERVASYON_SRVServiceMetadataV0"

#pragma mark - Complex Types


#pragma mark EsOutputV0
@implementation EsOutputV0 

static NSMutableDictionary *esOutputLabels = nil;

+ (void)loadLabels:(NSMutableDictionary *)sdmProperties
{
    esOutputLabels = [@{} mutableCopy];
    for (ODataPropertyInfo *property in [sdmProperties allValues]) {
        esOutputLabels[property.name] = property.label;
    }
}

+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:esOutputLabels forProperty:aPropertyName];
}

- (BOOL)setComplexTypePropertiesToSDMEntry:(ODataEntry *)aSDMEntry complexTypePropertyName:(NSString *)aComplexPropertyName error:(NSError * __autoreleasing *)error
{
	BOOL result = [super setComplexTypePropertiesToSDMEntry:aSDMEntry complexTypePropertyName:aComplexPropertyName error:error];
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.RezNo forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\RezNo"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Musterino forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Musterino"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Avail forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Avail"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.TahsilDrm forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\TahsilDrm"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.EksurucuNo forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\EksurucuNo"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.FaturaMusteriNo forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\FaturaMusteriNo"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.FtCikisBp forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\FtCikisBp"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.FtDonusBp forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\FtDonusBp"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.IsRegistered forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\IsRegistered"] error:error]) {
		result = NO;
	}
	
	return result;
}

- (void)loadProperties
{
    [super loadProperties];
	self.RezNo = [self getStringValueForSDMPropertyWithName:@"RezNo"];
	self.Musterino = [self getStringValueForSDMPropertyWithName:@"Musterino"];
	self.Avail = [self getStringValueForSDMPropertyWithName:@"Avail"];
	self.TahsilDrm = [self getStringValueForSDMPropertyWithName:@"TahsilDrm"];
	self.EksurucuNo = [self getStringValueForSDMPropertyWithName:@"EksurucuNo"];
	self.FaturaMusteriNo = [self getStringValueForSDMPropertyWithName:@"FaturaMusteriNo"];
	self.FtCikisBp = [self getStringValueForSDMPropertyWithName:@"FtCikisBp"];
	self.FtDonusBp = [self getStringValueForSDMPropertyWithName:@"FtDonusBp"];
	self.IsRegistered = [self getStringValueForSDMPropertyWithName:@"IsRegistered"];
}

@end

#pragma mark IsInputV0
@implementation IsInputV0 

static NSMutableDictionary *isInputLabels = nil;

+ (void)loadLabels:(NSMutableDictionary *)sdmProperties
{
    isInputLabels = [@{} mutableCopy];
    for (ODataPropertyInfo *property in [sdmProperties allValues]) {
        isInputLabels[property.name] = property.label;
    }
}

+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:isInputLabels forProperty:aPropertyName];
}

- (BOOL)setComplexTypePropertiesToSDMEntry:(ODataEntry *)aSDMEntry complexTypePropertyName:(NSString *)aComplexPropertyName error:(NSError * __autoreleasing *)error
{
	BOOL result = [super setComplexTypePropertiesToSDMEntry:aSDMEntry complexTypePropertyName:aComplexPropertyName error:error];
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.PuanTipi forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\PuanTipi"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Username forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Username"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.FtMaliyetTipi forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\FtMaliyetTipi"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.ParaBirimi forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\ParaBirimi"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.FtDonusAdres forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\FtDonusAdres"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.FtDonusIlce forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\FtDonusIlce"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.FtDonusIl forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\FtDonusIl"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.FtCikisAdres forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\FtCikisAdres"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.FtCikisIlce forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\FtCikisIlce"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.FtCikisIl forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\FtCikisIl"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.RezKanal forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\RezKanal"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.CCorpPriority forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\CCorpPriority"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.CPriority forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\CPriority"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.RezNo forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\RezNo"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setDateTimeValueForSDMEntry:aSDMEntry withValue:self.RezBegda forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\RezBegda"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setDecimalValueForSDMEntry:aSDMEntry withValue:self.ToplamTutar forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\ToplamTutar"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setDateTimeValueForSDMEntry:aSDMEntry withValue:self.RezEndda forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\RezEndda"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.RezBegtime forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\RezBegtime"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.RezEndtime forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\RezEndtime"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setIntValueForSDMEntry:aSDMEntry withValue:self.GunSayisi forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\GunSayisi"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.AlisSubesi forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\AlisSubesi"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.TeslimSubesi forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\TeslimSubesi"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.SatisBurosu forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\SatisBurosu"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setDecimalValueForSDMEntry:aSDMEntry withValue:self.MilesSmiles forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\MilesSmiles"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.OdemeTuru forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\OdemeTuru"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setDecimalValueForSDMEntry:aSDMEntry withValue:self.GarentaTl forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\GarentaTl"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setDecimalValueForSDMEntry:aSDMEntry withValue:self.Bonus forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Bonus"] error:error]) {
		result = NO;
	}
	
	return result;
}

- (void)loadProperties
{
    [super loadProperties];
	self.PuanTipi = [self getStringValueForSDMPropertyWithName:@"PuanTipi"];
	self.Username = [self getStringValueForSDMPropertyWithName:@"Username"];
	self.FtMaliyetTipi = [self getStringValueForSDMPropertyWithName:@"FtMaliyetTipi"];
	self.ParaBirimi = [self getStringValueForSDMPropertyWithName:@"ParaBirimi"];
	self.FtDonusAdres = [self getStringValueForSDMPropertyWithName:@"FtDonusAdres"];
	self.FtDonusIlce = [self getStringValueForSDMPropertyWithName:@"FtDonusIlce"];
	self.FtDonusIl = [self getStringValueForSDMPropertyWithName:@"FtDonusIl"];
	self.FtCikisAdres = [self getStringValueForSDMPropertyWithName:@"FtCikisAdres"];
	self.FtCikisIlce = [self getStringValueForSDMPropertyWithName:@"FtCikisIlce"];
	self.FtCikisIl = [self getStringValueForSDMPropertyWithName:@"FtCikisIl"];
	self.RezKanal = [self getStringValueForSDMPropertyWithName:@"RezKanal"];
	self.CCorpPriority = [self getStringValueForSDMPropertyWithName:@"CCorpPriority"];
	self.CPriority = [self getStringValueForSDMPropertyWithName:@"CPriority"];
	self.RezNo = [self getStringValueForSDMPropertyWithName:@"RezNo"];
	self.RezBegda = [self getDateTimeValueForSDMPropertyWithName:@"RezBegda"];
	self.ToplamTutar = [self getDecimalValueForSDMPropertyWithName:@"ToplamTutar"];
	self.RezEndda = [self getDateTimeValueForSDMPropertyWithName:@"RezEndda"];
	self.RezBegtime = [self getStringValueForSDMPropertyWithName:@"RezBegtime"];
	self.RezEndtime = [self getStringValueForSDMPropertyWithName:@"RezEndtime"];
	self.GunSayisi = [self getIntValueForSDMPropertyWithName:@"GunSayisi"];
	self.AlisSubesi = [self getStringValueForSDMPropertyWithName:@"AlisSubesi"];
	self.TeslimSubesi = [self getStringValueForSDMPropertyWithName:@"TeslimSubesi"];
	self.SatisBurosu = [self getStringValueForSDMPropertyWithName:@"SatisBurosu"];
	self.MilesSmiles = [self getDecimalValueForSDMPropertyWithName:@"MilesSmiles"];
	self.OdemeTuru = [self getStringValueForSDMPropertyWithName:@"OdemeTuru"];
	self.GarentaTl = [self getDecimalValueForSDMPropertyWithName:@"GarentaTl"];
	self.Bonus = [self getDecimalValueForSDMPropertyWithName:@"Bonus"];
}

@end

#pragma mark IsUserinfoV0
@implementation IsUserinfoV0 

static NSMutableDictionary *isUserinfoLabels = nil;

+ (void)loadLabels:(NSMutableDictionary *)sdmProperties
{
    isUserinfoLabels = [@{} mutableCopy];
    for (ODataPropertyInfo *property in [sdmProperties allValues]) {
        isUserinfoLabels[property.name] = property.label;
    }
}

+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:isUserinfoLabels forProperty:aPropertyName];
}

- (BOOL)setComplexTypePropertiesToSDMEntry:(ODataEntry *)aSDMEntry complexTypePropertyName:(NSString *)aComplexPropertyName error:(NSError * __autoreleasing *)error
{
	BOOL result = [super setComplexTypePropertiesToSDMEntry:aSDMEntry complexTypePropertyName:aComplexPropertyName error:error];
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.TelnoUlke forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\TelnoUlke"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.TkKartno forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\TkKartno"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Pasaportno forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Pasaportno"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Middlename forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Middlename"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Ilcekod forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Ilcekod"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Ilkodu forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Ilkodu"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setDateTimeValueForSDMEntry:aSDMEntry withValue:self.EhliyetTarihi forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\EhliyetTarihi"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.EhliyetNo forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\EhliyetNo"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.EhliyetSinifi forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\EhliyetSinifi"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.EhliyetAlisyeri forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\EhliyetAlisyeri"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Kanalturu forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Kanalturu"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Division forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Division"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.DistributionChannel forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\DistributionChannel"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.SalesOrganization forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\SalesOrganization"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Ulke forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Ulke"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Uyruk forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Uyruk"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Telno forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Telno"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Email forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Email"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Adress forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Adress"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Vergino forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Vergino"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Tckn forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Tckn"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setDateTimeValueForSDMEntry:aSDMEntry withValue:self.Birthdate forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Birthdate"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Lastname forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Lastname"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Firstname forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Firstname"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Cinsiyet forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Cinsiyet"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Musterino forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Musterino"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Inboundcallid forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Inboundcallid"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Calluser forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Calluser"] error:error]) {
		result = NO;
	}
	
	if (![BaseODataObject setStringValueForSDMEntry:aSDMEntry withValue:self.Arayan forSDMPropertyWithName:[aComplexPropertyName stringByAppendingString:@"\\Arayan"] error:error]) {
		result = NO;
	}
	
	return result;
}

- (void)loadProperties
{
    [super loadProperties];
	self.TelnoUlke = [self getStringValueForSDMPropertyWithName:@"TelnoUlke"];
	self.TkKartno = [self getStringValueForSDMPropertyWithName:@"TkKartno"];
	self.Pasaportno = [self getStringValueForSDMPropertyWithName:@"Pasaportno"];
	self.Middlename = [self getStringValueForSDMPropertyWithName:@"Middlename"];
	self.Ilcekod = [self getStringValueForSDMPropertyWithName:@"Ilcekod"];
	self.Ilkodu = [self getStringValueForSDMPropertyWithName:@"Ilkodu"];
	self.EhliyetTarihi = [self getDateTimeValueForSDMPropertyWithName:@"EhliyetTarihi"];
	self.EhliyetNo = [self getStringValueForSDMPropertyWithName:@"EhliyetNo"];
	self.EhliyetSinifi = [self getStringValueForSDMPropertyWithName:@"EhliyetSinifi"];
	self.EhliyetAlisyeri = [self getStringValueForSDMPropertyWithName:@"EhliyetAlisyeri"];
	self.Kanalturu = [self getStringValueForSDMPropertyWithName:@"Kanalturu"];
	self.Division = [self getStringValueForSDMPropertyWithName:@"Division"];
	self.DistributionChannel = [self getStringValueForSDMPropertyWithName:@"DistributionChannel"];
	self.SalesOrganization = [self getStringValueForSDMPropertyWithName:@"SalesOrganization"];
	self.Ulke = [self getStringValueForSDMPropertyWithName:@"Ulke"];
	self.Uyruk = [self getStringValueForSDMPropertyWithName:@"Uyruk"];
	self.Telno = [self getStringValueForSDMPropertyWithName:@"Telno"];
	self.Email = [self getStringValueForSDMPropertyWithName:@"Email"];
	self.Adress = [self getStringValueForSDMPropertyWithName:@"Adress"];
	self.Vergino = [self getStringValueForSDMPropertyWithName:@"Vergino"];
	self.Tckn = [self getStringValueForSDMPropertyWithName:@"Tckn"];
	self.Birthdate = [self getDateTimeValueForSDMPropertyWithName:@"Birthdate"];
	self.Lastname = [self getStringValueForSDMPropertyWithName:@"Lastname"];
	self.Firstname = [self getStringValueForSDMPropertyWithName:@"Firstname"];
	self.Cinsiyet = [self getStringValueForSDMPropertyWithName:@"Cinsiyet"];
	self.Musterino = [self getStringValueForSDMPropertyWithName:@"Musterino"];
	self.Inboundcallid = [self getStringValueForSDMPropertyWithName:@"Inboundcallid"];
	self.Calluser = [self getStringValueForSDMPropertyWithName:@"Calluser"];
	self.Arayan = [self getStringValueForSDMPropertyWithName:@"Arayan"];
}

@end


#pragma mark - Entity Types


#pragma mark - ET_KK_RETURNV0
@implementation ET_KK_RETURNV0

static NSMutableDictionary *eT_KK_RETURNLabels = nil;
static ODataEntitySchema *eT_KK_RETURNEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:eT_KK_RETURNEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}



- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.OErrMessage forSDMPropertyWithName:@"OErrMessage" error:&innerError];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"ET_KK_RETURN" workspaceOfCollection:nil];
    eT_KK_RETURNEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"ET_KK_RETURN" andService:aService];
    	if (properties) {    
	    	eT_KK_RETURNLabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
	        	eT_KK_RETURNLabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:eT_KK_RETURNLabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.OErrMessage = [self getStringValueForSDMPropertyWithName:@"OErrMessage"];
}

+ (NSMutableArray *)createET_KK_RETURNEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        ET_KK_RETURNV0 *eT_KK_RETURNObject = [[ET_KK_RETURNV0 alloc] initWithSDMEntry:entry];
        [entries addObject:eT_KK_RETURNObject];
    }
    return entries;
}


+ (NSMutableArray *)parseET_KK_RETURNEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:eT_KK_RETURNEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [ET_KK_RETURNV0 createET_KK_RETURNEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedET_KK_RETURNEntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eT_KK_RETURNEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [ET_KK_RETURNV0 createET_KK_RETURNEntriesForSDMEntries:sdmEntries];
}

+ (ET_KK_RETURNV0 *)parseET_KK_RETURNEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *eT_KK_RETURNEntries = [ET_KK_RETURNV0 parseET_KK_RETURNEntriesWithData:aData error:error];
    if (!eT_KK_RETURNEntries) {
    	return nil;
    }
    return (ET_KK_RETURNV0 *)[ET_KK_RETURNV0 getFirstObjectFromArray:eT_KK_RETURNEntries];
}

+ (ET_KK_RETURNV0 *)parseExpandedET_KK_RETURNEntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eT_KK_RETURNEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *eT_KK_RETURNEntries = [ET_KK_RETURNV0 createET_KK_RETURNEntriesForSDMEntries:sdmEntries];
	return (ET_KK_RETURNV0 *)[ET_KK_RETURNV0 getFirstObjectFromArray:eT_KK_RETURNEntries];
}



@end

#pragma mark - ET_RETURNV0
@implementation ET_RETURNV0

static NSMutableDictionary *eT_RETURNLabels = nil;
static ODataEntitySchema *eT_RETURNEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:eT_RETURNEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}



- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Type forSDMPropertyWithName:@"Type" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Id forSDMPropertyWithName:@"Id" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Number forSDMPropertyWithName:@"Number" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Message forSDMPropertyWithName:@"Message" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.LogNo forSDMPropertyWithName:@"LogNo" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.LogMsgNo forSDMPropertyWithName:@"LogMsgNo" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MessageV1 forSDMPropertyWithName:@"MessageV1" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MessageV2 forSDMPropertyWithName:@"MessageV2" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MessageV3 forSDMPropertyWithName:@"MessageV3" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MessageV4 forSDMPropertyWithName:@"MessageV4" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Parameter forSDMPropertyWithName:@"Parameter" error:&innerError];
    	[BaseODataObject setIntValueForSDMEntry:m_SDMEntry withValue:self.Row forSDMPropertyWithName:@"Row" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Field forSDMPropertyWithName:@"Field" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.System forSDMPropertyWithName:@"System" error:&innerError];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"ET_RETURN" workspaceOfCollection:nil];
    eT_RETURNEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"ET_RETURN" andService:aService];
    	if (properties) {    
	    	eT_RETURNLabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
	        	eT_RETURNLabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:eT_RETURNLabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.Type = [self getStringValueForSDMPropertyWithName:@"Type"];
	self.Id = [self getStringValueForSDMPropertyWithName:@"Id"];
	self.Number = [self getStringValueForSDMPropertyWithName:@"Number"];
	self.Message = [self getStringValueForSDMPropertyWithName:@"Message"];
	self.LogNo = [self getStringValueForSDMPropertyWithName:@"LogNo"];
	self.LogMsgNo = [self getStringValueForSDMPropertyWithName:@"LogMsgNo"];
	self.MessageV1 = [self getStringValueForSDMPropertyWithName:@"MessageV1"];
	self.MessageV2 = [self getStringValueForSDMPropertyWithName:@"MessageV2"];
	self.MessageV3 = [self getStringValueForSDMPropertyWithName:@"MessageV3"];
	self.MessageV4 = [self getStringValueForSDMPropertyWithName:@"MessageV4"];
	self.Parameter = [self getStringValueForSDMPropertyWithName:@"Parameter"];
	self.Row = [self getIntValueForSDMPropertyWithName:@"Row"];
	self.Field = [self getStringValueForSDMPropertyWithName:@"Field"];
	self.System = [self getStringValueForSDMPropertyWithName:@"System"];
}

+ (NSMutableArray *)createET_RETURNEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        ET_RETURNV0 *eT_RETURNObject = [[ET_RETURNV0 alloc] initWithSDMEntry:entry];
        [entries addObject:eT_RETURNObject];
    }
    return entries;
}


+ (NSMutableArray *)parseET_RETURNEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:eT_RETURNEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [ET_RETURNV0 createET_RETURNEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedET_RETURNEntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eT_RETURNEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [ET_RETURNV0 createET_RETURNEntriesForSDMEntries:sdmEntries];
}

+ (ET_RETURNV0 *)parseET_RETURNEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *eT_RETURNEntries = [ET_RETURNV0 parseET_RETURNEntriesWithData:aData error:error];
    if (!eT_RETURNEntries) {
    	return nil;
    }
    return (ET_RETURNV0 *)[ET_RETURNV0 getFirstObjectFromArray:eT_RETURNEntries];
}

+ (ET_RETURNV0 *)parseExpandedET_RETURNEntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eT_RETURNEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *eT_RETURNEntries = [ET_RETURNV0 createET_RETURNEntriesForSDMEntries:sdmEntries];
	return (ET_RETURNV0 *)[ET_RETURNV0 getFirstObjectFromArray:eT_RETURNEntries];
}



@end

#pragma mark - IT_ARACLARV0
@implementation IT_ARACLARV0

static NSMutableDictionary *iT_ARACLARLabels = nil;
static ODataEntitySchema *iT_ARACLAREntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:iT_ARACLAREntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}



- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Matnr forSDMPropertyWithName:@"Matnr" error:&innerError];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"IT_ARACLAR" workspaceOfCollection:nil];
    iT_ARACLAREntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"IT_ARACLAR" andService:aService];
    	if (properties) {    
	    	iT_ARACLARLabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
	        	iT_ARACLARLabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:iT_ARACLARLabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.Matnr = [self getStringValueForSDMPropertyWithName:@"Matnr"];
}

+ (NSMutableArray *)createIT_ARACLAREntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        IT_ARACLARV0 *iT_ARACLARObject = [[IT_ARACLARV0 alloc] initWithSDMEntry:entry];
        [entries addObject:iT_ARACLARObject];
    }
    return entries;
}


+ (NSMutableArray *)parseIT_ARACLAREntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:iT_ARACLAREntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [IT_ARACLARV0 createIT_ARACLAREntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedIT_ARACLAREntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:iT_ARACLAREntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [IT_ARACLARV0 createIT_ARACLAREntriesForSDMEntries:sdmEntries];
}

+ (IT_ARACLARV0 *)parseIT_ARACLAREntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *iT_ARACLAREntries = [IT_ARACLARV0 parseIT_ARACLAREntriesWithData:aData error:error];
    if (!iT_ARACLAREntries) {
    	return nil;
    }
    return (IT_ARACLARV0 *)[IT_ARACLARV0 getFirstObjectFromArray:iT_ARACLAREntries];
}

+ (IT_ARACLARV0 *)parseExpandedIT_ARACLAREntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:iT_ARACLAREntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *iT_ARACLAREntries = [IT_ARACLARV0 createIT_ARACLAREntriesForSDMEntries:sdmEntries];
	return (IT_ARACLARV0 *)[IT_ARACLARV0 getFirstObjectFromArray:iT_ARACLAREntries];
}



@end

#pragma mark - IT_EKSURUCUV0
@implementation IT_EKSURUCUV0

static NSMutableDictionary *iT_EKSURUCULabels = nil;
static ODataEntitySchema *iT_EKSURUCUEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:iT_EKSURUCUEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}



- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.KalemNo forSDMPropertyWithName:@"KalemNo" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Cinsiyet forSDMPropertyWithName:@"Cinsiyet" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Firstname forSDMPropertyWithName:@"Firstname" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.UpdateStatu forSDMPropertyWithName:@"UpdateStatu" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Lastname forSDMPropertyWithName:@"Lastname" error:&innerError];
    	[BaseODataObject setDateTimeValueForSDMEntry:m_SDMEntry withValue:self.Birthdate forSDMPropertyWithName:@"Birthdate" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Tckn forSDMPropertyWithName:@"Tckn" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.EksurucuNo forSDMPropertyWithName:@"EksurucuNo" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Telno forSDMPropertyWithName:@"Telno" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Uyruk forSDMPropertyWithName:@"Uyruk" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Ulke forSDMPropertyWithName:@"Ulke" error:&innerError];
    	[BaseODataObject setDateTimeValueForSDMEntry:m_SDMEntry withValue:self.EhliyetTarihi forSDMPropertyWithName:@"EhliyetTarihi" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.EhliyetAlisyeri forSDMPropertyWithName:@"EhliyetAlisyeri" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.EhliyetSinifi forSDMPropertyWithName:@"EhliyetSinifi" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.EhliyetNo forSDMPropertyWithName:@"EhliyetNo" error:&innerError];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"IT_EKSURUCU" workspaceOfCollection:nil];
    iT_EKSURUCUEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"IT_EKSURUCU" andService:aService];
    	if (properties) {    
	    	iT_EKSURUCULabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
	        	iT_EKSURUCULabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:iT_EKSURUCULabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.KalemNo = [self getStringValueForSDMPropertyWithName:@"KalemNo"];
	self.Cinsiyet = [self getStringValueForSDMPropertyWithName:@"Cinsiyet"];
	self.Firstname = [self getStringValueForSDMPropertyWithName:@"Firstname"];
	self.UpdateStatu = [self getStringValueForSDMPropertyWithName:@"UpdateStatu"];
	self.Lastname = [self getStringValueForSDMPropertyWithName:@"Lastname"];
	self.Birthdate = [self getDateTimeValueForSDMPropertyWithName:@"Birthdate"];
	self.Tckn = [self getStringValueForSDMPropertyWithName:@"Tckn"];
	self.EksurucuNo = [self getStringValueForSDMPropertyWithName:@"EksurucuNo"];
	self.Telno = [self getStringValueForSDMPropertyWithName:@"Telno"];
	self.Uyruk = [self getStringValueForSDMPropertyWithName:@"Uyruk"];
	self.Ulke = [self getStringValueForSDMPropertyWithName:@"Ulke"];
	self.EhliyetTarihi = [self getDateTimeValueForSDMPropertyWithName:@"EhliyetTarihi"];
	self.EhliyetAlisyeri = [self getStringValueForSDMPropertyWithName:@"EhliyetAlisyeri"];
	self.EhliyetSinifi = [self getStringValueForSDMPropertyWithName:@"EhliyetSinifi"];
	self.EhliyetNo = [self getStringValueForSDMPropertyWithName:@"EhliyetNo"];
}

+ (NSMutableArray *)createIT_EKSURUCUEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        IT_EKSURUCUV0 *iT_EKSURUCUObject = [[IT_EKSURUCUV0 alloc] initWithSDMEntry:entry];
        [entries addObject:iT_EKSURUCUObject];
    }
    return entries;
}


+ (NSMutableArray *)parseIT_EKSURUCUEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:iT_EKSURUCUEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [IT_EKSURUCUV0 createIT_EKSURUCUEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedIT_EKSURUCUEntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:iT_EKSURUCUEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [IT_EKSURUCUV0 createIT_EKSURUCUEntriesForSDMEntries:sdmEntries];
}

+ (IT_EKSURUCUV0 *)parseIT_EKSURUCUEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *iT_EKSURUCUEntries = [IT_EKSURUCUV0 parseIT_EKSURUCUEntriesWithData:aData error:error];
    if (!iT_EKSURUCUEntries) {
    	return nil;
    }
    return (IT_EKSURUCUV0 *)[IT_EKSURUCUV0 getFirstObjectFromArray:iT_EKSURUCUEntries];
}

+ (IT_EKSURUCUV0 *)parseExpandedIT_EKSURUCUEntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:iT_EKSURUCUEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *iT_EKSURUCUEntries = [IT_EKSURUCUV0 createIT_EKSURUCUEntriesForSDMEntries:sdmEntries];
	return (IT_EKSURUCUV0 *)[IT_EKSURUCUV0 getFirstObjectFromArray:iT_EKSURUCUEntries];
}



@end

#pragma mark - IT_FATURA_ADRESV0
@implementation IT_FATURA_ADRESV0

static NSMutableDictionary *iT_FATURA_ADRESLabels = nil;
static ODataEntitySchema *iT_FATURA_ADRESEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:iT_FATURA_ADRESEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}



- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Pasaportno forSDMPropertyWithName:@"Pasaportno" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.FatTip forSDMPropertyWithName:@"FatTip" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.AyniAdres forSDMPropertyWithName:@"AyniAdres" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.FirmaAdi forSDMPropertyWithName:@"FirmaAdi" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Vergino forSDMPropertyWithName:@"Vergino" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Vergidairesi forSDMPropertyWithName:@"Vergidairesi" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Middlename forSDMPropertyWithName:@"Middlename" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.AdresKaydet forSDMPropertyWithName:@"AdresKaydet" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.AdresTanim forSDMPropertyWithName:@"AdresTanim" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Ilcekod forSDMPropertyWithName:@"Ilcekod" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Ilkodu forSDMPropertyWithName:@"Ilkodu" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Ulke forSDMPropertyWithName:@"Ulke" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Adres forSDMPropertyWithName:@"Adres" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Lastname forSDMPropertyWithName:@"Lastname" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Firstname forSDMPropertyWithName:@"Firstname" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Tckn forSDMPropertyWithName:@"Tckn" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Addrnumber forSDMPropertyWithName:@"Addrnumber" error:&innerError];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"IT_FATURA_ADRES" workspaceOfCollection:nil];
    iT_FATURA_ADRESEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"IT_FATURA_ADRES" andService:aService];
    	if (properties) {    
	    	iT_FATURA_ADRESLabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
	        	iT_FATURA_ADRESLabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:iT_FATURA_ADRESLabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.Pasaportno = [self getStringValueForSDMPropertyWithName:@"Pasaportno"];
	self.FatTip = [self getStringValueForSDMPropertyWithName:@"FatTip"];
	self.AyniAdres = [self getStringValueForSDMPropertyWithName:@"AyniAdres"];
	self.FirmaAdi = [self getStringValueForSDMPropertyWithName:@"FirmaAdi"];
	self.Vergino = [self getStringValueForSDMPropertyWithName:@"Vergino"];
	self.Vergidairesi = [self getStringValueForSDMPropertyWithName:@"Vergidairesi"];
	self.Middlename = [self getStringValueForSDMPropertyWithName:@"Middlename"];
	self.AdresKaydet = [self getStringValueForSDMPropertyWithName:@"AdresKaydet"];
	self.AdresTanim = [self getStringValueForSDMPropertyWithName:@"AdresTanim"];
	self.Ilcekod = [self getStringValueForSDMPropertyWithName:@"Ilcekod"];
	self.Ilkodu = [self getStringValueForSDMPropertyWithName:@"Ilkodu"];
	self.Ulke = [self getStringValueForSDMPropertyWithName:@"Ulke"];
	self.Adres = [self getStringValueForSDMPropertyWithName:@"Adres"];
	self.Lastname = [self getStringValueForSDMPropertyWithName:@"Lastname"];
	self.Firstname = [self getStringValueForSDMPropertyWithName:@"Firstname"];
	self.Tckn = [self getStringValueForSDMPropertyWithName:@"Tckn"];
	self.Addrnumber = [self getStringValueForSDMPropertyWithName:@"Addrnumber"];
}

+ (NSMutableArray *)createIT_FATURA_ADRESEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        IT_FATURA_ADRESV0 *iT_FATURA_ADRESObject = [[IT_FATURA_ADRESV0 alloc] initWithSDMEntry:entry];
        [entries addObject:iT_FATURA_ADRESObject];
    }
    return entries;
}


+ (NSMutableArray *)parseIT_FATURA_ADRESEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:iT_FATURA_ADRESEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [IT_FATURA_ADRESV0 createIT_FATURA_ADRESEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedIT_FATURA_ADRESEntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:iT_FATURA_ADRESEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [IT_FATURA_ADRESV0 createIT_FATURA_ADRESEntriesForSDMEntries:sdmEntries];
}

+ (IT_FATURA_ADRESV0 *)parseIT_FATURA_ADRESEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *iT_FATURA_ADRESEntries = [IT_FATURA_ADRESV0 parseIT_FATURA_ADRESEntriesWithData:aData error:error];
    if (!iT_FATURA_ADRESEntries) {
    	return nil;
    }
    return (IT_FATURA_ADRESV0 *)[IT_FATURA_ADRESV0 getFirstObjectFromArray:iT_FATURA_ADRESEntries];
}

+ (IT_FATURA_ADRESV0 *)parseExpandedIT_FATURA_ADRESEntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:iT_FATURA_ADRESEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *iT_FATURA_ADRESEntries = [IT_FATURA_ADRESV0 createIT_FATURA_ADRESEntriesForSDMEntries:sdmEntries];
	return (IT_FATURA_ADRESV0 *)[IT_FATURA_ADRESV0 getFirstObjectFromArray:iT_FATURA_ADRESEntries];
}



@end

#pragma mark - IT_ITEMSV0
@implementation IT_ITEMSV0

static NSMutableDictionary *iT_ITEMSLabels = nil;
static ODataEntitySchema *iT_ITEMSEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:iT_ITEMSEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}



- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.TeslimSubesi forSDMPropertyWithName:@"TeslimSubesi" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.AlisSubesi forSDMPropertyWithName:@"AlisSubesi" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.AracGrubu forSDMPropertyWithName:@"AracGrubu" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.Miktar forSDMPropertyWithName:@"Miktar" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MalzemeNo forSDMPropertyWithName:@"MalzemeNo" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.RezKalemNo forSDMPropertyWithName:@"RezKalemNo" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.SatisBurosu forSDMPropertyWithName:@"SatisBurosu" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.KampanyaId forSDMPropertyWithName:@"KampanyaId" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.Fiyat forSDMPropertyWithName:@"Fiyat" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.CKislastik forSDMPropertyWithName:@"CKislastik" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.AracRenk forSDMPropertyWithName:@"AracRenk" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.SasiNo forSDMPropertyWithName:@"SasiNo" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.PlakaNo forSDMPropertyWithName:@"PlakaNo" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.JatoMarka forSDMPropertyWithName:@"JatoMarka" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.JatoModel forSDMPropertyWithName:@"JatoModel" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.FiloSegment forSDMPropertyWithName:@"FiloSegment" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.FiyatKodu forSDMPropertyWithName:@"FiyatKodu" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.UpdateStatu forSDMPropertyWithName:@"UpdateStatu" error:&innerError];
    	[BaseODataObject setDateTimeValueForSDMEntry:m_SDMEntry withValue:self.RezBegda forSDMPropertyWithName:@"RezBegda" error:&innerError];
    	[BaseODataObject setDateTimeValueForSDMEntry:m_SDMEntry withValue:self.RezEndda forSDMPropertyWithName:@"RezEndda" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.RezBegtime forSDMPropertyWithName:@"RezBegtime" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.RezEndtime forSDMPropertyWithName:@"RezEndtime" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.KalemTipi forSDMPropertyWithName:@"KalemTipi" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ParaBirimi forSDMPropertyWithName:@"ParaBirimi" error:&innerError];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"IT_ITEMS" workspaceOfCollection:nil];
    iT_ITEMSEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"IT_ITEMS" andService:aService];
    	if (properties) {    
	    	iT_ITEMSLabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
	        	iT_ITEMSLabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:iT_ITEMSLabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.TeslimSubesi = [self getStringValueForSDMPropertyWithName:@"TeslimSubesi"];
	self.AlisSubesi = [self getStringValueForSDMPropertyWithName:@"AlisSubesi"];
	self.AracGrubu = [self getStringValueForSDMPropertyWithName:@"AracGrubu"];
	self.Miktar = [self getDecimalValueForSDMPropertyWithName:@"Miktar"];
	self.MalzemeNo = [self getStringValueForSDMPropertyWithName:@"MalzemeNo"];
	self.RezKalemNo = [self getStringValueForSDMPropertyWithName:@"RezKalemNo"];
	self.SatisBurosu = [self getStringValueForSDMPropertyWithName:@"SatisBurosu"];
	self.KampanyaId = [self getStringValueForSDMPropertyWithName:@"KampanyaId"];
	self.Fiyat = [self getDecimalValueForSDMPropertyWithName:@"Fiyat"];
	self.CKislastik = [self getStringValueForSDMPropertyWithName:@"CKislastik"];
	self.AracRenk = [self getStringValueForSDMPropertyWithName:@"AracRenk"];
	self.SasiNo = [self getStringValueForSDMPropertyWithName:@"SasiNo"];
	self.PlakaNo = [self getStringValueForSDMPropertyWithName:@"PlakaNo"];
	self.JatoMarka = [self getStringValueForSDMPropertyWithName:@"JatoMarka"];
	self.JatoModel = [self getStringValueForSDMPropertyWithName:@"JatoModel"];
	self.FiloSegment = [self getStringValueForSDMPropertyWithName:@"FiloSegment"];
	self.FiyatKodu = [self getStringValueForSDMPropertyWithName:@"FiyatKodu"];
	self.UpdateStatu = [self getStringValueForSDMPropertyWithName:@"UpdateStatu"];
	self.RezBegda = [self getDateTimeValueForSDMPropertyWithName:@"RezBegda"];
	self.RezEndda = [self getDateTimeValueForSDMPropertyWithName:@"RezEndda"];
	self.RezBegtime = [self getStringValueForSDMPropertyWithName:@"RezBegtime"];
	self.RezEndtime = [self getStringValueForSDMPropertyWithName:@"RezEndtime"];
	self.KalemTipi = [self getStringValueForSDMPropertyWithName:@"KalemTipi"];
	self.ParaBirimi = [self getStringValueForSDMPropertyWithName:@"ParaBirimi"];
}

+ (NSMutableArray *)createIT_ITEMSEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        IT_ITEMSV0 *iT_ITEMSObject = [[IT_ITEMSV0 alloc] initWithSDMEntry:entry];
        [entries addObject:iT_ITEMSObject];
    }
    return entries;
}


+ (NSMutableArray *)parseIT_ITEMSEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:iT_ITEMSEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [IT_ITEMSV0 createIT_ITEMSEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedIT_ITEMSEntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:iT_ITEMSEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [IT_ITEMSV0 createIT_ITEMSEntriesForSDMEntries:sdmEntries];
}

+ (IT_ITEMSV0 *)parseIT_ITEMSEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *iT_ITEMSEntries = [IT_ITEMSV0 parseIT_ITEMSEntriesWithData:aData error:error];
    if (!iT_ITEMSEntries) {
    	return nil;
    }
    return (IT_ITEMSV0 *)[IT_ITEMSV0 getFirstObjectFromArray:iT_ITEMSEntries];
}

+ (IT_ITEMSV0 *)parseExpandedIT_ITEMSEntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:iT_ITEMSEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *iT_ITEMSEntries = [IT_ITEMSV0 createIT_ITEMSEntriesForSDMEntries:sdmEntries];
	return (IT_ITEMSV0 *)[IT_ITEMSV0 getFirstObjectFromArray:iT_ITEMSEntries];
}



@end

#pragma mark - IT_SDREZERVV0
@implementation IT_SDREZERVV0

static NSMutableDictionary *iT_SDREZERVLabels = nil;
static ODataEntitySchema *iT_SDREZERVEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:iT_SDREZERVEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}



- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.RVbeln forSDMPropertyWithName:@"RVbeln" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.RPosnr forSDMPropertyWithName:@"RPosnr" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.RGjahr forSDMPropertyWithName:@"RGjahr" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.RAuart forSDMPropertyWithName:@"RAuart" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Matnr forSDMPropertyWithName:@"Matnr" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Kunnr forSDMPropertyWithName:@"Kunnr" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Hdfsube forSDMPropertyWithName:@"Hdfsube" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Augru forSDMPropertyWithName:@"Augru" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Vkorg forSDMPropertyWithName:@"Vkorg" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Vtweg forSDMPropertyWithName:@"Vtweg" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Spart forSDMPropertyWithName:@"Spart" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.GrupKodu forSDMPropertyWithName:@"GrupKodu" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Sube forSDMPropertyWithName:@"Sube" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.FiyatKodu forSDMPropertyWithName:@"FiyatKodu" error:&innerError];
    	[BaseODataObject setDateTimeValueForSDMEntry:m_SDMEntry withValue:self.Tarih forSDMPropertyWithName:@"Tarih" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.Tutar forSDMPropertyWithName:@"Tutar" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.GrnttlKazanir forSDMPropertyWithName:@"GrnttlKazanir" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MilKazanir forSDMPropertyWithName:@"MilKazanir" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.BonusKazanir forSDMPropertyWithName:@"BonusKazanir" error:&innerError];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"IT_SDREZERV" workspaceOfCollection:nil];
    iT_SDREZERVEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"IT_SDREZERV" andService:aService];
    	if (properties) {    
	    	iT_SDREZERVLabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
	        	iT_SDREZERVLabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:iT_SDREZERVLabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.RVbeln = [self getStringValueForSDMPropertyWithName:@"RVbeln"];
	self.RPosnr = [self getStringValueForSDMPropertyWithName:@"RPosnr"];
	self.RGjahr = [self getStringValueForSDMPropertyWithName:@"RGjahr"];
	self.RAuart = [self getStringValueForSDMPropertyWithName:@"RAuart"];
	self.Matnr = [self getStringValueForSDMPropertyWithName:@"Matnr"];
	self.Kunnr = [self getStringValueForSDMPropertyWithName:@"Kunnr"];
	self.Hdfsube = [self getStringValueForSDMPropertyWithName:@"Hdfsube"];
	self.Augru = [self getStringValueForSDMPropertyWithName:@"Augru"];
	self.Vkorg = [self getStringValueForSDMPropertyWithName:@"Vkorg"];
	self.Vtweg = [self getStringValueForSDMPropertyWithName:@"Vtweg"];
	self.Spart = [self getStringValueForSDMPropertyWithName:@"Spart"];
	self.GrupKodu = [self getStringValueForSDMPropertyWithName:@"GrupKodu"];
	self.Sube = [self getStringValueForSDMPropertyWithName:@"Sube"];
	self.FiyatKodu = [self getStringValueForSDMPropertyWithName:@"FiyatKodu"];
	self.Tarih = [self getDateTimeValueForSDMPropertyWithName:@"Tarih"];
	self.Tutar = [self getDecimalValueForSDMPropertyWithName:@"Tutar"];
	self.GrnttlKazanir = [self getStringValueForSDMPropertyWithName:@"GrnttlKazanir"];
	self.MilKazanir = [self getStringValueForSDMPropertyWithName:@"MilKazanir"];
	self.BonusKazanir = [self getStringValueForSDMPropertyWithName:@"BonusKazanir"];
}

+ (NSMutableArray *)createIT_SDREZERVEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        IT_SDREZERVV0 *iT_SDREZERVObject = [[IT_SDREZERVV0 alloc] initWithSDMEntry:entry];
        [entries addObject:iT_SDREZERVObject];
    }
    return entries;
}


+ (NSMutableArray *)parseIT_SDREZERVEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:iT_SDREZERVEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [IT_SDREZERVV0 createIT_SDREZERVEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedIT_SDREZERVEntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:iT_SDREZERVEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [IT_SDREZERVV0 createIT_SDREZERVEntriesForSDMEntries:sdmEntries];
}

+ (IT_SDREZERVV0 *)parseIT_SDREZERVEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *iT_SDREZERVEntries = [IT_SDREZERVV0 parseIT_SDREZERVEntriesWithData:aData error:error];
    if (!iT_SDREZERVEntries) {
    	return nil;
    }
    return (IT_SDREZERVV0 *)[IT_SDREZERVV0 getFirstObjectFromArray:iT_SDREZERVEntries];
}

+ (IT_SDREZERVV0 *)parseExpandedIT_SDREZERVEntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:iT_SDREZERVEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *iT_SDREZERVEntries = [IT_SDREZERVV0 createIT_SDREZERVEntriesForSDMEntries:sdmEntries];
	return (IT_SDREZERVV0 *)[IT_SDREZERVV0 getFirstObjectFromArray:iT_SDREZERVEntries];
}



@end

#pragma mark - IT_TAHSILATV0
@implementation IT_TAHSILATV0

static NSMutableDictionary *iT_TAHSILATLabels = nil;
static ODataEntitySchema *iT_TAHSILATEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:iT_TAHSILATEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}



- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Tahstip forSDMPropertyWithName:@"Tahstip" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.KartSahibi forSDMPropertyWithName:@"KartSahibi" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.KartNumarasi forSDMPropertyWithName:@"KartNumarasi" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Guvenlikkodu forSDMPropertyWithName:@"Guvenlikkodu" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Ay forSDMPropertyWithName:@"Ay" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Yil forSDMPropertyWithName:@"Yil" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.OrderId forSDMPropertyWithName:@"OrderId" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.CustomerIp forSDMPropertyWithName:@"CustomerIp" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.CustomerEmail forSDMPropertyWithName:@"CustomerEmail" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.CustomerFullname forSDMPropertyWithName:@"CustomerFullname" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Companyname forSDMPropertyWithName:@"Companyname" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.Amount forSDMPropertyWithName:@"Amount" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.Point forSDMPropertyWithName:@"Point" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.PointTutar forSDMPropertyWithName:@"PointTutar" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.IsPoint forSDMPropertyWithName:@"IsPoint" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.GarentaTl forSDMPropertyWithName:@"GarentaTl" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Vkbur forSDMPropertyWithName:@"Vkbur" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.OStatus forSDMPropertyWithName:@"OStatus" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.OCode forSDMPropertyWithName:@"OCode" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.OMessage forSDMPropertyWithName:@"OMessage" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.OErrMessage forSDMPropertyWithName:@"OErrMessage" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.OProv forSDMPropertyWithName:@"OProv" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.OPoint forSDMPropertyWithName:@"OPoint" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.OAwkey forSDMPropertyWithName:@"OAwkey" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.OAwlog forSDMPropertyWithName:@"OAwlog" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.OIpt forSDMPropertyWithName:@"OIpt" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.OIpterr forSDMPropertyWithName:@"OIpterr" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Musterionay forSDMPropertyWithName:@"Musterionay" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Kunnr forSDMPropertyWithName:@"Kunnr" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.OSanal forSDMPropertyWithName:@"OSanal" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.OIpterrmes forSDMPropertyWithName:@"OIpterrmes" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.OMskayit forSDMPropertyWithName:@"OMskayit" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MerKey forSDMPropertyWithName:@"MerKey" error:&innerError];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"IT_TAHSILAT" workspaceOfCollection:nil];
    iT_TAHSILATEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"IT_TAHSILAT" andService:aService];
    	if (properties) {    
	    	iT_TAHSILATLabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
	        	iT_TAHSILATLabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:iT_TAHSILATLabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.Tahstip = [self getStringValueForSDMPropertyWithName:@"Tahstip"];
	self.KartSahibi = [self getStringValueForSDMPropertyWithName:@"KartSahibi"];
	self.KartNumarasi = [self getStringValueForSDMPropertyWithName:@"KartNumarasi"];
	self.Guvenlikkodu = [self getStringValueForSDMPropertyWithName:@"Guvenlikkodu"];
	self.Ay = [self getStringValueForSDMPropertyWithName:@"Ay"];
	self.Yil = [self getStringValueForSDMPropertyWithName:@"Yil"];
	self.OrderId = [self getStringValueForSDMPropertyWithName:@"OrderId"];
	self.CustomerIp = [self getStringValueForSDMPropertyWithName:@"CustomerIp"];
	self.CustomerEmail = [self getStringValueForSDMPropertyWithName:@"CustomerEmail"];
	self.CustomerFullname = [self getStringValueForSDMPropertyWithName:@"CustomerFullname"];
	self.Companyname = [self getStringValueForSDMPropertyWithName:@"Companyname"];
	self.Amount = [self getDecimalValueForSDMPropertyWithName:@"Amount"];
	self.Point = [self getDecimalValueForSDMPropertyWithName:@"Point"];
	self.PointTutar = [self getDecimalValueForSDMPropertyWithName:@"PointTutar"];
	self.IsPoint = [self getStringValueForSDMPropertyWithName:@"IsPoint"];
	self.GarentaTl = [self getDecimalValueForSDMPropertyWithName:@"GarentaTl"];
	self.Vkbur = [self getStringValueForSDMPropertyWithName:@"Vkbur"];
	self.OStatus = [self getStringValueForSDMPropertyWithName:@"OStatus"];
	self.OCode = [self getStringValueForSDMPropertyWithName:@"OCode"];
	self.OMessage = [self getStringValueForSDMPropertyWithName:@"OMessage"];
	self.OErrMessage = [self getStringValueForSDMPropertyWithName:@"OErrMessage"];
	self.OProv = [self getStringValueForSDMPropertyWithName:@"OProv"];
	self.OPoint = [self getStringValueForSDMPropertyWithName:@"OPoint"];
	self.OAwkey = [self getStringValueForSDMPropertyWithName:@"OAwkey"];
	self.OAwlog = [self getStringValueForSDMPropertyWithName:@"OAwlog"];
	self.OIpt = [self getStringValueForSDMPropertyWithName:@"OIpt"];
	self.OIpterr = [self getStringValueForSDMPropertyWithName:@"OIpterr"];
	self.Musterionay = [self getStringValueForSDMPropertyWithName:@"Musterionay"];
	self.Kunnr = [self getStringValueForSDMPropertyWithName:@"Kunnr"];
	self.OSanal = [self getStringValueForSDMPropertyWithName:@"OSanal"];
	self.OIpterrmes = [self getStringValueForSDMPropertyWithName:@"OIpterrmes"];
	self.OMskayit = [self getStringValueForSDMPropertyWithName:@"OMskayit"];
	self.MerKey = [self getStringValueForSDMPropertyWithName:@"MerKey"];
}

+ (NSMutableArray *)createIT_TAHSILATEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        IT_TAHSILATV0 *iT_TAHSILATObject = [[IT_TAHSILATV0 alloc] initWithSDMEntry:entry];
        [entries addObject:iT_TAHSILATObject];
    }
    return entries;
}


+ (NSMutableArray *)parseIT_TAHSILATEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:iT_TAHSILATEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [IT_TAHSILATV0 createIT_TAHSILATEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedIT_TAHSILATEntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:iT_TAHSILATEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [IT_TAHSILATV0 createIT_TAHSILATEntriesForSDMEntries:sdmEntries];
}

+ (IT_TAHSILATV0 *)parseIT_TAHSILATEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *iT_TAHSILATEntries = [IT_TAHSILATV0 parseIT_TAHSILATEntriesWithData:aData error:error];
    if (!iT_TAHSILATEntries) {
    	return nil;
    }
    return (IT_TAHSILATV0 *)[IT_TAHSILATV0 getFirstObjectFromArray:iT_TAHSILATEntries];
}

+ (IT_TAHSILATV0 *)parseExpandedIT_TAHSILATEntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:iT_TAHSILATEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *iT_TAHSILATEntries = [IT_TAHSILATV0 createIT_TAHSILATEntriesForSDMEntries:sdmEntries];
	return (IT_TAHSILATV0 *)[IT_TAHSILATV0 getFirstObjectFromArray:iT_TAHSILATEntries];
}



@end

#pragma mark - ReservationServiceV0
@implementation ReservationServiceV0

static NSMutableDictionary *reservationServiceLabels = nil;
static ODataEntitySchema *reservationServiceEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:reservationServiceEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}

- (NSMutableDictionary *)getSDMEntriesForNavigationProperties
{
    NSMutableDictionary *dictionary = [@{} mutableCopy];
    if ([self.IT_ARACLARSet count] > 0) {
    	dictionary[@"IT_ARACLARSet"] = [self createSDMEntriesForNavigationPropertyEntries:self.IT_ARACLARSet];
    }
    if ([self.IT_EKSURUCUSet count] > 0) {
    	dictionary[@"IT_EKSURUCUSet"] = [self createSDMEntriesForNavigationPropertyEntries:self.IT_EKSURUCUSet];
    }
    if ([self.IT_FATURA_ADRESSet count] > 0) {
    	dictionary[@"IT_FATURA_ADRESSet"] = [self createSDMEntriesForNavigationPropertyEntries:self.IT_FATURA_ADRESSet];
    }
    if ([self.IT_ITEMSSet count] > 0) {
    	dictionary[@"IT_ITEMSSet"] = [self createSDMEntriesForNavigationPropertyEntries:self.IT_ITEMSSet];
    }
    if ([self.IT_SDREZERVSet count] > 0) {
    	dictionary[@"IT_SDREZERVSet"] = [self createSDMEntriesForNavigationPropertyEntries:self.IT_SDREZERVSet];
    }
    if ([self.IT_TAHSILATSet count] > 0) {
    	dictionary[@"IT_TAHSILATSet"] = [self createSDMEntriesForNavigationPropertyEntries:self.IT_TAHSILATSet];
    }
    if ([self.ET_RETURNSet count] > 0) {
    	dictionary[@"ET_RETURNSet"] = [self createSDMEntriesForNavigationPropertyEntries:self.ET_RETURNSet];
    }
    if ([self.ET_KK_RETURNSet count] > 0) {
    	dictionary[@"ET_KK_RETURNSet"] = [self createSDMEntriesForNavigationPropertyEntries:self.ET_KK_RETURNSet];
    }
    return dictionary;
}


- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
		[self.IsInput setComplexTypePropertiesToSDMEntry:m_SDMEntry complexTypePropertyName:@"IsInput" error:&innerError];
		[self.IsUserinfo setComplexTypePropertiesToSDMEntry:m_SDMEntry complexTypePropertyName:@"IsUserinfo" error:&innerError];
		[self.EsOutput setComplexTypePropertiesToSDMEntry:m_SDMEntry complexTypePropertyName:@"EsOutput" error:&innerError];
    	[BaseODataObject setIntValueForSDMEntry:m_SDMEntry withValue:self.EvSubrc forSDMPropertyWithName:@"EvSubrc" error:&innerError];
        [self addRelativeLinksToSDMEntryFromDictionary:[self getSDMEntriesForNavigationProperties]];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"ReservationService" workspaceOfCollection:nil];
    reservationServiceEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"ReservationService" andService:aService];
    	if (properties) {    
	    	reservationServiceLabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
				if ([property.name isEqualToString:@"IsInput"]) {
	                [IsInputV0 loadLabels:property.children];
	            }
				if ([property.name isEqualToString:@"IsUserinfo"]) {
	                [IsUserinfoV0 loadLabels:property.children];
	            }
				if ([property.name isEqualToString:@"EsOutput"]) {
	                [EsOutputV0 loadLabels:property.children];
	            }
	        	reservationServiceLabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:reservationServiceLabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.IsInput = [[IsInputV0 alloc] initWithSDMDictionary:[self getDictionaryForComplexTypeProperty:@"IsInput"]];
	self.IsUserinfo = [[IsUserinfoV0 alloc] initWithSDMDictionary:[self getDictionaryForComplexTypeProperty:@"IsUserinfo"]];
	self.EsOutput = [[EsOutputV0 alloc] initWithSDMDictionary:[self getDictionaryForComplexTypeProperty:@"EsOutput"]];
	self.EvSubrc = [self getIntValueForSDMPropertyWithName:@"EvSubrc"];
}

- (void)loadNavigationPropertyQueries
{
    [super loadNavigationPropertyQueries];
    self.IT_ARACLARSetQuery = [self getRelatedLinkForNavigationName:@"IT_ARACLARSet"];
    self.IT_EKSURUCUSetQuery = [self getRelatedLinkForNavigationName:@"IT_EKSURUCUSet"];
    self.IT_FATURA_ADRESSetQuery = [self getRelatedLinkForNavigationName:@"IT_FATURA_ADRESSet"];
    self.IT_ITEMSSetQuery = [self getRelatedLinkForNavigationName:@"IT_ITEMSSet"];
    self.IT_SDREZERVSetQuery = [self getRelatedLinkForNavigationName:@"IT_SDREZERVSet"];
    self.IT_TAHSILATSetQuery = [self getRelatedLinkForNavigationName:@"IT_TAHSILATSet"];
    self.ET_RETURNSetQuery = [self getRelatedLinkForNavigationName:@"ET_RETURNSet"];
    self.ET_KK_RETURNSetQuery = [self getRelatedLinkForNavigationName:@"ET_KK_RETURNSet"];
}

- (void)loadNavigationPropertyData
{
    [super loadNavigationPropertyData];
    
    NSMutableArray *entries = nil;

    entries = [self getInlinedRelatedEntriesForNavigationName:@"IT_ARACLARSet"];
    self.IT_ARACLARSet = [IT_ARACLARV0 createIT_ARACLAREntriesForSDMEntries:entries];

    entries = [self getInlinedRelatedEntriesForNavigationName:@"IT_EKSURUCUSet"];
    self.IT_EKSURUCUSet = [IT_EKSURUCUV0 createIT_EKSURUCUEntriesForSDMEntries:entries];

    entries = [self getInlinedRelatedEntriesForNavigationName:@"IT_FATURA_ADRESSet"];
    self.IT_FATURA_ADRESSet = [IT_FATURA_ADRESV0 createIT_FATURA_ADRESEntriesForSDMEntries:entries];

    entries = [self getInlinedRelatedEntriesForNavigationName:@"IT_ITEMSSet"];
    self.IT_ITEMSSet = [IT_ITEMSV0 createIT_ITEMSEntriesForSDMEntries:entries];

    entries = [self getInlinedRelatedEntriesForNavigationName:@"IT_SDREZERVSet"];
    self.IT_SDREZERVSet = [IT_SDREZERVV0 createIT_SDREZERVEntriesForSDMEntries:entries];

    entries = [self getInlinedRelatedEntriesForNavigationName:@"IT_TAHSILATSet"];
    self.IT_TAHSILATSet = [IT_TAHSILATV0 createIT_TAHSILATEntriesForSDMEntries:entries];

    entries = [self getInlinedRelatedEntriesForNavigationName:@"ET_RETURNSet"];
    self.ET_RETURNSet = [ET_RETURNV0 createET_RETURNEntriesForSDMEntries:entries];

    entries = [self getInlinedRelatedEntriesForNavigationName:@"ET_KK_RETURNSet"];
    self.ET_KK_RETURNSet = [ET_KK_RETURNV0 createET_KK_RETURNEntriesForSDMEntries:entries];

}

+ (NSMutableArray *)createReservationServiceEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        ReservationServiceV0 *reservationServiceObject = [[ReservationServiceV0 alloc] initWithSDMEntry:entry];
        [entries addObject:reservationServiceObject];
    }
    return entries;
}


+ (NSMutableArray *)parseReservationServiceEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:reservationServiceEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [ReservationServiceV0 createReservationServiceEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedReservationServiceEntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:reservationServiceEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [ReservationServiceV0 createReservationServiceEntriesForSDMEntries:sdmEntries];
}

+ (ReservationServiceV0 *)parseReservationServiceEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *reservationServiceEntries = [ReservationServiceV0 parseReservationServiceEntriesWithData:aData error:error];
    if (!reservationServiceEntries) {
    	return nil;
    }
    return (ReservationServiceV0 *)[ReservationServiceV0 getFirstObjectFromArray:reservationServiceEntries];
}

+ (ReservationServiceV0 *)parseExpandedReservationServiceEntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:reservationServiceEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *reservationServiceEntries = [ReservationServiceV0 createReservationServiceEntriesForSDMEntries:sdmEntries];
	return (ReservationServiceV0 *)[ReservationServiceV0 getFirstObjectFromArray:reservationServiceEntries];
}


#pragma mark Entity Navigation Property loading methods
- (BOOL)loadIT_ARACLARSetWithData:(NSData *)aData error:(NSError **)error
{
    self.IT_ARACLARSet = [IT_ARACLARV0 parseIT_ARACLAREntriesWithData:aData error:error];
    if (!self.IT_ARACLARSet) {
    	return NO;
    }
    return YES;
}

- (BOOL)loadIT_EKSURUCUSetWithData:(NSData *)aData error:(NSError **)error
{
    self.IT_EKSURUCUSet = [IT_EKSURUCUV0 parseIT_EKSURUCUEntriesWithData:aData error:error];
    if (!self.IT_EKSURUCUSet) {
    	return NO;
    }
    return YES;
}

- (BOOL)loadIT_FATURA_ADRESSetWithData:(NSData *)aData error:(NSError **)error
{
    self.IT_FATURA_ADRESSet = [IT_FATURA_ADRESV0 parseIT_FATURA_ADRESEntriesWithData:aData error:error];
    if (!self.IT_FATURA_ADRESSet) {
    	return NO;
    }
    return YES;
}

- (BOOL)loadIT_ITEMSSetWithData:(NSData *)aData error:(NSError **)error
{
    self.IT_ITEMSSet = [IT_ITEMSV0 parseIT_ITEMSEntriesWithData:aData error:error];
    if (!self.IT_ITEMSSet) {
    	return NO;
    }
    return YES;
}

- (BOOL)loadIT_SDREZERVSetWithData:(NSData *)aData error:(NSError **)error
{
    self.IT_SDREZERVSet = [IT_SDREZERVV0 parseIT_SDREZERVEntriesWithData:aData error:error];
    if (!self.IT_SDREZERVSet) {
    	return NO;
    }
    return YES;
}

- (BOOL)loadIT_TAHSILATSetWithData:(NSData *)aData error:(NSError **)error
{
    self.IT_TAHSILATSet = [IT_TAHSILATV0 parseIT_TAHSILATEntriesWithData:aData error:error];
    if (!self.IT_TAHSILATSet) {
    	return NO;
    }
    return YES;
}

- (BOOL)loadET_RETURNSetWithData:(NSData *)aData error:(NSError **)error
{
    self.ET_RETURNSet = [ET_RETURNV0 parseET_RETURNEntriesWithData:aData error:error];
    if (!self.ET_RETURNSet) {
    	return NO;
    }
    return YES;
}

- (BOOL)loadET_KK_RETURNSetWithData:(NSData *)aData error:(NSError **)error
{
    self.ET_KK_RETURNSet = [ET_KK_RETURNV0 parseET_KK_RETURNEntriesWithData:aData error:error];
    if (!self.ET_KK_RETURNSet) {
    	return NO;
    }
    return YES;
}


@end


#pragma mark - ZGARENTA_REZERVASYON_SRVV0 Service Proxy


@implementation ZGARENTA_REZERVASYON_SRVServiceV0

- (NSString *)getServiceDocumentFilename
{
	return ZGARENTA_REZERVASYON_SRV_SERVICE_DOCUMENTV0;
}

- (NSString *)getServiceMetadataFilename
{
	return ZGARENTA_REZERVASYON_SRV_SERVICE_METADATAV0;
}

- (void)loadEntitySetQueries
{
	[super loadEntitySetQueries];
    self.ReservationServiceQuery = [self getQueryForRelativePath:@"ReservationService"];
    self.ET_KK_RETURNQuery = [self getQueryForRelativePath:@"ET_KK_RETURN"];
    self.ET_RETURNQuery = [self getQueryForRelativePath:@"ET_RETURN"];
    self.IT_ARACLARQuery = [self getQueryForRelativePath:@"IT_ARACLAR"];
    self.IT_EKSURUCUQuery = [self getQueryForRelativePath:@"IT_EKSURUCU"];
    self.IT_FATURA_ADRESQuery = [self getQueryForRelativePath:@"IT_FATURA_ADRES"];
    self.IT_ITEMSQuery = [self getQueryForRelativePath:@"IT_ITEMS"];
    self.IT_SDREZERVQuery = [self getQueryForRelativePath:@"IT_SDREZERV"];
    self.IT_TAHSILATQuery = [self getQueryForRelativePath:@"IT_TAHSILAT"];
}

- (void)loadEntitySchemaForAllEntityTypes
{
    [super loadEntitySchemaForAllEntityTypes];
    [ET_KK_RETURNV0 loadEntitySchema:self.sdmServiceDocument];
    [ET_RETURNV0 loadEntitySchema:self.sdmServiceDocument];
    [IT_ARACLARV0 loadEntitySchema:self.sdmServiceDocument];
    [IT_EKSURUCUV0 loadEntitySchema:self.sdmServiceDocument];
    [IT_FATURA_ADRESV0 loadEntitySchema:self.sdmServiceDocument];
    [IT_ITEMSV0 loadEntitySchema:self.sdmServiceDocument];
    [IT_SDREZERVV0 loadEntitySchema:self.sdmServiceDocument];
    [IT_TAHSILATV0 loadEntitySchema:self.sdmServiceDocument];
    [ReservationServiceV0 loadEntitySchema:self.sdmServiceDocument];
}

- (void)loadLabels
{
    [super loadLabels];
    [ET_KK_RETURNV0 loadLabels:self.sdmServiceDocument];
    [ET_RETURNV0 loadLabels:self.sdmServiceDocument];
    [IT_ARACLARV0 loadLabels:self.sdmServiceDocument];
    [IT_EKSURUCUV0 loadLabels:self.sdmServiceDocument];
    [IT_FATURA_ADRESV0 loadLabels:self.sdmServiceDocument];
    [IT_ITEMSV0 loadLabels:self.sdmServiceDocument];
    [IT_SDREZERVV0 loadLabels:self.sdmServiceDocument];
    [IT_TAHSILATV0 loadLabels:self.sdmServiceDocument];
    [ReservationServiceV0 loadLabels:self.sdmServiceDocument];
}

 
#pragma mark Service Entity Set methods
- (NSMutableArray *)getReservationServiceWithData:(NSData *)aData error:(NSError **)error
{
	return [ReservationServiceV0 parseExpandedReservationServiceEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getReservationServiceEntryQueryWithEvSubrc:(NSString *)EvSubrc
{
	EvSubrc = [ODataQuery encodeURLParameter:EvSubrc];
	NSString *relativePath = [NSString stringWithFormat:@"ReservationService(EvSubrc=%@)", EvSubrc];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getReservationServiceEntryQueryTypedWithEvSubrc:(NSNumber *)EvSubrc
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *EvSubrcUri = [ODataQuery encodeURLParameter:[converter convertToEdmInt32URI:EvSubrc]];
	NSString *relativePath = [NSString stringWithFormat:@"ReservationService(EvSubrc=%@)", EvSubrcUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ReservationServiceV0 *)getReservationServiceEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [ReservationServiceV0 parseExpandedReservationServiceEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (NSMutableArray *)getET_KK_RETURNWithData:(NSData *)aData error:(NSError **)error
{
	return [ET_KK_RETURNV0 parseExpandedET_KK_RETURNEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getET_KK_RETURNEntryQueryWithOErrMessage:(NSString *)OErrMessage
{
	OErrMessage = [ODataQuery encodeURLParameter:OErrMessage];
	NSString *relativePath = [NSString stringWithFormat:@"ET_KK_RETURN(OErrMessage=%@)", OErrMessage];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getET_KK_RETURNEntryQueryTypedWithOErrMessage:(NSString *)OErrMessage
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *OErrMessageUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:OErrMessage]];
	NSString *relativePath = [NSString stringWithFormat:@"ET_KK_RETURN(OErrMessage=%@)", OErrMessageUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ET_KK_RETURNV0 *)getET_KK_RETURNEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [ET_KK_RETURNV0 parseExpandedET_KK_RETURNEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (NSMutableArray *)getET_RETURNWithData:(NSData *)aData error:(NSError **)error
{
	return [ET_RETURNV0 parseExpandedET_RETURNEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getET_RETURNEntryQueryWithType:(NSString *)Type andId:(NSString *)Id andNumber:(NSString *)Number andMessage:(NSString *)Message andLogNo:(NSString *)LogNo andLogMsgNo:(NSString *)LogMsgNo andMessageV1:(NSString *)MessageV1 andMessageV2:(NSString *)MessageV2 andMessageV3:(NSString *)MessageV3 andMessageV4:(NSString *)MessageV4 andParameter:(NSString *)Parameter andRow:(NSString *)Row andField:(NSString *)Field andSystem:(NSString *)System
{
	Type = [ODataQuery encodeURLParameter:Type];
	Id = [ODataQuery encodeURLParameter:Id];
	Number = [ODataQuery encodeURLParameter:Number];
	Message = [ODataQuery encodeURLParameter:Message];
	LogNo = [ODataQuery encodeURLParameter:LogNo];
	LogMsgNo = [ODataQuery encodeURLParameter:LogMsgNo];
	MessageV1 = [ODataQuery encodeURLParameter:MessageV1];
	MessageV2 = [ODataQuery encodeURLParameter:MessageV2];
	MessageV3 = [ODataQuery encodeURLParameter:MessageV3];
	MessageV4 = [ODataQuery encodeURLParameter:MessageV4];
	Parameter = [ODataQuery encodeURLParameter:Parameter];
	Row = [ODataQuery encodeURLParameter:Row];
	Field = [ODataQuery encodeURLParameter:Field];
	System = [ODataQuery encodeURLParameter:System];
	NSString *relativePath = [NSString stringWithFormat:@"ET_RETURN(Type=%@,Id=%@,Number=%@,Message=%@,LogNo=%@,LogMsgNo=%@,MessageV1=%@,MessageV2=%@,MessageV3=%@,MessageV4=%@,Parameter=%@,Row=%@,Field=%@,System=%@)", Type, Id, Number, Message, LogNo, LogMsgNo, MessageV1, MessageV2, MessageV3, MessageV4, Parameter, Row, Field, System];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getET_RETURNEntryQueryTypedWithType:(NSString *)Type andId:(NSString *)Id andNumber:(NSString *)Number andMessage:(NSString *)Message andLogNo:(NSString *)LogNo andLogMsgNo:(NSString *)LogMsgNo andMessageV1:(NSString *)MessageV1 andMessageV2:(NSString *)MessageV2 andMessageV3:(NSString *)MessageV3 andMessageV4:(NSString *)MessageV4 andParameter:(NSString *)Parameter andRow:(NSNumber *)Row andField:(NSString *)Field andSystem:(NSString *)System
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *TypeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Type]];
	NSString *IdUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Id]];
	NSString *NumberUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Number]];
	NSString *MessageUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Message]];
	NSString *LogNoUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:LogNo]];
	NSString *LogMsgNoUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:LogMsgNo]];
	NSString *MessageV1Uri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:MessageV1]];
	NSString *MessageV2Uri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:MessageV2]];
	NSString *MessageV3Uri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:MessageV3]];
	NSString *MessageV4Uri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:MessageV4]];
	NSString *ParameterUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Parameter]];
	NSString *RowUri = [ODataQuery encodeURLParameter:[converter convertToEdmInt32URI:Row]];
	NSString *FieldUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Field]];
	NSString *SystemUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:System]];
	NSString *relativePath = [NSString stringWithFormat:@"ET_RETURN(Type=%@,Id=%@,Number=%@,Message=%@,LogNo=%@,LogMsgNo=%@,MessageV1=%@,MessageV2=%@,MessageV3=%@,MessageV4=%@,Parameter=%@,Row=%@,Field=%@,System=%@)", TypeUri, IdUri, NumberUri, MessageUri, LogNoUri, LogMsgNoUri, MessageV1Uri, MessageV2Uri, MessageV3Uri, MessageV4Uri, ParameterUri, RowUri, FieldUri, SystemUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ET_RETURNV0 *)getET_RETURNEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [ET_RETURNV0 parseExpandedET_RETURNEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (NSMutableArray *)getIT_ARACLARWithData:(NSData *)aData error:(NSError **)error
{
	return [IT_ARACLARV0 parseExpandedIT_ARACLAREntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getIT_ARACLAREntryQueryWithMatnr:(NSString *)Matnr
{
	Matnr = [ODataQuery encodeURLParameter:Matnr];
	NSString *relativePath = [NSString stringWithFormat:@"IT_ARACLAR(Matnr=%@)", Matnr];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getIT_ARACLAREntryQueryTypedWithMatnr:(NSString *)Matnr
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *MatnrUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Matnr]];
	NSString *relativePath = [NSString stringWithFormat:@"IT_ARACLAR(Matnr=%@)", MatnrUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (IT_ARACLARV0 *)getIT_ARACLAREntryWithData:(NSData *)aData error:(NSError **)error
{
	return [IT_ARACLARV0 parseExpandedIT_ARACLAREntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (NSMutableArray *)getIT_EKSURUCUWithData:(NSData *)aData error:(NSError **)error
{
	return [IT_EKSURUCUV0 parseExpandedIT_EKSURUCUEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getIT_EKSURUCUEntryQueryWithCinsiyet:(NSString *)Cinsiyet andFirstname:(NSString *)Firstname andLastname:(NSString *)Lastname andBirthdate:(NSString *)Birthdate andTckn:(NSString *)Tckn andTelno:(NSString *)Telno andUyruk:(NSString *)Uyruk andUlke:(NSString *)Ulke andEhliyetTarihi:(NSString *)EhliyetTarihi andEhliyetAlisyeri:(NSString *)EhliyetAlisyeri andEhliyetSinifi:(NSString *)EhliyetSinifi andEhliyetNo:(NSString *)EhliyetNo
{
	Cinsiyet = [ODataQuery encodeURLParameter:Cinsiyet];
	Firstname = [ODataQuery encodeURLParameter:Firstname];
	Lastname = [ODataQuery encodeURLParameter:Lastname];
	Birthdate = [ODataQuery encodeURLParameter:Birthdate];
	Tckn = [ODataQuery encodeURLParameter:Tckn];
	Telno = [ODataQuery encodeURLParameter:Telno];
	Uyruk = [ODataQuery encodeURLParameter:Uyruk];
	Ulke = [ODataQuery encodeURLParameter:Ulke];
	EhliyetTarihi = [ODataQuery encodeURLParameter:EhliyetTarihi];
	EhliyetAlisyeri = [ODataQuery encodeURLParameter:EhliyetAlisyeri];
	EhliyetSinifi = [ODataQuery encodeURLParameter:EhliyetSinifi];
	EhliyetNo = [ODataQuery encodeURLParameter:EhliyetNo];
	NSString *relativePath = [NSString stringWithFormat:@"IT_EKSURUCU(Cinsiyet=%@,Firstname=%@,Lastname=%@,Birthdate=%@,Tckn=%@,Telno=%@,Uyruk=%@,Ulke=%@,EhliyetTarihi=%@,EhliyetAlisyeri=%@,EhliyetSinifi=%@,EhliyetNo=%@)", Cinsiyet, Firstname, Lastname, Birthdate, Tckn, Telno, Uyruk, Ulke, EhliyetTarihi, EhliyetAlisyeri, EhliyetSinifi, EhliyetNo];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getIT_EKSURUCUEntryQueryTypedWithCinsiyet:(NSString *)Cinsiyet andFirstname:(NSString *)Firstname andLastname:(NSString *)Lastname andBirthdate:(NSDate *)Birthdate andTckn:(NSString *)Tckn andTelno:(NSString *)Telno andUyruk:(NSString *)Uyruk andUlke:(NSString *)Ulke andEhliyetTarihi:(NSDate *)EhliyetTarihi andEhliyetAlisyeri:(NSString *)EhliyetAlisyeri andEhliyetSinifi:(NSString *)EhliyetSinifi andEhliyetNo:(NSString *)EhliyetNo
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *CinsiyetUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Cinsiyet]];
	NSString *FirstnameUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Firstname]];
	NSString *LastnameUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Lastname]];
	NSString *BirthdateUri = [ODataQuery encodeURLParameter:[converter convertToEdmDateTimeURI:Birthdate]];
	NSString *TcknUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Tckn]];
	NSString *TelnoUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Telno]];
	NSString *UyrukUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Uyruk]];
	NSString *UlkeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Ulke]];
	NSString *EhliyetTarihiUri = [ODataQuery encodeURLParameter:[converter convertToEdmDateTimeURI:EhliyetTarihi]];
	NSString *EhliyetAlisyeriUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:EhliyetAlisyeri]];
	NSString *EhliyetSinifiUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:EhliyetSinifi]];
	NSString *EhliyetNoUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:EhliyetNo]];
	NSString *relativePath = [NSString stringWithFormat:@"IT_EKSURUCU(Cinsiyet=%@,Firstname=%@,Lastname=%@,Birthdate=%@,Tckn=%@,Telno=%@,Uyruk=%@,Ulke=%@,EhliyetTarihi=%@,EhliyetAlisyeri=%@,EhliyetSinifi=%@,EhliyetNo=%@)", CinsiyetUri, FirstnameUri, LastnameUri, BirthdateUri, TcknUri, TelnoUri, UyrukUri, UlkeUri, EhliyetTarihiUri, EhliyetAlisyeriUri, EhliyetSinifiUri, EhliyetNoUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (IT_EKSURUCUV0 *)getIT_EKSURUCUEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [IT_EKSURUCUV0 parseExpandedIT_EKSURUCUEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (NSMutableArray *)getIT_FATURA_ADRESWithData:(NSData *)aData error:(NSError **)error
{
	return [IT_FATURA_ADRESV0 parseExpandedIT_FATURA_ADRESEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getIT_FATURA_ADRESEntryQueryWithAdresKaydet:(NSString *)AdresKaydet andAdresTanim:(NSString *)AdresTanim andIlcekod:(NSString *)Ilcekod andIlkodu:(NSString *)Ilkodu andUlke:(NSString *)Ulke andAdres:(NSString *)Adres andLastname:(NSString *)Lastname andFirstname:(NSString *)Firstname andTckn:(NSString *)Tckn andAddrnumber:(NSString *)Addrnumber
{
	AdresKaydet = [ODataQuery encodeURLParameter:AdresKaydet];
	AdresTanim = [ODataQuery encodeURLParameter:AdresTanim];
	Ilcekod = [ODataQuery encodeURLParameter:Ilcekod];
	Ilkodu = [ODataQuery encodeURLParameter:Ilkodu];
	Ulke = [ODataQuery encodeURLParameter:Ulke];
	Adres = [ODataQuery encodeURLParameter:Adres];
	Lastname = [ODataQuery encodeURLParameter:Lastname];
	Firstname = [ODataQuery encodeURLParameter:Firstname];
	Tckn = [ODataQuery encodeURLParameter:Tckn];
	Addrnumber = [ODataQuery encodeURLParameter:Addrnumber];
	NSString *relativePath = [NSString stringWithFormat:@"IT_FATURA_ADRES(AdresKaydet=%@,AdresTanim=%@,Ilcekod=%@,Ilkodu=%@,Ulke=%@,Adres=%@,Lastname=%@,Firstname=%@,Tckn=%@,Addrnumber=%@)", AdresKaydet, AdresTanim, Ilcekod, Ilkodu, Ulke, Adres, Lastname, Firstname, Tckn, Addrnumber];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getIT_FATURA_ADRESEntryQueryTypedWithAdresKaydet:(NSString *)AdresKaydet andAdresTanim:(NSString *)AdresTanim andIlcekod:(NSString *)Ilcekod andIlkodu:(NSString *)Ilkodu andUlke:(NSString *)Ulke andAdres:(NSString *)Adres andLastname:(NSString *)Lastname andFirstname:(NSString *)Firstname andTckn:(NSString *)Tckn andAddrnumber:(NSString *)Addrnumber
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *AdresKaydetUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:AdresKaydet]];
	NSString *AdresTanimUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:AdresTanim]];
	NSString *IlcekodUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Ilcekod]];
	NSString *IlkoduUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Ilkodu]];
	NSString *UlkeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Ulke]];
	NSString *AdresUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Adres]];
	NSString *LastnameUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Lastname]];
	NSString *FirstnameUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Firstname]];
	NSString *TcknUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Tckn]];
	NSString *AddrnumberUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Addrnumber]];
	NSString *relativePath = [NSString stringWithFormat:@"IT_FATURA_ADRES(AdresKaydet=%@,AdresTanim=%@,Ilcekod=%@,Ilkodu=%@,Ulke=%@,Adres=%@,Lastname=%@,Firstname=%@,Tckn=%@,Addrnumber=%@)", AdresKaydetUri, AdresTanimUri, IlcekodUri, IlkoduUri, UlkeUri, AdresUri, LastnameUri, FirstnameUri, TcknUri, AddrnumberUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (IT_FATURA_ADRESV0 *)getIT_FATURA_ADRESEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [IT_FATURA_ADRESV0 parseExpandedIT_FATURA_ADRESEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (NSMutableArray *)getIT_ITEMSWithData:(NSData *)aData error:(NSError **)error
{
	return [IT_ITEMSV0 parseExpandedIT_ITEMSEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getIT_ITEMSEntryQueryWithTeslimSubesi:(NSString *)TeslimSubesi andAlisSubesi:(NSString *)AlisSubesi andAracGrubu:(NSString *)AracGrubu andMiktar:(NSString *)Miktar andMalzemeNo:(NSString *)MalzemeNo andRezKalemNo:(NSString *)RezKalemNo andSatisBurosu:(NSString *)SatisBurosu andKampanyaId:(NSString *)KampanyaId andFiyat:(NSString *)Fiyat andCKislastik:(NSString *)CKislastik andAracRenk:(NSString *)AracRenk andSasiNo:(NSString *)SasiNo andPlakaNo:(NSString *)PlakaNo andJatoMarka:(NSString *)JatoMarka andJatoModel:(NSString *)JatoModel andFiloSegment:(NSString *)FiloSegment
{
	TeslimSubesi = [ODataQuery encodeURLParameter:TeslimSubesi];
	AlisSubesi = [ODataQuery encodeURLParameter:AlisSubesi];
	AracGrubu = [ODataQuery encodeURLParameter:AracGrubu];
	Miktar = [ODataQuery encodeURLParameter:Miktar];
	MalzemeNo = [ODataQuery encodeURLParameter:MalzemeNo];
	RezKalemNo = [ODataQuery encodeURLParameter:RezKalemNo];
	SatisBurosu = [ODataQuery encodeURLParameter:SatisBurosu];
	KampanyaId = [ODataQuery encodeURLParameter:KampanyaId];
	Fiyat = [ODataQuery encodeURLParameter:Fiyat];
	CKislastik = [ODataQuery encodeURLParameter:CKislastik];
	AracRenk = [ODataQuery encodeURLParameter:AracRenk];
	SasiNo = [ODataQuery encodeURLParameter:SasiNo];
	PlakaNo = [ODataQuery encodeURLParameter:PlakaNo];
	JatoMarka = [ODataQuery encodeURLParameter:JatoMarka];
	JatoModel = [ODataQuery encodeURLParameter:JatoModel];
	FiloSegment = [ODataQuery encodeURLParameter:FiloSegment];
	NSString *relativePath = [NSString stringWithFormat:@"IT_ITEMS(TeslimSubesi=%@,AlisSubesi=%@,AracGrubu=%@,Miktar=%@,MalzemeNo=%@,RezKalemNo=%@,SatisBurosu=%@,KampanyaId=%@,Fiyat=%@,CKislastik=%@,AracRenk=%@,SasiNo=%@,PlakaNo=%@,JatoMarka=%@,JatoModel=%@,FiloSegment=%@)", TeslimSubesi, AlisSubesi, AracGrubu, Miktar, MalzemeNo, RezKalemNo, SatisBurosu, KampanyaId, Fiyat, CKislastik, AracRenk, SasiNo, PlakaNo, JatoMarka, JatoModel, FiloSegment];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getIT_ITEMSEntryQueryTypedWithTeslimSubesi:(NSString *)TeslimSubesi andAlisSubesi:(NSString *)AlisSubesi andAracGrubu:(NSString *)AracGrubu andMiktar:(NSDecimalNumber *)Miktar andMalzemeNo:(NSString *)MalzemeNo andRezKalemNo:(NSString *)RezKalemNo andSatisBurosu:(NSString *)SatisBurosu andKampanyaId:(NSString *)KampanyaId andFiyat:(NSDecimalNumber *)Fiyat andCKislastik:(NSString *)CKislastik andAracRenk:(NSString *)AracRenk andSasiNo:(NSString *)SasiNo andPlakaNo:(NSString *)PlakaNo andJatoMarka:(NSString *)JatoMarka andJatoModel:(NSString *)JatoModel andFiloSegment:(NSString *)FiloSegment
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *TeslimSubesiUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:TeslimSubesi]];
	NSString *AlisSubesiUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:AlisSubesi]];
	NSString *AracGrubuUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:AracGrubu]];
	NSString *MiktarUri = [ODataQuery encodeURLParameter:[converter convertToEdmDecimalURI:Miktar]];
	NSString *MalzemeNoUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:MalzemeNo]];
	NSString *RezKalemNoUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:RezKalemNo]];
	NSString *SatisBurosuUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:SatisBurosu]];
	NSString *KampanyaIdUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:KampanyaId]];
	NSString *FiyatUri = [ODataQuery encodeURLParameter:[converter convertToEdmDecimalURI:Fiyat]];
	NSString *CKislastikUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:CKislastik]];
	NSString *AracRenkUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:AracRenk]];
	NSString *SasiNoUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:SasiNo]];
	NSString *PlakaNoUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:PlakaNo]];
	NSString *JatoMarkaUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:JatoMarka]];
	NSString *JatoModelUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:JatoModel]];
	NSString *FiloSegmentUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:FiloSegment]];
	NSString *relativePath = [NSString stringWithFormat:@"IT_ITEMS(TeslimSubesi=%@,AlisSubesi=%@,AracGrubu=%@,Miktar=%@,MalzemeNo=%@,RezKalemNo=%@,SatisBurosu=%@,KampanyaId=%@,Fiyat=%@,CKislastik=%@,AracRenk=%@,SasiNo=%@,PlakaNo=%@,JatoMarka=%@,JatoModel=%@,FiloSegment=%@)", TeslimSubesiUri, AlisSubesiUri, AracGrubuUri, MiktarUri, MalzemeNoUri, RezKalemNoUri, SatisBurosuUri, KampanyaIdUri, FiyatUri, CKislastikUri, AracRenkUri, SasiNoUri, PlakaNoUri, JatoMarkaUri, JatoModelUri, FiloSegmentUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (IT_ITEMSV0 *)getIT_ITEMSEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [IT_ITEMSV0 parseExpandedIT_ITEMSEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (NSMutableArray *)getIT_SDREZERVWithData:(NSData *)aData error:(NSError **)error
{
	return [IT_SDREZERVV0 parseExpandedIT_SDREZERVEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getIT_SDREZERVEntryQueryWithGrupKodu:(NSString *)GrupKodu
{
	GrupKodu = [ODataQuery encodeURLParameter:GrupKodu];
	NSString *relativePath = [NSString stringWithFormat:@"IT_SDREZERV(GrupKodu=%@)", GrupKodu];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getIT_SDREZERVEntryQueryTypedWithGrupKodu:(NSString *)GrupKodu
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *GrupKoduUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:GrupKodu]];
	NSString *relativePath = [NSString stringWithFormat:@"IT_SDREZERV(GrupKodu=%@)", GrupKoduUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (IT_SDREZERVV0 *)getIT_SDREZERVEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [IT_SDREZERVV0 parseExpandedIT_SDREZERVEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (NSMutableArray *)getIT_TAHSILATWithData:(NSData *)aData error:(NSError **)error
{
	return [IT_TAHSILATV0 parseExpandedIT_TAHSILATEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getIT_TAHSILATEntryQueryWithTahstip:(NSString *)Tahstip andKartSahibi:(NSString *)KartSahibi andKartNumarasi:(NSString *)KartNumarasi andGuvenlikkodu:(NSString *)Guvenlikkodu andAy:(NSString *)Ay andYil:(NSString *)Yil andOrderId:(NSString *)OrderId andCustomerIp:(NSString *)CustomerIp andCustomerEmail:(NSString *)CustomerEmail andCustomerFullname:(NSString *)CustomerFullname andCompanyname:(NSString *)Companyname andAmount:(NSString *)Amount andPoint:(NSString *)Point andPointTutar:(NSString *)PointTutar andIsPoint:(NSString *)IsPoint andGarentaTl:(NSString *)GarentaTl andVkbur:(NSString *)Vkbur andOStatus:(NSString *)OStatus andOCode:(NSString *)OCode andOMessage:(NSString *)OMessage andOErrMessage:(NSString *)OErrMessage andOProv:(NSString *)OProv andOPoint:(NSString *)OPoint andOAwkey:(NSString *)OAwkey andOAwlog:(NSString *)OAwlog andOIpt:(NSString *)OIpt andOIpterr:(NSString *)OIpterr andMusterionay:(NSString *)Musterionay
{
	Tahstip = [ODataQuery encodeURLParameter:Tahstip];
	KartSahibi = [ODataQuery encodeURLParameter:KartSahibi];
	KartNumarasi = [ODataQuery encodeURLParameter:KartNumarasi];
	Guvenlikkodu = [ODataQuery encodeURLParameter:Guvenlikkodu];
	Ay = [ODataQuery encodeURLParameter:Ay];
	Yil = [ODataQuery encodeURLParameter:Yil];
	OrderId = [ODataQuery encodeURLParameter:OrderId];
	CustomerIp = [ODataQuery encodeURLParameter:CustomerIp];
	CustomerEmail = [ODataQuery encodeURLParameter:CustomerEmail];
	CustomerFullname = [ODataQuery encodeURLParameter:CustomerFullname];
	Companyname = [ODataQuery encodeURLParameter:Companyname];
	Amount = [ODataQuery encodeURLParameter:Amount];
	Point = [ODataQuery encodeURLParameter:Point];
	PointTutar = [ODataQuery encodeURLParameter:PointTutar];
	IsPoint = [ODataQuery encodeURLParameter:IsPoint];
	GarentaTl = [ODataQuery encodeURLParameter:GarentaTl];
	Vkbur = [ODataQuery encodeURLParameter:Vkbur];
	OStatus = [ODataQuery encodeURLParameter:OStatus];
	OCode = [ODataQuery encodeURLParameter:OCode];
	OMessage = [ODataQuery encodeURLParameter:OMessage];
	OErrMessage = [ODataQuery encodeURLParameter:OErrMessage];
	OProv = [ODataQuery encodeURLParameter:OProv];
	OPoint = [ODataQuery encodeURLParameter:OPoint];
	OAwkey = [ODataQuery encodeURLParameter:OAwkey];
	OAwlog = [ODataQuery encodeURLParameter:OAwlog];
	OIpt = [ODataQuery encodeURLParameter:OIpt];
	OIpterr = [ODataQuery encodeURLParameter:OIpterr];
	Musterionay = [ODataQuery encodeURLParameter:Musterionay];
	NSString *relativePath = [NSString stringWithFormat:@"IT_TAHSILAT(Tahstip=%@,KartSahibi=%@,KartNumarasi=%@,Guvenlikkodu=%@,Ay=%@,Yil=%@,OrderId=%@,CustomerIp=%@,CustomerEmail=%@,CustomerFullname=%@,Companyname=%@,Amount=%@,Point=%@,PointTutar=%@,IsPoint=%@,GarentaTl=%@,Vkbur=%@,OStatus=%@,OCode=%@,OMessage=%@,OErrMessage=%@,OProv=%@,OPoint=%@,OAwkey=%@,OAwlog=%@,OIpt=%@,OIpterr=%@,Musterionay=%@)", Tahstip, KartSahibi, KartNumarasi, Guvenlikkodu, Ay, Yil, OrderId, CustomerIp, CustomerEmail, CustomerFullname, Companyname, Amount, Point, PointTutar, IsPoint, GarentaTl, Vkbur, OStatus, OCode, OMessage, OErrMessage, OProv, OPoint, OAwkey, OAwlog, OIpt, OIpterr, Musterionay];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getIT_TAHSILATEntryQueryTypedWithTahstip:(NSString *)Tahstip andKartSahibi:(NSString *)KartSahibi andKartNumarasi:(NSString *)KartNumarasi andGuvenlikkodu:(NSString *)Guvenlikkodu andAy:(NSString *)Ay andYil:(NSString *)Yil andOrderId:(NSString *)OrderId andCustomerIp:(NSString *)CustomerIp andCustomerEmail:(NSString *)CustomerEmail andCustomerFullname:(NSString *)CustomerFullname andCompanyname:(NSString *)Companyname andAmount:(NSDecimalNumber *)Amount andPoint:(NSDecimalNumber *)Point andPointTutar:(NSDecimalNumber *)PointTutar andIsPoint:(NSString *)IsPoint andGarentaTl:(NSDecimalNumber *)GarentaTl andVkbur:(NSString *)Vkbur andOStatus:(NSString *)OStatus andOCode:(NSString *)OCode andOMessage:(NSString *)OMessage andOErrMessage:(NSString *)OErrMessage andOProv:(NSString *)OProv andOPoint:(NSString *)OPoint andOAwkey:(NSString *)OAwkey andOAwlog:(NSString *)OAwlog andOIpt:(NSString *)OIpt andOIpterr:(NSString *)OIpterr andMusterionay:(NSString *)Musterionay
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *TahstipUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Tahstip]];
	NSString *KartSahibiUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:KartSahibi]];
	NSString *KartNumarasiUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:KartNumarasi]];
	NSString *GuvenlikkoduUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Guvenlikkodu]];
	NSString *AyUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Ay]];
	NSString *YilUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Yil]];
	NSString *OrderIdUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:OrderId]];
	NSString *CustomerIpUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:CustomerIp]];
	NSString *CustomerEmailUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:CustomerEmail]];
	NSString *CustomerFullnameUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:CustomerFullname]];
	NSString *CompanynameUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Companyname]];
	NSString *AmountUri = [ODataQuery encodeURLParameter:[converter convertToEdmDecimalURI:Amount]];
	NSString *PointUri = [ODataQuery encodeURLParameter:[converter convertToEdmDecimalURI:Point]];
	NSString *PointTutarUri = [ODataQuery encodeURLParameter:[converter convertToEdmDecimalURI:PointTutar]];
	NSString *IsPointUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:IsPoint]];
	NSString *GarentaTlUri = [ODataQuery encodeURLParameter:[converter convertToEdmDecimalURI:GarentaTl]];
	NSString *VkburUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Vkbur]];
	NSString *OStatusUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:OStatus]];
	NSString *OCodeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:OCode]];
	NSString *OMessageUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:OMessage]];
	NSString *OErrMessageUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:OErrMessage]];
	NSString *OProvUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:OProv]];
	NSString *OPointUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:OPoint]];
	NSString *OAwkeyUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:OAwkey]];
	NSString *OAwlogUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:OAwlog]];
	NSString *OIptUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:OIpt]];
	NSString *OIpterrUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:OIpterr]];
	NSString *MusterionayUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Musterionay]];
	NSString *relativePath = [NSString stringWithFormat:@"IT_TAHSILAT(Tahstip=%@,KartSahibi=%@,KartNumarasi=%@,Guvenlikkodu=%@,Ay=%@,Yil=%@,OrderId=%@,CustomerIp=%@,CustomerEmail=%@,CustomerFullname=%@,Companyname=%@,Amount=%@,Point=%@,PointTutar=%@,IsPoint=%@,GarentaTl=%@,Vkbur=%@,OStatus=%@,OCode=%@,OMessage=%@,OErrMessage=%@,OProv=%@,OPoint=%@,OAwkey=%@,OAwlog=%@,OIpt=%@,OIpterr=%@,Musterionay=%@)", TahstipUri, KartSahibiUri, KartNumarasiUri, GuvenlikkoduUri, AyUri, YilUri, OrderIdUri, CustomerIpUri, CustomerEmailUri, CustomerFullnameUri, CompanynameUri, AmountUri, PointUri, PointTutarUri, IsPointUri, GarentaTlUri, VkburUri, OStatusUri, OCodeUri, OMessageUri, OErrMessageUri, OProvUri, OPointUri, OAwkeyUri, OAwlogUri, OIptUri, OIpterrUri, MusterionayUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (IT_TAHSILATV0 *)getIT_TAHSILATEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [IT_TAHSILATV0 parseExpandedIT_TAHSILATEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}



#pragma mark Service Function Import methods 

@end
