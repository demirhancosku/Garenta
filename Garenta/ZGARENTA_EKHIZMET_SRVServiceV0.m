/*
 
 Auto-Generated by SAP NetWeaver Gateway Productivity Accelerator, Version 1.1.1
  
 File: ZGARENTA_EKHIZMET_SRVServiceV0.h
 Abstract: The generated proxy classes for the ZGARENTA_EKHIZMET_SRV Service.  
*/

#import "ZGARENTA_EKHIZMET_SRVServiceV0.h"
#import "BaseODataObject.h"
#import "Logger.h"
#import "ODataEntitySchema.h"
#import "ODataCollection.h"
#import "ODataFunctionImport.h"
#import "TypeConverter.h"

#define ZGARENTA_EKHIZMET_SRV_SERVICE_DOCUMENTV0 @"ZGARENTA_EKHIZMET_SRVServiceDocumentV0"
#define ZGARENTA_EKHIZMET_SRV_SERVICE_METADATAV0 @"ZGARENTA_EKHIZMET_SRVServiceMetadataV0"

#pragma mark - Complex Types



#pragma mark - Entity Types


#pragma mark - AdditionalEquipmentServiceV0
@implementation AdditionalEquipmentServiceV0

static NSMutableDictionary *additionalEquipmentServiceLabels = nil;
static ODataEntitySchema *additionalEquipmentServiceEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:additionalEquipmentServiceEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}

- (NSMutableDictionary *)getSDMEntriesForNavigationProperties
{
    NSMutableDictionary *dictionary = [@{} mutableCopy];
    if ([self.EXPT_EKPLISTSet count] > 0) {
    	dictionary[@"EXPT_EKPLISTSet"] = [self createSDMEntriesForNavigationPropertyEntries:self.EXPT_EKPLISTSet];
    }
    if ([self.EXPT_SIGORTASet count] > 0) {
    	dictionary[@"EXPT_SIGORTASet"] = [self createSDMEntriesForNavigationPropertyEntries:self.EXPT_SIGORTASet];
    }
    if ([self.EXPT_HIZMETSet count] > 0) {
    	dictionary[@"EXPT_HIZMETSet"] = [self createSDMEntriesForNavigationPropertyEntries:self.EXPT_HIZMETSet];
    }
    if ([self.EXPT_HASARSet count] > 0) {
    	dictionary[@"EXPT_HASARSet"] = [self createSDMEntriesForNavigationPropertyEntries:self.EXPT_HASARSet];
    }
    if ([self.EXPT_EKSURUCUSet count] > 0) {
    	dictionary[@"EXPT_EKSURUCUSet"] = [self createSDMEntriesForNavigationPropertyEntries:self.EXPT_EKSURUCUSet];
    }
    return dictionary;
}


- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setDateTimeValueForSDMEntry:m_SDMEntry withValue:self.ImppBegda forSDMPropertyWithName:@"ImppBegda" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ImppBeguz forSDMPropertyWithName:@"ImppBeguz" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ImppDsube forSDMPropertyWithName:@"ImppDsube" error:&innerError];
    	[BaseODataObject setDateTimeValueForSDMEntry:m_SDMEntry withValue:self.ImppEndda forSDMPropertyWithName:@"ImppEndda" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ImppEnduz forSDMPropertyWithName:@"ImppEnduz" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ImppFikod forSDMPropertyWithName:@"ImppFikod" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ImppGrpkod forSDMPropertyWithName:@"ImppGrpkod" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ImppKampid forSDMPropertyWithName:@"ImppKampid" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ImppLangu forSDMPropertyWithName:@"ImppLangu" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ImppMarkaid forSDMPropertyWithName:@"ImppMarkaid" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ImppModelid forSDMPropertyWithName:@"ImppModelid" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ImppMsube forSDMPropertyWithName:@"ImppMsube" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ImppRezno forSDMPropertyWithName:@"ImppRezno" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ImppSozno forSDMPropertyWithName:@"ImppSozno" error:&innerError];
        [self addRelativeLinksToSDMEntryFromDictionary:[self getSDMEntriesForNavigationProperties]];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"AdditionalEquipmentServiceSet" workspaceOfCollection:nil];
    additionalEquipmentServiceEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"AdditionalEquipmentServiceSet" andService:aService];
    	if (properties) {    
	    	additionalEquipmentServiceLabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
	        	additionalEquipmentServiceLabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:additionalEquipmentServiceLabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.ImppBegda = [self getDateTimeValueForSDMPropertyWithName:@"ImppBegda"];
	self.ImppBeguz = [self getStringValueForSDMPropertyWithName:@"ImppBeguz"];
	self.ImppDsube = [self getStringValueForSDMPropertyWithName:@"ImppDsube"];
	self.ImppEndda = [self getDateTimeValueForSDMPropertyWithName:@"ImppEndda"];
	self.ImppEnduz = [self getStringValueForSDMPropertyWithName:@"ImppEnduz"];
	self.ImppFikod = [self getStringValueForSDMPropertyWithName:@"ImppFikod"];
	self.ImppGrpkod = [self getStringValueForSDMPropertyWithName:@"ImppGrpkod"];
	self.ImppKampid = [self getStringValueForSDMPropertyWithName:@"ImppKampid"];
	self.ImppLangu = [self getStringValueForSDMPropertyWithName:@"ImppLangu"];
	self.ImppMarkaid = [self getStringValueForSDMPropertyWithName:@"ImppMarkaid"];
	self.ImppModelid = [self getStringValueForSDMPropertyWithName:@"ImppModelid"];
	self.ImppMsube = [self getStringValueForSDMPropertyWithName:@"ImppMsube"];
	self.ImppRezno = [self getStringValueForSDMPropertyWithName:@"ImppRezno"];
	self.ImppSozno = [self getStringValueForSDMPropertyWithName:@"ImppSozno"];
}

- (void)loadNavigationPropertyQueries
{
    [super loadNavigationPropertyQueries];
    self.EXPT_EKPLISTSetQuery = [self getRelatedLinkForNavigationName:@"EXPT_EKPLISTSet"];
    self.EXPT_SIGORTASetQuery = [self getRelatedLinkForNavigationName:@"EXPT_SIGORTASet"];
    self.EXPT_HIZMETSetQuery = [self getRelatedLinkForNavigationName:@"EXPT_HIZMETSet"];
    self.EXPT_HASARSetQuery = [self getRelatedLinkForNavigationName:@"EXPT_HASARSet"];
    self.EXPT_EKSURUCUSetQuery = [self getRelatedLinkForNavigationName:@"EXPT_EKSURUCUSet"];
}

- (void)loadNavigationPropertyData
{
    [super loadNavigationPropertyData];
    
    NSMutableArray *entries = nil;

    entries = [self getInlinedRelatedEntriesForNavigationName:@"EXPT_EKPLISTSet"];
    self.EXPT_EKPLISTSet = [EXPT_EKPLISTV0 createEXPT_EKPLISTEntriesForSDMEntries:entries];

    entries = [self getInlinedRelatedEntriesForNavigationName:@"EXPT_SIGORTASet"];
    self.EXPT_SIGORTASet = [EXPT_SIGORTAV0 createEXPT_SIGORTAEntriesForSDMEntries:entries];

    entries = [self getInlinedRelatedEntriesForNavigationName:@"EXPT_HIZMETSet"];
    self.EXPT_HIZMETSet = [EXPT_HIZMETV0 createEXPT_HIZMETEntriesForSDMEntries:entries];

    entries = [self getInlinedRelatedEntriesForNavigationName:@"EXPT_HASARSet"];
    self.EXPT_HASARSet = [EXPT_HASARV0 createEXPT_HASAREntriesForSDMEntries:entries];

    entries = [self getInlinedRelatedEntriesForNavigationName:@"EXPT_EKSURUCUSet"];
    self.EXPT_EKSURUCUSet = [EXPT_EKSURUCUV0 createEXPT_EKSURUCUEntriesForSDMEntries:entries];

}

+ (NSMutableArray *)createAdditionalEquipmentServiceEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        AdditionalEquipmentServiceV0 *additionalEquipmentServiceObject = [[AdditionalEquipmentServiceV0 alloc] initWithSDMEntry:entry];
        [entries addObject:additionalEquipmentServiceObject];
    }
    return entries;
}


+ (NSMutableArray *)parseAdditionalEquipmentServiceEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:additionalEquipmentServiceEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [AdditionalEquipmentServiceV0 createAdditionalEquipmentServiceEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedAdditionalEquipmentServiceEntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:additionalEquipmentServiceEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [AdditionalEquipmentServiceV0 createAdditionalEquipmentServiceEntriesForSDMEntries:sdmEntries];
}

+ (AdditionalEquipmentServiceV0 *)parseAdditionalEquipmentServiceEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *additionalEquipmentServiceEntries = [AdditionalEquipmentServiceV0 parseAdditionalEquipmentServiceEntriesWithData:aData error:error];
    if (!additionalEquipmentServiceEntries) {
    	return nil;
    }
    return (AdditionalEquipmentServiceV0 *)[AdditionalEquipmentServiceV0 getFirstObjectFromArray:additionalEquipmentServiceEntries];
}

+ (AdditionalEquipmentServiceV0 *)parseExpandedAdditionalEquipmentServiceEntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:additionalEquipmentServiceEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *additionalEquipmentServiceEntries = [AdditionalEquipmentServiceV0 createAdditionalEquipmentServiceEntriesForSDMEntries:sdmEntries];
	return (AdditionalEquipmentServiceV0 *)[AdditionalEquipmentServiceV0 getFirstObjectFromArray:additionalEquipmentServiceEntries];
}


#pragma mark Entity Navigation Property loading methods
- (BOOL)loadEXPT_EKPLISTSetWithData:(NSData *)aData error:(NSError **)error
{
    self.EXPT_EKPLISTSet = [EXPT_EKPLISTV0 parseEXPT_EKPLISTEntriesWithData:aData error:error];
    if (!self.EXPT_EKPLISTSet) {
    	return NO;
    }
    return YES;
}

- (BOOL)loadEXPT_SIGORTASetWithData:(NSData *)aData error:(NSError **)error
{
    self.EXPT_SIGORTASet = [EXPT_SIGORTAV0 parseEXPT_SIGORTAEntriesWithData:aData error:error];
    if (!self.EXPT_SIGORTASet) {
    	return NO;
    }
    return YES;
}

- (BOOL)loadEXPT_HIZMETSetWithData:(NSData *)aData error:(NSError **)error
{
    self.EXPT_HIZMETSet = [EXPT_HIZMETV0 parseEXPT_HIZMETEntriesWithData:aData error:error];
    if (!self.EXPT_HIZMETSet) {
    	return NO;
    }
    return YES;
}

- (BOOL)loadEXPT_HASARSetWithData:(NSData *)aData error:(NSError **)error
{
    self.EXPT_HASARSet = [EXPT_HASARV0 parseEXPT_HASAREntriesWithData:aData error:error];
    if (!self.EXPT_HASARSet) {
    	return NO;
    }
    return YES;
}

- (BOOL)loadEXPT_EKSURUCUSetWithData:(NSData *)aData error:(NSError **)error
{
    self.EXPT_EKSURUCUSet = [EXPT_EKSURUCUV0 parseEXPT_EKSURUCUEntriesWithData:aData error:error];
    if (!self.EXPT_EKSURUCUSet) {
    	return NO;
    }
    return YES;
}


@end

#pragma mark - EXPT_EKPLISTV0
@implementation EXPT_EKPLISTV0

static NSMutableDictionary *eXPT_EKPLISTLabels = nil;
static ODataEntitySchema *eXPT_EKPLISTEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:eXPT_EKPLISTEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}



- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Msube forSDMPropertyWithName:@"Msube" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Matnr forSDMPropertyWithName:@"Matnr" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MusTanimi forSDMPropertyWithName:@"MusTanimi" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Zorunlu forSDMPropertyWithName:@"Zorunlu" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.MaxMiktar forSDMPropertyWithName:@"MaxMiktar" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Meins forSDMPropertyWithName:@"Meins" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.Netwr forSDMPropertyWithName:@"Netwr" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Waers forSDMPropertyWithName:@"Waers" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.AylikTahsil forSDMPropertyWithName:@"AylikTahsil" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.KampanyaAdet forSDMPropertyWithName:@"KampanyaAdet" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.KampanyaliTutar forSDMPropertyWithName:@"KampanyaliTutar" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.NetwrUsd forSDMPropertyWithName:@"NetwrUsd" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.NetwrEur forSDMPropertyWithName:@"NetwrEur" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.NetwrGbp forSDMPropertyWithName:@"NetwrGbp" error:&innerError];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"EXPT_EKPLISTSet" workspaceOfCollection:nil];
    eXPT_EKPLISTEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"EXPT_EKPLISTSet" andService:aService];
    	if (properties) {    
	    	eXPT_EKPLISTLabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
	        	eXPT_EKPLISTLabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:eXPT_EKPLISTLabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.Msube = [self getStringValueForSDMPropertyWithName:@"Msube"];
	self.Matnr = [self getStringValueForSDMPropertyWithName:@"Matnr"];
	self.MusTanimi = [self getStringValueForSDMPropertyWithName:@"MusTanimi"];
	self.Zorunlu = [self getStringValueForSDMPropertyWithName:@"Zorunlu"];
	self.MaxMiktar = [self getDecimalValueForSDMPropertyWithName:@"MaxMiktar"];
	self.Meins = [self getStringValueForSDMPropertyWithName:@"Meins"];
	self.Netwr = [self getDecimalValueForSDMPropertyWithName:@"Netwr"];
	self.Waers = [self getStringValueForSDMPropertyWithName:@"Waers"];
	self.AylikTahsil = [self getDecimalValueForSDMPropertyWithName:@"AylikTahsil"];
	self.KampanyaAdet = [self getStringValueForSDMPropertyWithName:@"KampanyaAdet"];
	self.KampanyaliTutar = [self getDecimalValueForSDMPropertyWithName:@"KampanyaliTutar"];
	self.NetwrUsd = [self getDecimalValueForSDMPropertyWithName:@"NetwrUsd"];
	self.NetwrEur = [self getDecimalValueForSDMPropertyWithName:@"NetwrEur"];
	self.NetwrGbp = [self getDecimalValueForSDMPropertyWithName:@"NetwrGbp"];
}

+ (NSMutableArray *)createEXPT_EKPLISTEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        EXPT_EKPLISTV0 *eXPT_EKPLISTObject = [[EXPT_EKPLISTV0 alloc] initWithSDMEntry:entry];
        [entries addObject:eXPT_EKPLISTObject];
    }
    return entries;
}


+ (NSMutableArray *)parseEXPT_EKPLISTEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:eXPT_EKPLISTEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [EXPT_EKPLISTV0 createEXPT_EKPLISTEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedEXPT_EKPLISTEntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eXPT_EKPLISTEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [EXPT_EKPLISTV0 createEXPT_EKPLISTEntriesForSDMEntries:sdmEntries];
}

+ (EXPT_EKPLISTV0 *)parseEXPT_EKPLISTEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *eXPT_EKPLISTEntries = [EXPT_EKPLISTV0 parseEXPT_EKPLISTEntriesWithData:aData error:error];
    if (!eXPT_EKPLISTEntries) {
    	return nil;
    }
    return (EXPT_EKPLISTV0 *)[EXPT_EKPLISTV0 getFirstObjectFromArray:eXPT_EKPLISTEntries];
}

+ (EXPT_EKPLISTV0 *)parseExpandedEXPT_EKPLISTEntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eXPT_EKPLISTEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *eXPT_EKPLISTEntries = [EXPT_EKPLISTV0 createEXPT_EKPLISTEntriesForSDMEntries:sdmEntries];
	return (EXPT_EKPLISTV0 *)[EXPT_EKPLISTV0 getFirstObjectFromArray:eXPT_EKPLISTEntries];
}



@end

#pragma mark - EXPT_EKSURUCUV0
@implementation EXPT_EKSURUCUV0

static NSMutableDictionary *eXPT_EKSURUCULabels = nil;
static ODataEntitySchema *eXPT_EKSURUCUEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:eXPT_EKSURUCUEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}



- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Malzeme forSDMPropertyWithName:@"Malzeme" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Maktx forSDMPropertyWithName:@"Maktx" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.Tutar forSDMPropertyWithName:@"Tutar" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.AylikTahsil forSDMPropertyWithName:@"AylikTahsil" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MaxAdet forSDMPropertyWithName:@"MaxAdet" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ParaBirimi forSDMPropertyWithName:@"ParaBirimi" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Navigasyon forSDMPropertyWithName:@"Navigasyon" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.BebekKoltugu forSDMPropertyWithName:@"BebekKoltugu" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.EkSurucuSinirsiz forSDMPropertyWithName:@"EkSurucuSinirsiz" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MalzemeInfo forSDMPropertyWithName:@"MalzemeInfo" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.KampanyaAdet forSDMPropertyWithName:@"KampanyaAdet" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.KampanyaliTutar forSDMPropertyWithName:@"KampanyaliTutar" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.TutarUsd forSDMPropertyWithName:@"TutarUsd" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.TutarEur forSDMPropertyWithName:@"TutarEur" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.TutarGbp forSDMPropertyWithName:@"TutarGbp" error:&innerError];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"EXPT_EKSURUCUSet" workspaceOfCollection:nil];
    eXPT_EKSURUCUEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"EXPT_EKSURUCUSet" andService:aService];
    	if (properties) {    
	    	eXPT_EKSURUCULabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
	        	eXPT_EKSURUCULabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:eXPT_EKSURUCULabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.Malzeme = [self getStringValueForSDMPropertyWithName:@"Malzeme"];
	self.Maktx = [self getStringValueForSDMPropertyWithName:@"Maktx"];
	self.Tutar = [self getDecimalValueForSDMPropertyWithName:@"Tutar"];
	self.AylikTahsil = [self getDecimalValueForSDMPropertyWithName:@"AylikTahsil"];
	self.MaxAdet = [self getStringValueForSDMPropertyWithName:@"MaxAdet"];
	self.ParaBirimi = [self getStringValueForSDMPropertyWithName:@"ParaBirimi"];
	self.Navigasyon = [self getStringValueForSDMPropertyWithName:@"Navigasyon"];
	self.BebekKoltugu = [self getStringValueForSDMPropertyWithName:@"BebekKoltugu"];
	self.EkSurucuSinirsiz = [self getStringValueForSDMPropertyWithName:@"EkSurucuSinirsiz"];
	self.MalzemeInfo = [self getStringValueForSDMPropertyWithName:@"MalzemeInfo"];
	self.KampanyaAdet = [self getStringValueForSDMPropertyWithName:@"KampanyaAdet"];
	self.KampanyaliTutar = [self getDecimalValueForSDMPropertyWithName:@"KampanyaliTutar"];
	self.TutarUsd = [self getDecimalValueForSDMPropertyWithName:@"TutarUsd"];
	self.TutarEur = [self getDecimalValueForSDMPropertyWithName:@"TutarEur"];
	self.TutarGbp = [self getDecimalValueForSDMPropertyWithName:@"TutarGbp"];
}

+ (NSMutableArray *)createEXPT_EKSURUCUEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        EXPT_EKSURUCUV0 *eXPT_EKSURUCUObject = [[EXPT_EKSURUCUV0 alloc] initWithSDMEntry:entry];
        [entries addObject:eXPT_EKSURUCUObject];
    }
    return entries;
}


+ (NSMutableArray *)parseEXPT_EKSURUCUEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:eXPT_EKSURUCUEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [EXPT_EKSURUCUV0 createEXPT_EKSURUCUEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedEXPT_EKSURUCUEntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eXPT_EKSURUCUEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [EXPT_EKSURUCUV0 createEXPT_EKSURUCUEntriesForSDMEntries:sdmEntries];
}

+ (EXPT_EKSURUCUV0 *)parseEXPT_EKSURUCUEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *eXPT_EKSURUCUEntries = [EXPT_EKSURUCUV0 parseEXPT_EKSURUCUEntriesWithData:aData error:error];
    if (!eXPT_EKSURUCUEntries) {
    	return nil;
    }
    return (EXPT_EKSURUCUV0 *)[EXPT_EKSURUCUV0 getFirstObjectFromArray:eXPT_EKSURUCUEntries];
}

+ (EXPT_EKSURUCUV0 *)parseExpandedEXPT_EKSURUCUEntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eXPT_EKSURUCUEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *eXPT_EKSURUCUEntries = [EXPT_EKSURUCUV0 createEXPT_EKSURUCUEntriesForSDMEntries:sdmEntries];
	return (EXPT_EKSURUCUV0 *)[EXPT_EKSURUCUV0 getFirstObjectFromArray:eXPT_EKSURUCUEntries];
}



@end

#pragma mark - EXPT_HASARV0
@implementation EXPT_HASARV0

static NSMutableDictionary *eXPT_HASARLabels = nil;
static ODataEntitySchema *eXPT_HASAREntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:eXPT_HASAREntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}



- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.TutarGbp forSDMPropertyWithName:@"TutarGbp" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.TutarEur forSDMPropertyWithName:@"TutarEur" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.TutarUsd forSDMPropertyWithName:@"TutarUsd" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.KampanyaliTutar forSDMPropertyWithName:@"KampanyaliTutar" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.KampanyaAdet forSDMPropertyWithName:@"KampanyaAdet" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MalzemeInfo forSDMPropertyWithName:@"MalzemeInfo" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Malzeme forSDMPropertyWithName:@"Malzeme" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.EkSurucuSinirsiz forSDMPropertyWithName:@"EkSurucuSinirsiz" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Maktx forSDMPropertyWithName:@"Maktx" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.Tutar forSDMPropertyWithName:@"Tutar" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.AylikTahsil forSDMPropertyWithName:@"AylikTahsil" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.BebekKoltugu forSDMPropertyWithName:@"BebekKoltugu" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MaxAdet forSDMPropertyWithName:@"MaxAdet" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ParaBirimi forSDMPropertyWithName:@"ParaBirimi" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Navigasyon forSDMPropertyWithName:@"Navigasyon" error:&innerError];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"EXPT_HASARSet" workspaceOfCollection:nil];
    eXPT_HASAREntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"EXPT_HASARSet" andService:aService];
    	if (properties) {    
	    	eXPT_HASARLabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
	        	eXPT_HASARLabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:eXPT_HASARLabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.TutarGbp = [self getDecimalValueForSDMPropertyWithName:@"TutarGbp"];
	self.TutarEur = [self getDecimalValueForSDMPropertyWithName:@"TutarEur"];
	self.TutarUsd = [self getDecimalValueForSDMPropertyWithName:@"TutarUsd"];
	self.KampanyaliTutar = [self getDecimalValueForSDMPropertyWithName:@"KampanyaliTutar"];
	self.KampanyaAdet = [self getStringValueForSDMPropertyWithName:@"KampanyaAdet"];
	self.MalzemeInfo = [self getStringValueForSDMPropertyWithName:@"MalzemeInfo"];
	self.Malzeme = [self getStringValueForSDMPropertyWithName:@"Malzeme"];
	self.EkSurucuSinirsiz = [self getStringValueForSDMPropertyWithName:@"EkSurucuSinirsiz"];
	self.Maktx = [self getStringValueForSDMPropertyWithName:@"Maktx"];
	self.Tutar = [self getDecimalValueForSDMPropertyWithName:@"Tutar"];
	self.AylikTahsil = [self getDecimalValueForSDMPropertyWithName:@"AylikTahsil"];
	self.BebekKoltugu = [self getStringValueForSDMPropertyWithName:@"BebekKoltugu"];
	self.MaxAdet = [self getStringValueForSDMPropertyWithName:@"MaxAdet"];
	self.ParaBirimi = [self getStringValueForSDMPropertyWithName:@"ParaBirimi"];
	self.Navigasyon = [self getStringValueForSDMPropertyWithName:@"Navigasyon"];
}

+ (NSMutableArray *)createEXPT_HASAREntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        EXPT_HASARV0 *eXPT_HASARObject = [[EXPT_HASARV0 alloc] initWithSDMEntry:entry];
        [entries addObject:eXPT_HASARObject];
    }
    return entries;
}


+ (NSMutableArray *)parseEXPT_HASAREntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:eXPT_HASAREntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [EXPT_HASARV0 createEXPT_HASAREntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedEXPT_HASAREntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eXPT_HASAREntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [EXPT_HASARV0 createEXPT_HASAREntriesForSDMEntries:sdmEntries];
}

+ (EXPT_HASARV0 *)parseEXPT_HASAREntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *eXPT_HASAREntries = [EXPT_HASARV0 parseEXPT_HASAREntriesWithData:aData error:error];
    if (!eXPT_HASAREntries) {
    	return nil;
    }
    return (EXPT_HASARV0 *)[EXPT_HASARV0 getFirstObjectFromArray:eXPT_HASAREntries];
}

+ (EXPT_HASARV0 *)parseExpandedEXPT_HASAREntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eXPT_HASAREntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *eXPT_HASAREntries = [EXPT_HASARV0 createEXPT_HASAREntriesForSDMEntries:sdmEntries];
	return (EXPT_HASARV0 *)[EXPT_HASARV0 getFirstObjectFromArray:eXPT_HASAREntries];
}



@end

#pragma mark - EXPT_HIZMETV0
@implementation EXPT_HIZMETV0

static NSMutableDictionary *eXPT_HIZMETLabels = nil;
static ODataEntitySchema *eXPT_HIZMETEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:eXPT_HIZMETEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}



- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.TutarGbp forSDMPropertyWithName:@"TutarGbp" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.TutarEur forSDMPropertyWithName:@"TutarEur" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.TutarUsd forSDMPropertyWithName:@"TutarUsd" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.KampanyaliTutar forSDMPropertyWithName:@"KampanyaliTutar" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.KampanyaAdet forSDMPropertyWithName:@"KampanyaAdet" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MalzemeInfo forSDMPropertyWithName:@"MalzemeInfo" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.EkSurucuSinirsiz forSDMPropertyWithName:@"EkSurucuSinirsiz" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.BebekKoltugu forSDMPropertyWithName:@"BebekKoltugu" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Navigasyon forSDMPropertyWithName:@"Navigasyon" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ParaBirimi forSDMPropertyWithName:@"ParaBirimi" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MaxAdet forSDMPropertyWithName:@"MaxAdet" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.AylikTahsil forSDMPropertyWithName:@"AylikTahsil" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.Tutar forSDMPropertyWithName:@"Tutar" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Maktx forSDMPropertyWithName:@"Maktx" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Malzeme forSDMPropertyWithName:@"Malzeme" error:&innerError];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"EXPT_HIZMETSet" workspaceOfCollection:nil];
    eXPT_HIZMETEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"EXPT_HIZMETSet" andService:aService];
    	if (properties) {    
	    	eXPT_HIZMETLabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
	        	eXPT_HIZMETLabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:eXPT_HIZMETLabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.TutarGbp = [self getDecimalValueForSDMPropertyWithName:@"TutarGbp"];
	self.TutarEur = [self getDecimalValueForSDMPropertyWithName:@"TutarEur"];
	self.TutarUsd = [self getDecimalValueForSDMPropertyWithName:@"TutarUsd"];
	self.KampanyaliTutar = [self getDecimalValueForSDMPropertyWithName:@"KampanyaliTutar"];
	self.KampanyaAdet = [self getStringValueForSDMPropertyWithName:@"KampanyaAdet"];
	self.MalzemeInfo = [self getStringValueForSDMPropertyWithName:@"MalzemeInfo"];
	self.EkSurucuSinirsiz = [self getStringValueForSDMPropertyWithName:@"EkSurucuSinirsiz"];
	self.BebekKoltugu = [self getStringValueForSDMPropertyWithName:@"BebekKoltugu"];
	self.Navigasyon = [self getStringValueForSDMPropertyWithName:@"Navigasyon"];
	self.ParaBirimi = [self getStringValueForSDMPropertyWithName:@"ParaBirimi"];
	self.MaxAdet = [self getStringValueForSDMPropertyWithName:@"MaxAdet"];
	self.AylikTahsil = [self getDecimalValueForSDMPropertyWithName:@"AylikTahsil"];
	self.Tutar = [self getDecimalValueForSDMPropertyWithName:@"Tutar"];
	self.Maktx = [self getStringValueForSDMPropertyWithName:@"Maktx"];
	self.Malzeme = [self getStringValueForSDMPropertyWithName:@"Malzeme"];
}

+ (NSMutableArray *)createEXPT_HIZMETEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        EXPT_HIZMETV0 *eXPT_HIZMETObject = [[EXPT_HIZMETV0 alloc] initWithSDMEntry:entry];
        [entries addObject:eXPT_HIZMETObject];
    }
    return entries;
}


+ (NSMutableArray *)parseEXPT_HIZMETEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:eXPT_HIZMETEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [EXPT_HIZMETV0 createEXPT_HIZMETEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedEXPT_HIZMETEntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eXPT_HIZMETEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [EXPT_HIZMETV0 createEXPT_HIZMETEntriesForSDMEntries:sdmEntries];
}

+ (EXPT_HIZMETV0 *)parseEXPT_HIZMETEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *eXPT_HIZMETEntries = [EXPT_HIZMETV0 parseEXPT_HIZMETEntriesWithData:aData error:error];
    if (!eXPT_HIZMETEntries) {
    	return nil;
    }
    return (EXPT_HIZMETV0 *)[EXPT_HIZMETV0 getFirstObjectFromArray:eXPT_HIZMETEntries];
}

+ (EXPT_HIZMETV0 *)parseExpandedEXPT_HIZMETEntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eXPT_HIZMETEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *eXPT_HIZMETEntries = [EXPT_HIZMETV0 createEXPT_HIZMETEntriesForSDMEntries:sdmEntries];
	return (EXPT_HIZMETV0 *)[EXPT_HIZMETV0 getFirstObjectFromArray:eXPT_HIZMETEntries];
}



@end

#pragma mark - EXPT_SIGORTAV0
@implementation EXPT_SIGORTAV0

static NSMutableDictionary *eXPT_SIGORTALabels = nil;
static ODataEntitySchema *eXPT_SIGORTAEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:eXPT_SIGORTAEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}



- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MaxAdet forSDMPropertyWithName:@"MaxAdet" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.AylikTahsil forSDMPropertyWithName:@"AylikTahsil" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.Tutar forSDMPropertyWithName:@"Tutar" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Maktx forSDMPropertyWithName:@"Maktx" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Malzeme forSDMPropertyWithName:@"Malzeme" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ParaBirimi forSDMPropertyWithName:@"ParaBirimi" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.Navigasyon forSDMPropertyWithName:@"Navigasyon" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.BebekKoltugu forSDMPropertyWithName:@"BebekKoltugu" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.EkSurucuSinirsiz forSDMPropertyWithName:@"EkSurucuSinirsiz" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.MalzemeInfo forSDMPropertyWithName:@"MalzemeInfo" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.KampanyaAdet forSDMPropertyWithName:@"KampanyaAdet" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.KampanyaliTutar forSDMPropertyWithName:@"KampanyaliTutar" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.TutarUsd forSDMPropertyWithName:@"TutarUsd" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.TutarEur forSDMPropertyWithName:@"TutarEur" error:&innerError];
    	[BaseODataObject setDecimalValueForSDMEntry:m_SDMEntry withValue:self.TutarGbp forSDMPropertyWithName:@"TutarGbp" error:&innerError];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"EXPT_SIGORTASet" workspaceOfCollection:nil];
    eXPT_SIGORTAEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"EXPT_SIGORTASet" andService:aService];
    	if (properties) {    
	    	eXPT_SIGORTALabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
	        	eXPT_SIGORTALabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:eXPT_SIGORTALabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.MaxAdet = [self getStringValueForSDMPropertyWithName:@"MaxAdet"];
	self.AylikTahsil = [self getDecimalValueForSDMPropertyWithName:@"AylikTahsil"];
	self.Tutar = [self getDecimalValueForSDMPropertyWithName:@"Tutar"];
	self.Maktx = [self getStringValueForSDMPropertyWithName:@"Maktx"];
	self.Malzeme = [self getStringValueForSDMPropertyWithName:@"Malzeme"];
	self.ParaBirimi = [self getStringValueForSDMPropertyWithName:@"ParaBirimi"];
	self.Navigasyon = [self getStringValueForSDMPropertyWithName:@"Navigasyon"];
	self.BebekKoltugu = [self getStringValueForSDMPropertyWithName:@"BebekKoltugu"];
	self.EkSurucuSinirsiz = [self getStringValueForSDMPropertyWithName:@"EkSurucuSinirsiz"];
	self.MalzemeInfo = [self getStringValueForSDMPropertyWithName:@"MalzemeInfo"];
	self.KampanyaAdet = [self getStringValueForSDMPropertyWithName:@"KampanyaAdet"];
	self.KampanyaliTutar = [self getDecimalValueForSDMPropertyWithName:@"KampanyaliTutar"];
	self.TutarUsd = [self getDecimalValueForSDMPropertyWithName:@"TutarUsd"];
	self.TutarEur = [self getDecimalValueForSDMPropertyWithName:@"TutarEur"];
	self.TutarGbp = [self getDecimalValueForSDMPropertyWithName:@"TutarGbp"];
}

+ (NSMutableArray *)createEXPT_SIGORTAEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        EXPT_SIGORTAV0 *eXPT_SIGORTAObject = [[EXPT_SIGORTAV0 alloc] initWithSDMEntry:entry];
        [entries addObject:eXPT_SIGORTAObject];
    }
    return entries;
}


+ (NSMutableArray *)parseEXPT_SIGORTAEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:eXPT_SIGORTAEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [EXPT_SIGORTAV0 createEXPT_SIGORTAEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedEXPT_SIGORTAEntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eXPT_SIGORTAEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [EXPT_SIGORTAV0 createEXPT_SIGORTAEntriesForSDMEntries:sdmEntries];
}

+ (EXPT_SIGORTAV0 *)parseEXPT_SIGORTAEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *eXPT_SIGORTAEntries = [EXPT_SIGORTAV0 parseEXPT_SIGORTAEntriesWithData:aData error:error];
    if (!eXPT_SIGORTAEntries) {
    	return nil;
    }
    return (EXPT_SIGORTAV0 *)[EXPT_SIGORTAV0 getFirstObjectFromArray:eXPT_SIGORTAEntries];
}

+ (EXPT_SIGORTAV0 *)parseExpandedEXPT_SIGORTAEntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:eXPT_SIGORTAEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *eXPT_SIGORTAEntries = [EXPT_SIGORTAV0 createEXPT_SIGORTAEntriesForSDMEntries:sdmEntries];
	return (EXPT_SIGORTAV0 *)[EXPT_SIGORTAV0 getFirstObjectFromArray:eXPT_SIGORTAEntries];
}



@end


#pragma mark - ZGARENTA_EKHIZMET_SRVV0 Service Proxy


@implementation ZGARENTA_EKHIZMET_SRVServiceV0

- (NSString *)getServiceDocumentFilename
{
	return ZGARENTA_EKHIZMET_SRV_SERVICE_DOCUMENTV0;
}

- (NSString *)getServiceMetadataFilename
{
	return ZGARENTA_EKHIZMET_SRV_SERVICE_METADATAV0;
}

- (void)loadEntitySetQueries
{
	[super loadEntitySetQueries];
    self.AdditionalEquipmentServiceSetQuery = [self getQueryForRelativePath:@"AdditionalEquipmentServiceSet"];
    self.EXPT_EKPLISTSetQuery = [self getQueryForRelativePath:@"EXPT_EKPLISTSet"];
    self.EXPT_EKSURUCUSetQuery = [self getQueryForRelativePath:@"EXPT_EKSURUCUSet"];
    self.EXPT_HASARSetQuery = [self getQueryForRelativePath:@"EXPT_HASARSet"];
    self.EXPT_HIZMETSetQuery = [self getQueryForRelativePath:@"EXPT_HIZMETSet"];
    self.EXPT_SIGORTASetQuery = [self getQueryForRelativePath:@"EXPT_SIGORTASet"];
}

- (void)loadEntitySchemaForAllEntityTypes
{
    [super loadEntitySchemaForAllEntityTypes];
    [AdditionalEquipmentServiceV0 loadEntitySchema:self.sdmServiceDocument];
    [EXPT_EKPLISTV0 loadEntitySchema:self.sdmServiceDocument];
    [EXPT_EKSURUCUV0 loadEntitySchema:self.sdmServiceDocument];
    [EXPT_HASARV0 loadEntitySchema:self.sdmServiceDocument];
    [EXPT_HIZMETV0 loadEntitySchema:self.sdmServiceDocument];
    [EXPT_SIGORTAV0 loadEntitySchema:self.sdmServiceDocument];
}

- (void)loadLabels
{
    [super loadLabels];
    [AdditionalEquipmentServiceV0 loadLabels:self.sdmServiceDocument];
    [EXPT_EKPLISTV0 loadLabels:self.sdmServiceDocument];
    [EXPT_EKSURUCUV0 loadLabels:self.sdmServiceDocument];
    [EXPT_HASARV0 loadLabels:self.sdmServiceDocument];
    [EXPT_HIZMETV0 loadLabels:self.sdmServiceDocument];
    [EXPT_SIGORTAV0 loadLabels:self.sdmServiceDocument];
}

 
#pragma mark Service Entity Set methods
- (NSMutableArray *)getAdditionalEquipmentServiceSetWithData:(NSData *)aData error:(NSError **)error
{
	return [AdditionalEquipmentServiceV0 parseExpandedAdditionalEquipmentServiceEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getAdditionalEquipmentServiceSetEntryQueryWithImppBegda:(NSString *)ImppBegda andImppBeguz:(NSString *)ImppBeguz andImppDsube:(NSString *)ImppDsube andImppEndda:(NSString *)ImppEndda andImppEnduz:(NSString *)ImppEnduz andImppFikod:(NSString *)ImppFikod andImppGrpkod:(NSString *)ImppGrpkod andImppKampid:(NSString *)ImppKampid andImppLangu:(NSString *)ImppLangu andImppMarkaid:(NSString *)ImppMarkaid andImppModelid:(NSString *)ImppModelid andImppMsube:(NSString *)ImppMsube andImppRezno:(NSString *)ImppRezno andImppSozno:(NSString *)ImppSozno
{
	ImppBegda = [ODataQuery encodeURLParameter:ImppBegda];
	ImppBeguz = [ODataQuery encodeURLParameter:ImppBeguz];
	ImppDsube = [ODataQuery encodeURLParameter:ImppDsube];
	ImppEndda = [ODataQuery encodeURLParameter:ImppEndda];
	ImppEnduz = [ODataQuery encodeURLParameter:ImppEnduz];
	ImppFikod = [ODataQuery encodeURLParameter:ImppFikod];
	ImppGrpkod = [ODataQuery encodeURLParameter:ImppGrpkod];
	ImppKampid = [ODataQuery encodeURLParameter:ImppKampid];
	ImppLangu = [ODataQuery encodeURLParameter:ImppLangu];
	ImppMarkaid = [ODataQuery encodeURLParameter:ImppMarkaid];
	ImppModelid = [ODataQuery encodeURLParameter:ImppModelid];
	ImppMsube = [ODataQuery encodeURLParameter:ImppMsube];
	ImppRezno = [ODataQuery encodeURLParameter:ImppRezno];
	ImppSozno = [ODataQuery encodeURLParameter:ImppSozno];
	NSString *relativePath = [NSString stringWithFormat:@"AdditionalEquipmentServiceSet(ImppBegda=%@,ImppBeguz=%@,ImppDsube=%@,ImppEndda=%@,ImppEnduz=%@,ImppFikod=%@,ImppGrpkod=%@,ImppKampid=%@,ImppLangu=%@,ImppMarkaid=%@,ImppModelid=%@,ImppMsube=%@,ImppRezno=%@,ImppSozno=%@)", ImppBegda, ImppBeguz, ImppDsube, ImppEndda, ImppEnduz, ImppFikod, ImppGrpkod, ImppKampid, ImppLangu, ImppMarkaid, ImppModelid, ImppMsube, ImppRezno, ImppSozno];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getAdditionalEquipmentServiceSetEntryQueryTypedWithImppBegda:(NSDate *)ImppBegda andImppBeguz:(NSString *)ImppBeguz andImppDsube:(NSString *)ImppDsube andImppEndda:(NSDate *)ImppEndda andImppEnduz:(NSString *)ImppEnduz andImppFikod:(NSString *)ImppFikod andImppGrpkod:(NSString *)ImppGrpkod andImppKampid:(NSString *)ImppKampid andImppLangu:(NSString *)ImppLangu andImppMarkaid:(NSString *)ImppMarkaid andImppModelid:(NSString *)ImppModelid andImppMsube:(NSString *)ImppMsube andImppRezno:(NSString *)ImppRezno andImppSozno:(NSString *)ImppSozno
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *ImppBegdaUri = [ODataQuery encodeURLParameter:[converter convertToEdmDateTimeURI:ImppBegda]];
	NSString *ImppBeguzUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:ImppBeguz]];
	NSString *ImppDsubeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:ImppDsube]];
	NSString *ImppEnddaUri = [ODataQuery encodeURLParameter:[converter convertToEdmDateTimeURI:ImppEndda]];
	NSString *ImppEnduzUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:ImppEnduz]];
	NSString *ImppFikodUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:ImppFikod]];
	NSString *ImppGrpkodUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:ImppGrpkod]];
	NSString *ImppKampidUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:ImppKampid]];
	NSString *ImppLanguUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:ImppLangu]];
	NSString *ImppMarkaidUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:ImppMarkaid]];
	NSString *ImppModelidUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:ImppModelid]];
	NSString *ImppMsubeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:ImppMsube]];
	NSString *ImppReznoUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:ImppRezno]];
	NSString *ImppSoznoUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:ImppSozno]];
	NSString *relativePath = [NSString stringWithFormat:@"AdditionalEquipmentServiceSet(ImppBegda=%@,ImppBeguz=%@,ImppDsube=%@,ImppEndda=%@,ImppEnduz=%@,ImppFikod=%@,ImppGrpkod=%@,ImppKampid=%@,ImppLangu=%@,ImppMarkaid=%@,ImppModelid=%@,ImppMsube=%@,ImppRezno=%@,ImppSozno=%@)", ImppBegdaUri, ImppBeguzUri, ImppDsubeUri, ImppEnddaUri, ImppEnduzUri, ImppFikodUri, ImppGrpkodUri, ImppKampidUri, ImppLanguUri, ImppMarkaidUri, ImppModelidUri, ImppMsubeUri, ImppReznoUri, ImppSoznoUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (AdditionalEquipmentServiceV0 *)getAdditionalEquipmentServiceSetEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [AdditionalEquipmentServiceV0 parseExpandedAdditionalEquipmentServiceEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (NSMutableArray *)getEXPT_EKPLISTSetWithData:(NSData *)aData error:(NSError **)error
{
	return [EXPT_EKPLISTV0 parseExpandedEXPT_EKPLISTEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getEXPT_EKPLISTSetEntryQueryWithMsube:(NSString *)Msube andMatnr:(NSString *)Matnr
{
	Msube = [ODataQuery encodeURLParameter:Msube];
	Matnr = [ODataQuery encodeURLParameter:Matnr];
	NSString *relativePath = [NSString stringWithFormat:@"EXPT_EKPLISTSet(Msube=%@,Matnr=%@)", Msube, Matnr];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getEXPT_EKPLISTSetEntryQueryTypedWithMsube:(NSString *)Msube andMatnr:(NSString *)Matnr
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *MsubeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Msube]];
	NSString *MatnrUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Matnr]];
	NSString *relativePath = [NSString stringWithFormat:@"EXPT_EKPLISTSet(Msube=%@,Matnr=%@)", MsubeUri, MatnrUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (EXPT_EKPLISTV0 *)getEXPT_EKPLISTSetEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [EXPT_EKPLISTV0 parseExpandedEXPT_EKPLISTEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (NSMutableArray *)getEXPT_EKSURUCUSetWithData:(NSData *)aData error:(NSError **)error
{
	return [EXPT_EKSURUCUV0 parseExpandedEXPT_EKSURUCUEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getEXPT_EKSURUCUSetEntryQueryWithMalzeme:(NSString *)Malzeme
{
	Malzeme = [ODataQuery encodeURLParameter:Malzeme];
	NSString *relativePath = [NSString stringWithFormat:@"EXPT_EKSURUCUSet(Malzeme=%@)", Malzeme];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getEXPT_EKSURUCUSetEntryQueryTypedWithMalzeme:(NSString *)Malzeme
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *MalzemeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Malzeme]];
	NSString *relativePath = [NSString stringWithFormat:@"EXPT_EKSURUCUSet(Malzeme=%@)", MalzemeUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (EXPT_EKSURUCUV0 *)getEXPT_EKSURUCUSetEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [EXPT_EKSURUCUV0 parseExpandedEXPT_EKSURUCUEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (NSMutableArray *)getEXPT_HASARSetWithData:(NSData *)aData error:(NSError **)error
{
	return [EXPT_HASARV0 parseExpandedEXPT_HASAREntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getEXPT_HASARSetEntryQueryWithMalzeme:(NSString *)Malzeme
{
	Malzeme = [ODataQuery encodeURLParameter:Malzeme];
	NSString *relativePath = [NSString stringWithFormat:@"EXPT_HASARSet(Malzeme=%@)", Malzeme];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getEXPT_HASARSetEntryQueryTypedWithMalzeme:(NSString *)Malzeme
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *MalzemeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Malzeme]];
	NSString *relativePath = [NSString stringWithFormat:@"EXPT_HASARSet(Malzeme=%@)", MalzemeUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (EXPT_HASARV0 *)getEXPT_HASARSetEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [EXPT_HASARV0 parseExpandedEXPT_HASAREntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (NSMutableArray *)getEXPT_HIZMETSetWithData:(NSData *)aData error:(NSError **)error
{
	return [EXPT_HIZMETV0 parseExpandedEXPT_HIZMETEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getEXPT_HIZMETSetEntryQueryWithMalzeme:(NSString *)Malzeme
{
	Malzeme = [ODataQuery encodeURLParameter:Malzeme];
	NSString *relativePath = [NSString stringWithFormat:@"EXPT_HIZMETSet(Malzeme=%@)", Malzeme];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getEXPT_HIZMETSetEntryQueryTypedWithMalzeme:(NSString *)Malzeme
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *MalzemeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Malzeme]];
	NSString *relativePath = [NSString stringWithFormat:@"EXPT_HIZMETSet(Malzeme=%@)", MalzemeUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (EXPT_HIZMETV0 *)getEXPT_HIZMETSetEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [EXPT_HIZMETV0 parseExpandedEXPT_HIZMETEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (NSMutableArray *)getEXPT_SIGORTASetWithData:(NSData *)aData error:(NSError **)error
{
	return [EXPT_SIGORTAV0 parseExpandedEXPT_SIGORTAEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getEXPT_SIGORTASetEntryQueryWithMalzeme:(NSString *)Malzeme
{
	Malzeme = [ODataQuery encodeURLParameter:Malzeme];
	NSString *relativePath = [NSString stringWithFormat:@"EXPT_SIGORTASet(Malzeme=%@)", Malzeme];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getEXPT_SIGORTASetEntryQueryTypedWithMalzeme:(NSString *)Malzeme
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *MalzemeUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:Malzeme]];
	NSString *relativePath = [NSString stringWithFormat:@"EXPT_SIGORTASet(Malzeme=%@)", MalzemeUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (EXPT_SIGORTAV0 *)getEXPT_SIGORTASetEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [EXPT_SIGORTAV0 parseExpandedEXPT_SIGORTAEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}



#pragma mark Service Function Import methods 

@end
