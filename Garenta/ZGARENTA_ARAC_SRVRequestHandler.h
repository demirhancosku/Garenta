/*
 
 Auto-Generated by SAP NetWeaver Gateway Productivity Accelerator, Version 1.1.1
  
 File: ZGARENTA_ARAC_SRVRequestHandler.h
 Abstract: A singleton class responsible for sending the appropriate service requests (for retrieving and modifying service data) and parsing the responses into semantic objects, using the ZGARENTA_ARAC_SRV service proxy and the SDMConnectivityHelper class. The sent requests also consider the service URL and the SAP client defined in the application settings. The class is also responsible for sending the appropriate notifications to the application delegate and view controllers, for handling the request success, failure and authentication challenge.
 
 */

#import <Foundation/Foundation.h>
#import "RequestDelegate.h"
#import "SDMConnectivityHelper.h"
#import "ZGARENTA_ARAC_SRVServiceDeclarations.h"
#import "ServiceNegotiator.h"
#import "Authenticating.h"



#pragma mark - Notifications
/*
//Notification UserInfo keys:
extern NSString * const kResponseItem; ///< Single item response
extern NSString * const kResponseItems; ///< Multiple items response
extern NSString * const kResponseData; ///< Raw response data
extern NSString * const kRequestedMediaLink; ///< Media link item
extern NSString * const kServerResponseError; ///< Server response error
extern NSString * const kParsingError; ///< Parsing response error
extern NSString * const kResponseParentItem; ///< Item selected in the view previous to the one triggered the request
extern NSString * const kBatchRequest; ///< BatchRequest object containing the response

//Notification keys:
extern NSString * const kAuthenticationNeededNotification; ///< Notification key for request authentication challenge.
*/


extern NSString * const kLoadAvailCarServiceSetCompletedNotification; ///< Notification key for complete loading of AvailCarServiceSet items.
extern NSString * const kLoadAvailCarServiceCompletedNotification; ///< Notification key for complete loading of a specific AvailCarService item.
extern NSString * const kLoadET_ARACLISTESetForAvailCarServiceCompletedNotification; ///< Notification key for complete loading of ET_ARACLISTESet navigation items for a specific AvailCarService item.
extern NSString * const kLoadET_EXPIRYSetForAvailCarServiceCompletedNotification; ///< Notification key for complete loading of ET_EXPIRYSet navigation items for a specific AvailCarService item.
extern NSString * const kLoadET_FIYATSetForAvailCarServiceCompletedNotification; ///< Notification key for complete loading of ET_FIYATSet navigation items for a specific AvailCarService item.
extern NSString * const kLoadET_KAMPANYASetForAvailCarServiceCompletedNotification; ///< Notification key for complete loading of ET_KAMPANYASet navigation items for a specific AvailCarService item.
extern NSString * const kLoadET_RESERVSetForAvailCarServiceCompletedNotification; ///< Notification key for complete loading of ET_RESERVSet navigation items for a specific AvailCarService item.
extern NSString * const kLoadET_INDIRIMLISTSetForAvailCarServiceCompletedNotification; ///< Notification key for complete loading of ET_INDIRIMLISTSet navigation items for a specific AvailCarService item.
extern NSString * const kLoadIMPT_MSUBESetForAvailCarServiceCompletedNotification; ///< Notification key for complete loading of IMPT_MSUBESet navigation items for a specific AvailCarService item.
extern NSString * const kCreateAvailCarServiceCompletedNotification; ///< Notification key for complete creating a AvailCarService collection item.
extern NSString * const kUpdateAvailCarServiceCompletedNotification; ///< Notification key for complete updating a AvailCarService collection item.
extern NSString * const kDeleteAvailCarServiceCompletedNotification; ///< Notification key for complete deleting a AvailCarService item.

extern NSString * const kLoadET_ARACLISTESetCompletedNotification; ///< Notification key for complete loading of ET_ARACLISTESet items.
extern NSString * const kLoadET_ARACLISTECompletedNotification; ///< Notification key for complete loading of a specific ET_ARACLISTE item.
extern NSString * const kCreateET_ARACLISTECompletedNotification; ///< Notification key for complete creating a ET_ARACLISTE collection item.
extern NSString * const kUpdateET_ARACLISTECompletedNotification; ///< Notification key for complete updating a ET_ARACLISTE collection item.
extern NSString * const kDeleteET_ARACLISTECompletedNotification; ///< Notification key for complete deleting a ET_ARACLISTE item.

extern NSString * const kLoadET_EXPIRYSetCompletedNotification; ///< Notification key for complete loading of ET_EXPIRYSet items.
extern NSString * const kLoadET_EXPIRYCompletedNotification; ///< Notification key for complete loading of a specific ET_EXPIRY item.
extern NSString * const kCreateET_EXPIRYCompletedNotification; ///< Notification key for complete creating a ET_EXPIRY collection item.
extern NSString * const kUpdateET_EXPIRYCompletedNotification; ///< Notification key for complete updating a ET_EXPIRY collection item.
extern NSString * const kDeleteET_EXPIRYCompletedNotification; ///< Notification key for complete deleting a ET_EXPIRY item.

extern NSString * const kLoadET_FIYATSetCompletedNotification; ///< Notification key for complete loading of ET_FIYATSet items.
extern NSString * const kLoadET_FIYATCompletedNotification; ///< Notification key for complete loading of a specific ET_FIYAT item.
extern NSString * const kCreateET_FIYATCompletedNotification; ///< Notification key for complete creating a ET_FIYAT collection item.
extern NSString * const kUpdateET_FIYATCompletedNotification; ///< Notification key for complete updating a ET_FIYAT collection item.
extern NSString * const kDeleteET_FIYATCompletedNotification; ///< Notification key for complete deleting a ET_FIYAT item.

extern NSString * const kLoadET_INDIRIMLISTSetCompletedNotification; ///< Notification key for complete loading of ET_INDIRIMLISTSet items.
extern NSString * const kLoadET_INDIRIMLISTCompletedNotification; ///< Notification key for complete loading of a specific ET_INDIRIMLIST item.
extern NSString * const kCreateET_INDIRIMLISTCompletedNotification; ///< Notification key for complete creating a ET_INDIRIMLIST collection item.
extern NSString * const kUpdateET_INDIRIMLISTCompletedNotification; ///< Notification key for complete updating a ET_INDIRIMLIST collection item.
extern NSString * const kDeleteET_INDIRIMLISTCompletedNotification; ///< Notification key for complete deleting a ET_INDIRIMLIST item.

extern NSString * const kLoadET_KAMPANYASetCompletedNotification; ///< Notification key for complete loading of ET_KAMPANYASet items.
extern NSString * const kLoadET_KAMPANYACompletedNotification; ///< Notification key for complete loading of a specific ET_KAMPANYA item.
extern NSString * const kCreateET_KAMPANYACompletedNotification; ///< Notification key for complete creating a ET_KAMPANYA collection item.
extern NSString * const kUpdateET_KAMPANYACompletedNotification; ///< Notification key for complete updating a ET_KAMPANYA collection item.
extern NSString * const kDeleteET_KAMPANYACompletedNotification; ///< Notification key for complete deleting a ET_KAMPANYA item.

extern NSString * const kLoadET_RESERVSetCompletedNotification; ///< Notification key for complete loading of ET_RESERVSet items.
extern NSString * const kLoadET_RESERVCompletedNotification; ///< Notification key for complete loading of a specific ET_RESERV item.
extern NSString * const kCreateET_RESERVCompletedNotification; ///< Notification key for complete creating a ET_RESERV collection item.
extern NSString * const kUpdateET_RESERVCompletedNotification; ///< Notification key for complete updating a ET_RESERV collection item.
extern NSString * const kDeleteET_RESERVCompletedNotification; ///< Notification key for complete deleting a ET_RESERV item.

extern NSString * const kLoadIMPT_MSUBESetCompletedNotification; ///< Notification key for complete loading of IMPT_MSUBESet items.
extern NSString * const kLoadIMPT_MSUBECompletedNotification; ///< Notification key for complete loading of a specific IMPT_MSUBE item.
extern NSString * const kCreateIMPT_MSUBECompletedNotification; ///< Notification key for complete creating a IMPT_MSUBE collection item.
extern NSString * const kUpdateIMPT_MSUBECompletedNotification; ///< Notification key for complete updating a IMPT_MSUBE collection item.
extern NSString * const kDeleteIMPT_MSUBECompletedNotification; ///< Notification key for complete deleting a IMPT_MSUBE item.











#pragma mark -

/**
 A singleton class responsible for sending the appropriate service requests (for retrieving service data needed by the application views) and parsing the responses into semantic objects, using the ZGARENTA_ARAC_SRV service proxy and the SDMConnectivityHelper class. The sent requests also consider the service URL and the SAP client defined in the application settings. The class is also responsible for sending the appropriate notifications to the application delegate and view controllers, for handling the request success, failure and authentication challenge.
 */
@interface ZGARENTA_ARAC_SRVRequestHandler : NSObject <RequestDelegate, SDMConnectivityHelperDelegate> {
    SDMConnectivityHelper *connectivityHelper;
    ZGARENTA_ARAC_SRVService *service;
    NSString *deviceLanguage;
	ServiceNegotiator *serviceNegotiator;
	SecIdentityRef certificate;
	CSRFData *csrfData;
}

@property (strong, nonatomic, setter = setServiceDocumentURL:) NSString *serviceDocumentURL; ///< ZGARENTA_ARAC_SRV service document URL (used as base URL for service requests). 
@property (strong, nonatomic, setter = setSAPClient:) NSString *client; ///< SAP client (may be empty or nil for default client). 
@property (assign, nonatomic) BOOL useServiceNegotiation; ///< Indicates if the service negotiation process should be performed. This property is considered only when the useLocalMetadata property is set to NO.
@property (assign, nonatomic) BOOL useLocalMetadata; ///< Indicates if the service proxy is initialized using local metadata.
@property (assign, nonatomic) BOOL useJSON; ///< Indicates if the service calls are done using JSON or XML.


/**
 @return ZGARENTA_ARAC_SRVRequestHandler singleton instance.
 */
+ (ZGARENTA_ARAC_SRVRequestHandler *)uniqueInstance;

/**
 @return BOOL indicating if service is valid.
 */
- (BOOL)isServiceValid;

#pragma mark - User Login

/**
 Authenticates the given user name and password against the service, and initiate the service proxy according to the appropriate service URL, metadata and service document. If the useServiceNegotiation propery is YES, the method will also execute the service negotiation as part of the login process.  If the useLocalMetadata propery is YES, the method will use the local service metadata in order to initialize the service proxy object.
 Make sure to call this method before calling any other method of this class for executing service requests.
 If SUP connetivity is required, make sure to set the application and SUP server values in the ConnectivitySettings class, before calling this method.
 For enabling Single Sign On (SSO):
 At the first application run pass the username and password to securely store the user credentials on the device.
 At later calls, pass empty credentials to exctract the stored user credentials. 
 @param aUsername The user name used for the authentication. If domain is required, the username should be in the format: [domain]\[user]
 @param aPassword The password for the provided user name.
 @param error A pointer to an NSError object.
 @return BOOL indicating if authentication succeeded.
 */
- (BOOL)executeLoginWithUsername:(NSString *)aUsername andPassword:(NSString *)aPassword error:(NSError * __autoreleasing *)error;

/**
 Authenticates the client certificate against the service, and initiate the service proxy according to the appropriate service URL, metadata and service document. If the useServiceNegotiation propery is YES, the method will also execute the service negotiation as part of the login process. If the useLocalMetadata propery is YES, the method will use the local service metadata in order to initialize the service proxy object (without service negotiation).
 Make sure to call this method before calling any other method of this class for executing service requests.
 If SUP connetivity is required use the executeLoginWithCertificateWithPassword:andFileName:andFileExtension:error: method.
 @param error A pointer to an NSError object.
 @return BOOL indicating if authentication succeeded.
 */
- (BOOL)executeLoginWithCertificateWithError:(NSError *__autoreleasing *)error;

/**
 Authenticates the client certificate against the service, and initiate the service proxy according to the appropriate service URL, metadata and service document. If the useServiceNegotiation propery is YES, the method will also execute the service negotiation as part of the login process. If the useLocalMetadata propery is YES, the method will use the local service metadata in order to initialize the service proxy object (without service negotiation).
 Make sure to call this method before calling any other method of this class for executing service requests.
 If SUP connetivity is required, make sure to set the application and SUP server values in the ConnectivitySettings class, before calling this method.
 @param aPassword Certificate password.
 @param aFileName Certificate file name.
 @param aFileExtension Certificate file extension.
 @param error A pointer to an NSError object.
 @return BOOL indicating if authentication succeeded.
 */
- (BOOL)executeLoginWithCertificateWithPassword:(NSString *)aPassword andFileName:(NSString *)aFileName andFileExtension:(NSString *)aFileExtension error:(NSError *__autoreleasing *)error;



#pragma mark - Service Negotiation

/**
 Updates the service document URL with the result of the best matching service query of the Gateway service catalog.
 Is performed as part of the login process (in the executeLoginWithUsername:andPassword method), if the useServiceNegotiation propery is YES.
 @param authenticator The implementation of Authenticating protocol according to the required authentication method.
 @param error A pointer to an NSError object.
 @return BOOL indicating if service negotiation succeeded.
 */
- (BOOL)negotiateServiceVersionAndUpdateServiceDocumentUrlUsingAuthenticator:(id <Authenticating>)authenticator error:(NSError * __autoreleasing *)error;

#pragma mark - Batch

/**
 Start a batch request which will aggregate all service calls made through the RequestHandler.
 Call the executeBatch method to execute the aggregated calls in one batch request.
 @param aNotificationName A name to post a notification to once the batch request is completed, can be nil.
 */
- (void)startBatchWithNotificationName:(NSString *)aNotificationName;

/**
 Closes a changeSet and adds requests to new changeSet (in batch request).
 */
- (void)closeExistingChangeSet;

/**
 Executes a batch request, call the startBatchWithNotificationName: before in order to initiate a batch request object.
 */
- (void)executeBatch;




#pragma mark - AvailCarServiceSet methods

/**
 Load the service entity-set AvailCarServiceSet items, parsed into AvailCarService objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadAvailCarServiceSetCompletedNotification for operation completion, along with the array of AvailCarService items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadAvailCarServiceSet;

/**
 Load a specific AvailCarService item, parsed into AvailCarService object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadAvailCarServiceCompletedNotification for operation completion, along with the AvailCarService item given as parameter (for kResponseParentItem key), and the response AvailCarService item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aAvailCarService The specific item to load.
 */
- (void)loadAvailCarService:(AvailCarService *)aAvailCarService;
/**
 Load a specific AvailCarService item, parsed into AvailCarService object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadAvailCarServiceCompletedNotification for operation completion, along with the AvailCarService item given as parameter (for kResponseParentItem key), and the response AvailCarService item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aAvailCarService The specific item to load.
 @param expand Should load the specific item with all its related items (using $expand query parameter)
 */
- (void)loadAvailCarService:(AvailCarService *)aAvailCarService expand:(BOOL)expand;

/**
 Load the ET_ARACLISTESet navigation items for a specific AvailCarService item, parsed into ET_ARACLISTE objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadET_ARACLISTESetForAvailCarServiceCompletedNotification for operation completion, along with the AvailCarService item given as parameter (for kResponseParentItem key), and the array of the ET_ARACLISTE items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aAvailCarService The specific item to load its ET_ARACLISTESet navigation items.
 */
- (void)loadET_ARACLISTESetForAvailCarService:(AvailCarService *)aAvailCarService;

/**
 Load the ET_EXPIRYSet navigation items for a specific AvailCarService item, parsed into ET_EXPIRY objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadET_EXPIRYSetForAvailCarServiceCompletedNotification for operation completion, along with the AvailCarService item given as parameter (for kResponseParentItem key), and the array of the ET_EXPIRY items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aAvailCarService The specific item to load its ET_EXPIRYSet navigation items.
 */
- (void)loadET_EXPIRYSetForAvailCarService:(AvailCarService *)aAvailCarService;

/**
 Load the ET_FIYATSet navigation items for a specific AvailCarService item, parsed into ET_FIYAT objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadET_FIYATSetForAvailCarServiceCompletedNotification for operation completion, along with the AvailCarService item given as parameter (for kResponseParentItem key), and the array of the ET_FIYAT items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aAvailCarService The specific item to load its ET_FIYATSet navigation items.
 */
- (void)loadET_FIYATSetForAvailCarService:(AvailCarService *)aAvailCarService;

/**
 Load the ET_KAMPANYASet navigation items for a specific AvailCarService item, parsed into ET_KAMPANYA objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadET_KAMPANYASetForAvailCarServiceCompletedNotification for operation completion, along with the AvailCarService item given as parameter (for kResponseParentItem key), and the array of the ET_KAMPANYA items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aAvailCarService The specific item to load its ET_KAMPANYASet navigation items.
 */
- (void)loadET_KAMPANYASetForAvailCarService:(AvailCarService *)aAvailCarService;

/**
 Load the ET_RESERVSet navigation items for a specific AvailCarService item, parsed into ET_RESERV objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadET_RESERVSetForAvailCarServiceCompletedNotification for operation completion, along with the AvailCarService item given as parameter (for kResponseParentItem key), and the array of the ET_RESERV items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aAvailCarService The specific item to load its ET_RESERVSet navigation items.
 */
- (void)loadET_RESERVSetForAvailCarService:(AvailCarService *)aAvailCarService;

/**
 Load the ET_INDIRIMLISTSet navigation items for a specific AvailCarService item, parsed into ET_INDIRIMLIST objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadET_INDIRIMLISTSetForAvailCarServiceCompletedNotification for operation completion, along with the AvailCarService item given as parameter (for kResponseParentItem key), and the array of the ET_INDIRIMLIST items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aAvailCarService The specific item to load its ET_INDIRIMLISTSet navigation items.
 */
- (void)loadET_INDIRIMLISTSetForAvailCarService:(AvailCarService *)aAvailCarService;

/**
 Load the IMPT_MSUBESet navigation items for a specific AvailCarService item, parsed into IMPT_MSUBE objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadIMPT_MSUBESetForAvailCarServiceCompletedNotification for operation completion, along with the AvailCarService item given as parameter (for kResponseParentItem key), and the array of the IMPT_MSUBE items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aAvailCarService The specific item to load its IMPT_MSUBESet navigation items.
 */
- (void)loadIMPT_MSUBESetForAvailCarService:(AvailCarService *)aAvailCarService;

/**
 Creates a AvailCarService item and add it to the AvailCarServiceSet.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateAvailCarServiceCompletedNotification for operation completion, along with the AvailCarService item given as parameter (for kResponseParentItem key), and the response AvailCarService item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aAvailCarService The specific item to create.
 */
- (void)createAvailCarService:(AvailCarService *)aAvailCarService;

/**
 Creates a ET_ARACLISTE item for a AvailCarService item (using ET_ARACLISTESet navigation query).
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateET_ARACLISTECompletedNotification for operation completion, along with the ET_ARACLISTE item given as parameter (for kResponseParentItem key), and the response ET_ARACLISTE item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aNewET_ARACLISTE The specific item to create.
 @param aAvailCarService The item which the created item will be associated to.
 */
- (void)createET_ARACLISTE:(ET_ARACLISTE *)aNewET_ARACLISTE forAvailCarService:(AvailCarService *)aAvailCarService;

/**
 Creates a ET_EXPIRY item for a AvailCarService item (using ET_EXPIRYSet navigation query).
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateET_EXPIRYCompletedNotification for operation completion, along with the ET_EXPIRY item given as parameter (for kResponseParentItem key), and the response ET_EXPIRY item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aNewET_EXPIRY The specific item to create.
 @param aAvailCarService The item which the created item will be associated to.
 */
- (void)createET_EXPIRY:(ET_EXPIRY *)aNewET_EXPIRY forAvailCarService:(AvailCarService *)aAvailCarService;

/**
 Creates a ET_FIYAT item for a AvailCarService item (using ET_FIYATSet navigation query).
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateET_FIYATCompletedNotification for operation completion, along with the ET_FIYAT item given as parameter (for kResponseParentItem key), and the response ET_FIYAT item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aNewET_FIYAT The specific item to create.
 @param aAvailCarService The item which the created item will be associated to.
 */
- (void)createET_FIYAT:(ET_FIYAT *)aNewET_FIYAT forAvailCarService:(AvailCarService *)aAvailCarService;

/**
 Creates a ET_KAMPANYA item for a AvailCarService item (using ET_KAMPANYASet navigation query).
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateET_KAMPANYACompletedNotification for operation completion, along with the ET_KAMPANYA item given as parameter (for kResponseParentItem key), and the response ET_KAMPANYA item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aNewET_KAMPANYA The specific item to create.
 @param aAvailCarService The item which the created item will be associated to.
 */
- (void)createET_KAMPANYA:(ET_KAMPANYA *)aNewET_KAMPANYA forAvailCarService:(AvailCarService *)aAvailCarService;

/**
 Creates a ET_RESERV item for a AvailCarService item (using ET_RESERVSet navigation query).
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateET_RESERVCompletedNotification for operation completion, along with the ET_RESERV item given as parameter (for kResponseParentItem key), and the response ET_RESERV item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aNewET_RESERV The specific item to create.
 @param aAvailCarService The item which the created item will be associated to.
 */
- (void)createET_RESERV:(ET_RESERV *)aNewET_RESERV forAvailCarService:(AvailCarService *)aAvailCarService;

/**
 Creates a ET_INDIRIMLIST item for a AvailCarService item (using ET_INDIRIMLISTSet navigation query).
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateET_INDIRIMLISTCompletedNotification for operation completion, along with the ET_INDIRIMLIST item given as parameter (for kResponseParentItem key), and the response ET_INDIRIMLIST item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aNewET_INDIRIMLIST The specific item to create.
 @param aAvailCarService The item which the created item will be associated to.
 */
- (void)createET_INDIRIMLIST:(ET_INDIRIMLIST *)aNewET_INDIRIMLIST forAvailCarService:(AvailCarService *)aAvailCarService;

/**
 Creates a IMPT_MSUBE item for a AvailCarService item (using IMPT_MSUBESet navigation query).
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateIMPT_MSUBECompletedNotification for operation completion, along with the IMPT_MSUBE item given as parameter (for kResponseParentItem key), and the response IMPT_MSUBE item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aNewIMPT_MSUBE The specific item to create.
 @param aAvailCarService The item which the created item will be associated to.
 */
- (void)createIMPT_MSUBE:(IMPT_MSUBE *)aNewIMPT_MSUBE forAvailCarService:(AvailCarService *)aAvailCarService;

/**
 Updates a AvailCarService item in the AvailCarServiceSet.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateAvailCarServiceCompletedNotification for operation completion, along with the AvailCarService item given as parameter (for kResponseParentItem key), and the response AvailCarService item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aAvailCarService The specific item to update.
 */
- (void)updateAvailCarService:(AvailCarService *)aAvailCarService;

/**
 Deletes a specific AvailCarService item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteAvailCarServiceCompletedNotification for operation completion, along with the AvailCarService item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aAvailCarService The specific item to delete.
 */
- (void)deleteAvailCarService:(AvailCarService *)aAvailCarService;

#pragma mark - ET_ARACLISTESet methods

/**
 Load the service entity-set ET_ARACLISTESet items, parsed into ET_ARACLISTE objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadET_ARACLISTESetCompletedNotification for operation completion, along with the array of ET_ARACLISTE items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadET_ARACLISTESet;

/**
 Load a specific ET_ARACLISTE item, parsed into ET_ARACLISTE object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadET_ARACLISTECompletedNotification for operation completion, along with the ET_ARACLISTE item given as parameter (for kResponseParentItem key), and the response ET_ARACLISTE item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_ARACLISTE The specific item to load.
 */
- (void)loadET_ARACLISTE:(ET_ARACLISTE *)aET_ARACLISTE;

/**
 Creates a ET_ARACLISTE item and add it to the ET_ARACLISTESet.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateET_ARACLISTECompletedNotification for operation completion, along with the ET_ARACLISTE item given as parameter (for kResponseParentItem key), and the response ET_ARACLISTE item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_ARACLISTE The specific item to create.
 */
- (void)createET_ARACLISTE:(ET_ARACLISTE *)aET_ARACLISTE;

/**
 Updates a ET_ARACLISTE item in the ET_ARACLISTESet.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateET_ARACLISTECompletedNotification for operation completion, along with the ET_ARACLISTE item given as parameter (for kResponseParentItem key), and the response ET_ARACLISTE item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_ARACLISTE The specific item to update.
 */
- (void)updateET_ARACLISTE:(ET_ARACLISTE *)aET_ARACLISTE;

/**
 Deletes a specific ET_ARACLISTE item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteET_ARACLISTECompletedNotification for operation completion, along with the ET_ARACLISTE item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_ARACLISTE The specific item to delete.
 */
- (void)deleteET_ARACLISTE:(ET_ARACLISTE *)aET_ARACLISTE;

#pragma mark - ET_EXPIRYSet methods

/**
 Load the service entity-set ET_EXPIRYSet items, parsed into ET_EXPIRY objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadET_EXPIRYSetCompletedNotification for operation completion, along with the array of ET_EXPIRY items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadET_EXPIRYSet;

/**
 Load a specific ET_EXPIRY item, parsed into ET_EXPIRY object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadET_EXPIRYCompletedNotification for operation completion, along with the ET_EXPIRY item given as parameter (for kResponseParentItem key), and the response ET_EXPIRY item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_EXPIRY The specific item to load.
 */
- (void)loadET_EXPIRY:(ET_EXPIRY *)aET_EXPIRY;

/**
 Creates a ET_EXPIRY item and add it to the ET_EXPIRYSet.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateET_EXPIRYCompletedNotification for operation completion, along with the ET_EXPIRY item given as parameter (for kResponseParentItem key), and the response ET_EXPIRY item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_EXPIRY The specific item to create.
 */
- (void)createET_EXPIRY:(ET_EXPIRY *)aET_EXPIRY;

/**
 Updates a ET_EXPIRY item in the ET_EXPIRYSet.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateET_EXPIRYCompletedNotification for operation completion, along with the ET_EXPIRY item given as parameter (for kResponseParentItem key), and the response ET_EXPIRY item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_EXPIRY The specific item to update.
 */
- (void)updateET_EXPIRY:(ET_EXPIRY *)aET_EXPIRY;

/**
 Deletes a specific ET_EXPIRY item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteET_EXPIRYCompletedNotification for operation completion, along with the ET_EXPIRY item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_EXPIRY The specific item to delete.
 */
- (void)deleteET_EXPIRY:(ET_EXPIRY *)aET_EXPIRY;

#pragma mark - ET_FIYATSet methods

/**
 Load the service entity-set ET_FIYATSet items, parsed into ET_FIYAT objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadET_FIYATSetCompletedNotification for operation completion, along with the array of ET_FIYAT items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadET_FIYATSet;

/**
 Load a specific ET_FIYAT item, parsed into ET_FIYAT object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadET_FIYATCompletedNotification for operation completion, along with the ET_FIYAT item given as parameter (for kResponseParentItem key), and the response ET_FIYAT item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_FIYAT The specific item to load.
 */
- (void)loadET_FIYAT:(ET_FIYAT *)aET_FIYAT;

/**
 Creates a ET_FIYAT item and add it to the ET_FIYATSet.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateET_FIYATCompletedNotification for operation completion, along with the ET_FIYAT item given as parameter (for kResponseParentItem key), and the response ET_FIYAT item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_FIYAT The specific item to create.
 */
- (void)createET_FIYAT:(ET_FIYAT *)aET_FIYAT;

/**
 Updates a ET_FIYAT item in the ET_FIYATSet.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateET_FIYATCompletedNotification for operation completion, along with the ET_FIYAT item given as parameter (for kResponseParentItem key), and the response ET_FIYAT item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_FIYAT The specific item to update.
 */
- (void)updateET_FIYAT:(ET_FIYAT *)aET_FIYAT;

/**
 Deletes a specific ET_FIYAT item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteET_FIYATCompletedNotification for operation completion, along with the ET_FIYAT item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_FIYAT The specific item to delete.
 */
- (void)deleteET_FIYAT:(ET_FIYAT *)aET_FIYAT;

#pragma mark - ET_INDIRIMLISTSet methods

/**
 Load the service entity-set ET_INDIRIMLISTSet items, parsed into ET_INDIRIMLIST objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadET_INDIRIMLISTSetCompletedNotification for operation completion, along with the array of ET_INDIRIMLIST items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadET_INDIRIMLISTSet;

/**
 Load a specific ET_INDIRIMLIST item, parsed into ET_INDIRIMLIST object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadET_INDIRIMLISTCompletedNotification for operation completion, along with the ET_INDIRIMLIST item given as parameter (for kResponseParentItem key), and the response ET_INDIRIMLIST item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_INDIRIMLIST The specific item to load.
 */
- (void)loadET_INDIRIMLIST:(ET_INDIRIMLIST *)aET_INDIRIMLIST;

/**
 Creates a ET_INDIRIMLIST item and add it to the ET_INDIRIMLISTSet.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateET_INDIRIMLISTCompletedNotification for operation completion, along with the ET_INDIRIMLIST item given as parameter (for kResponseParentItem key), and the response ET_INDIRIMLIST item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_INDIRIMLIST The specific item to create.
 */
- (void)createET_INDIRIMLIST:(ET_INDIRIMLIST *)aET_INDIRIMLIST;

/**
 Updates a ET_INDIRIMLIST item in the ET_INDIRIMLISTSet.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateET_INDIRIMLISTCompletedNotification for operation completion, along with the ET_INDIRIMLIST item given as parameter (for kResponseParentItem key), and the response ET_INDIRIMLIST item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_INDIRIMLIST The specific item to update.
 */
- (void)updateET_INDIRIMLIST:(ET_INDIRIMLIST *)aET_INDIRIMLIST;

/**
 Deletes a specific ET_INDIRIMLIST item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteET_INDIRIMLISTCompletedNotification for operation completion, along with the ET_INDIRIMLIST item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_INDIRIMLIST The specific item to delete.
 */
- (void)deleteET_INDIRIMLIST:(ET_INDIRIMLIST *)aET_INDIRIMLIST;

#pragma mark - ET_KAMPANYASet methods

/**
 Load the service entity-set ET_KAMPANYASet items, parsed into ET_KAMPANYA objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadET_KAMPANYASetCompletedNotification for operation completion, along with the array of ET_KAMPANYA items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadET_KAMPANYASet;

/**
 Load a specific ET_KAMPANYA item, parsed into ET_KAMPANYA object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadET_KAMPANYACompletedNotification for operation completion, along with the ET_KAMPANYA item given as parameter (for kResponseParentItem key), and the response ET_KAMPANYA item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_KAMPANYA The specific item to load.
 */
- (void)loadET_KAMPANYA:(ET_KAMPANYA *)aET_KAMPANYA;

/**
 Creates a ET_KAMPANYA item and add it to the ET_KAMPANYASet.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateET_KAMPANYACompletedNotification for operation completion, along with the ET_KAMPANYA item given as parameter (for kResponseParentItem key), and the response ET_KAMPANYA item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_KAMPANYA The specific item to create.
 */
- (void)createET_KAMPANYA:(ET_KAMPANYA *)aET_KAMPANYA;

/**
 Updates a ET_KAMPANYA item in the ET_KAMPANYASet.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateET_KAMPANYACompletedNotification for operation completion, along with the ET_KAMPANYA item given as parameter (for kResponseParentItem key), and the response ET_KAMPANYA item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_KAMPANYA The specific item to update.
 */
- (void)updateET_KAMPANYA:(ET_KAMPANYA *)aET_KAMPANYA;

/**
 Deletes a specific ET_KAMPANYA item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteET_KAMPANYACompletedNotification for operation completion, along with the ET_KAMPANYA item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_KAMPANYA The specific item to delete.
 */
- (void)deleteET_KAMPANYA:(ET_KAMPANYA *)aET_KAMPANYA;

#pragma mark - ET_RESERVSet methods

/**
 Load the service entity-set ET_RESERVSet items, parsed into ET_RESERV objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadET_RESERVSetCompletedNotification for operation completion, along with the array of ET_RESERV items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadET_RESERVSet;

/**
 Load a specific ET_RESERV item, parsed into ET_RESERV object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadET_RESERVCompletedNotification for operation completion, along with the ET_RESERV item given as parameter (for kResponseParentItem key), and the response ET_RESERV item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_RESERV The specific item to load.
 */
- (void)loadET_RESERV:(ET_RESERV *)aET_RESERV;

/**
 Creates a ET_RESERV item and add it to the ET_RESERVSet.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateET_RESERVCompletedNotification for operation completion, along with the ET_RESERV item given as parameter (for kResponseParentItem key), and the response ET_RESERV item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_RESERV The specific item to create.
 */
- (void)createET_RESERV:(ET_RESERV *)aET_RESERV;

/**
 Updates a ET_RESERV item in the ET_RESERVSet.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateET_RESERVCompletedNotification for operation completion, along with the ET_RESERV item given as parameter (for kResponseParentItem key), and the response ET_RESERV item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_RESERV The specific item to update.
 */
- (void)updateET_RESERV:(ET_RESERV *)aET_RESERV;

/**
 Deletes a specific ET_RESERV item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteET_RESERVCompletedNotification for operation completion, along with the ET_RESERV item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aET_RESERV The specific item to delete.
 */
- (void)deleteET_RESERV:(ET_RESERV *)aET_RESERV;

#pragma mark - IMPT_MSUBESet methods

/**
 Load the service entity-set IMPT_MSUBESet items, parsed into IMPT_MSUBE objects. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadIMPT_MSUBESetCompletedNotification for operation completion, along with the array of IMPT_MSUBE items (for kResponseItems key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 */
- (void)loadIMPT_MSUBESet;

/**
 Load a specific IMPT_MSUBE item, parsed into IMPT_MSUBE object. 
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kLoadIMPT_MSUBECompletedNotification for operation completion, along with the IMPT_MSUBE item given as parameter (for kResponseParentItem key), and the response IMPT_MSUBE item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aIMPT_MSUBE The specific item to load.
 */
- (void)loadIMPT_MSUBE:(IMPT_MSUBE *)aIMPT_MSUBE;

/**
 Creates a IMPT_MSUBE item and add it to the IMPT_MSUBESet.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kCreateIMPT_MSUBECompletedNotification for operation completion, along with the IMPT_MSUBE item given as parameter (for kResponseParentItem key), and the response IMPT_MSUBE item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aIMPT_MSUBE The specific item to create.
 */
- (void)createIMPT_MSUBE:(IMPT_MSUBE *)aIMPT_MSUBE;

/**
 Updates a IMPT_MSUBE item in the IMPT_MSUBESet.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kUpdateIMPT_MSUBECompletedNotification for operation completion, along with the IMPT_MSUBE item given as parameter (for kResponseParentItem key), and the response IMPT_MSUBE item (for kResponseItem key) or parsing error (for kParsingError key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aIMPT_MSUBE The specific item to update.
 */
- (void)updateIMPT_MSUBE:(IMPT_MSUBE *)aIMPT_MSUBE;

/**
 Deletes a specific IMPT_MSUBE item from its collection.
 May send notifications with the following keys and associated objects (as userInfo dictionary):
 - kDeleteIMPT_MSUBECompletedNotification for operation completion, along with the IMPT_MSUBE item given as parameter (for kResponseParentItem key) or server response error (for kServerResponseError).
 - kAuthenticationNeededNotification for request authentication challenge.
 @param aIMPT_MSUBE The specific item to delete.
 */
- (void)deleteIMPT_MSUBE:(IMPT_MSUBE *)aIMPT_MSUBE;

#pragma mark - Function Import methods



@end
