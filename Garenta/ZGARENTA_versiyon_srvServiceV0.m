/*
 
 Auto-Generated by SAP NetWeaver Gateway Productivity Accelerator, Version 1.1.1
  
 File: ZGARENTA_versiyon_srvServiceV0.h
 Abstract: The generated proxy classes for the ZGARENTA_versiyon_srv Service.  
*/

#import "ZGARENTA_versiyon_srvServiceV0.h"
#import "BaseODataObject.h"
#import "Logger.h"
#import "ODataEntitySchema.h"
#import "ODataCollection.h"
#import "ODataFunctionImport.h"
#import "TypeConverter.h"

#define ZGARENTA_VERSIYON_SRV_SERVICE_DOCUMENTV0 @"ZGARENTA_versiyon_srvServiceDocumentV0"
#define ZGARENTA_VERSIYON_SRV_SERVICE_METADATAV0 @"ZGARENTA_versiyon_srvServiceMetadataV0"

#pragma mark - Complex Types



#pragma mark - Entity Types


#pragma mark - VersiyonServiceV0
@implementation VersiyonServiceV0

static NSMutableDictionary *versiyonServiceLabels = nil;
static ODataEntitySchema *versiyonServiceEntitySchema = nil;

- (id)init
{
    self = [super init];
    if (self) {
        m_SDMEntry = [BaseEntityType createEmptyODataEntryWithSchema:versiyonServiceEntitySchema error:nil];
        if (!m_SDMEntry) {
            return nil;
        }        
        m_properties = nil;
        self.baseUrl = nil;
    }
    return self;
}



- (ODataEntry *)buildSDMEntryFromPropertiesAndReturnError:(NSError **)error
{
    if (m_SDMEntry) {
        NSError *innerError = nil;
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.IAppName forSDMPropertyWithName:@"IAppName" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.IVers forSDMPropertyWithName:@"IVers" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.EReturn forSDMPropertyWithName:@"EReturn" error:&innerError];
    	[BaseODataObject setStringValueForSDMEntry:m_SDMEntry withValue:self.ELink forSDMPropertyWithName:@"ELink" error:&innerError];
        if (innerError) {
            if (error) {
                *error = innerError;
            }
            return nil;
        }
	}
    return m_SDMEntry;
}

+ (void)loadEntitySchema:(ODataServiceDocument *)aService
{
    ODataCollection *collectionSchema = [aService.schema getCollectionByName:@"VersiyonService" workspaceOfCollection:nil];
    versiyonServiceEntitySchema = collectionSchema.entitySchema;
}

+ (void)loadLabels:(ODataServiceDocument *)aService
{
		NSMutableDictionary *properties = [BaseODataObject getSchemaPropertiesFromCollection:@"VersiyonService" andService:aService];
    	if (properties) {    
	    	versiyonServiceLabels = [@{} mutableCopy];
	    	for (ODataPropertyInfo *property in [properties allValues]) {
	        	versiyonServiceLabels[property.name] = property.label;;
	    	}
	    }
	    else {
        	LOGERROR(@"Failed to load SAP labels from service metadata");
    	}
}


+ (NSString *)getLabelForProperty:(NSString *)aPropertyName
{
    return [BaseODataObject getLabelFromDictionary:versiyonServiceLabels forProperty:aPropertyName];
}

- (void)loadProperties
{
    [super loadProperties];
	self.IAppName = [self getStringValueForSDMPropertyWithName:@"IAppName"];
	self.IVers = [self getStringValueForSDMPropertyWithName:@"IVers"];
	self.EReturn = [self getStringValueForSDMPropertyWithName:@"EReturn"];
	self.ELink = [self getStringValueForSDMPropertyWithName:@"ELink"];
}

+ (NSMutableArray *)createVersiyonServiceEntriesForSDMEntries:(NSMutableArray *)sdmEntries
{
    NSMutableArray *entries = [@[] mutableCopy];
    for (ODataEntry *entry in sdmEntries) {
        VersiyonServiceV0 *versiyonServiceObject = [[VersiyonServiceV0 alloc] initWithSDMEntry:entry];
        [entries addObject:versiyonServiceObject];
    }
    return entries;
}


+ (NSMutableArray *)parseVersiyonServiceEntriesWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getSDMEntriesForEntitySchema:versiyonServiceEntitySchema andData:aData error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [VersiyonServiceV0 createVersiyonServiceEntriesForSDMEntries:sdmEntries];
}

+ (NSMutableArray *)parseExpandedVersiyonServiceEntriesWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
    NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:versiyonServiceEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    if (!sdmEntries) {
    	return nil;
    }
	return [VersiyonServiceV0 createVersiyonServiceEntriesForSDMEntries:sdmEntries];
}

+ (VersiyonServiceV0 *)parseVersiyonServiceEntryWithData:(NSData *)aData error:(NSError **)error
{
    NSMutableArray *versiyonServiceEntries = [VersiyonServiceV0 parseVersiyonServiceEntriesWithData:aData error:error];
    if (!versiyonServiceEntries) {
    	return nil;
    }
    return (VersiyonServiceV0 *)[VersiyonServiceV0 getFirstObjectFromArray:versiyonServiceEntries];
}

+ (VersiyonServiceV0 *)parseExpandedVersiyonServiceEntryWithData:(NSData *)aData andServiceDocument:(ODataServiceDocument *)aServiceDocument error:(NSError **)error
{
	NSMutableArray *sdmEntries = [BaseEntityType getExpandedSDMEntriesForEntitySchema:versiyonServiceEntitySchema andData:aData andServiceDocument:aServiceDocument error:error];
    NSMutableArray *versiyonServiceEntries = [VersiyonServiceV0 createVersiyonServiceEntriesForSDMEntries:sdmEntries];
	return (VersiyonServiceV0 *)[VersiyonServiceV0 getFirstObjectFromArray:versiyonServiceEntries];
}



@end


#pragma mark - ZGARENTA_versiyon_srvV0 Service Proxy


@implementation ZGARENTA_versiyon_srvServiceV0

- (NSString *)getServiceDocumentFilename
{
	return ZGARENTA_VERSIYON_SRV_SERVICE_DOCUMENTV0;
}

- (NSString *)getServiceMetadataFilename
{
	return ZGARENTA_VERSIYON_SRV_SERVICE_METADATAV0;
}

- (void)loadEntitySetQueries
{
	[super loadEntitySetQueries];
    self.VersiyonServiceQuery = [self getQueryForRelativePath:@"VersiyonService"];
}

- (void)loadEntitySchemaForAllEntityTypes
{
    [super loadEntitySchemaForAllEntityTypes];
    [VersiyonServiceV0 loadEntitySchema:self.sdmServiceDocument];
}

- (void)loadLabels
{
    [super loadLabels];
    [VersiyonServiceV0 loadLabels:self.sdmServiceDocument];
}

 
#pragma mark Service Entity Set methods
- (NSMutableArray *)getVersiyonServiceWithData:(NSData *)aData error:(NSError **)error
{
	return [VersiyonServiceV0 parseExpandedVersiyonServiceEntriesWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}

- (ODataQuery *)getVersiyonServiceEntryQueryWithIAppName:(NSString *)IAppName andIVers:(NSString *)IVers
{
	IAppName = [ODataQuery encodeURLParameter:IAppName];
	IVers = [ODataQuery encodeURLParameter:IVers];
	NSString *relativePath = [NSString stringWithFormat:@"VersiyonService(IAppName=%@,IVers=%@)", IAppName, IVers];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (ODataQuery *)getVersiyonServiceEntryQueryTypedWithIAppName:(NSString *)IAppName andIVers:(NSString *)IVers
{
	id <URITypeConverting> converter = [ODataURITypeConverter uniqueInstance];
	NSString *IAppNameUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:IAppName]];
	NSString *IVersUri = [ODataQuery encodeURLParameter:[converter convertToEdmStringURI:IVers]];
	NSString *relativePath = [NSString stringWithFormat:@"VersiyonService(IAppName=%@,IVers=%@)", IAppNameUri, IVersUri];
	ODataQuery *query = [self getQueryForRelativePath:relativePath];
	return query;
}

- (VersiyonServiceV0 *)getVersiyonServiceEntryWithData:(NSData *)aData error:(NSError **)error
{
	return [VersiyonServiceV0 parseExpandedVersiyonServiceEntryWithData:aData andServiceDocument:self.sdmServiceDocument error:error];
}



#pragma mark Service Function Import methods 

@end
